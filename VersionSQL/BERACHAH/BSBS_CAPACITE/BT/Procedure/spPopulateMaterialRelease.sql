/****** Object:  Procedure [BT].[spPopulateMaterialRelease]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BT].[spPopulateMaterialRelease](@PROJECTID INT,@TOOLCODE VARCHAR(15))
AS
  DECLARE @FORPURCHASEQTY DECIMAL(18,4)
  DECLARE @FORPURCHASEAMOUNT DECIMAL(18,4) 
  DECLARE @TOTALRELEASED DECIMAL(18,4)  
  DECLARE @CUMBUG DECIMAL(18,4)

  SET @FORPURCHASEQTY=0
  SET @FORPURCHASEAMOUNT=0

  SELECT @FORPURCHASEQTY=ISNULL(CUMULATIVEQTY,0),
         @FORPURCHASEAMOUNT=ISNULL(BUDGETAMOUNT,0) 
		 FROM BT.MonthlyMaterialBudget WHERE PROJECTCODE= @PROJECTID AND TOOLCODE=@TOOLCODE

  SELECT M.TOOLCODE,TN.TEMPLATENAME,TN.CATEGORY,TN.UOM,D.MONTHID,SUM(D.BUDGETQTY) BUDGETQTY,AVG(D.BudgetRate) BUDGETRATE,SUM(D.BudgetAmount) BUDGETAMOUNT,Y.[YEAR]  , Y.[MONTHNAME]  
  INTO #BUDGETDISTRIBUTION
  FROM BT.ProjectMaterialBudgetMaster M 
  INNER JOIN BT.MasterMaterialBudget TN  ON M.TOOLCODE=TN.TEMPLATECODE
  INNER JOIN BT.ProjectMaterialBudgetDetail D ON D.ProjectMaterialBudgetID=M.ProjectMaterialBudgetCode
  INNER JOIN BT.YearPeriodMaster Y ON Y.YearPeriodID = D.MONTHID 
  WHERE M.ProjectCode=@PROJECTID  AND TOOLCODE=@TOOLCODE 
  GROUP BY TOOLCODE,TEMPLATENAME,CATEGORY,UOM,MONTHID,[YEAR],[MONTHNAME]
  ORDER BY YEAR,MONTHID,MONTHNAME 

  --MODIFIED SUM(D.BUDGETRATE) AS  D.BUDGETRATE 

  --SELECT M.TOOLCODE,TN.TEMPLATENAME,TN.CATEGORY,TN.UOM,D.MONTHID,SUM(D.BUDGETQTY) BUDGETQTY,D.BudgetRate BUDGETRATE,SUM(D.BudgetAmount) BUDGETAMOUNT,Y.[YEAR]  , Y.[MONTHNAME]  
  --INTO #BUDGETDISTRIBUTION
  --FROM BT.ProjectMaterialBudgetMaster M 
  --INNER JOIN BT.MasterMaterialBudget TN  ON M.TOOLCODE=TN.TEMPLATECODE
  --INNER JOIN BT.ProjectMaterialBudgetDetail D ON D.ProjectMaterialBudgetID=M.ProjectMaterialBudgetCode
  --INNER JOIN BT.YearPeriodMaster Y ON Y.YearPeriodID = D.MONTHID 
  --WHERE M.ProjectCode=@PROJECTID  AND TOOLCODE=@TOOLCODE 
  --GROUP BY TOOLCODE,TEMPLATENAME,CATEGORY,UOM,MONTHID,[YEAR],[MONTHNAME],D.BudgetRate
  --ORDER BY YEAR,MONTHID,MONTHNAME 

  ALTER TABLE #BUDGETDISTRIBUTION ADD CUMULATIVEBUDGET DECIMAL(18,4) 
  UPDATE #BUDGETDISTRIBUTION SET CUMULATIVEBUDGET=0
  UPDATE #BUDGETDISTRIBUTION SET CUMULATIVEBUDGET = BUDGETQTY WHERE UOM='Q'
  UPDATE #BUDGETDISTRIBUTION SET CUMULATIVEBUDGET = BUDGETAMOUNT WHERE UOM='L' 

  --SELECT * FROM #BUDGETDISTRIBUTION  ORDER BY YEAR,MONTHID,MONTHNAME 


  SELECT  TOOLCODE , TEMPLATENAME , CATEGORY , UOM  ,ISNULL(SUM(BUDGETQTY),0) BUDGETQTY,ISNULL(SUM(BudgetAmount),0) BudgetAmount 
  INTO #TOTALBUDGETDETAILS
  FROM #BUDGETDISTRIBUTION
  GROUP BY  TOOLCODE , TEMPLATENAME , CATEGORY , UOM
  ORDER BY TOOLCODE
  ALTER TABLE #TOTALBUDGETDETAILS ADD BUDGETCATEGORY VARCHAR(25)
  ALTER TABLE #TOTALBUDGETDETAILS ADD BUDGETVALUE DECIMAL(18,4) 
  UPDATE #TOTALBUDGETDETAILS SET BUDGETVALUE=0
  UPDATE #TOTALBUDGETDETAILS SET BUDGETCATEGORY = 'Quantity Based' WHERE UOM='Q'
  UPDATE #TOTALBUDGETDETAILS SET BUDGETCATEGORY = 'Lumpsum Based ' WHERE UOM='L'
  UPDATE #TOTALBUDGETDETAILS SET BUDGETVALUE = BUDGETAMOUNT WHERE  UOM='L'
  UPDATE #TOTALBUDGETDETAILS SET BUDGETVALUE = BUDGETQTY    WHERE  UOM='Q'


  ALTER TABLE #TOTALBUDGETDETAILS ADD FORPURCHASEQTY DECIMAL(18,4) 
  ALTER TABLE #TOTALBUDGETDETAILS ADD FORPURCHASEAMOUNT DECIMAL(18,4)
  UPDATE #TOTALBUDGETDETAILS SET FORPURCHASEQTY=0,FORPURCHASEAMOUNT=0
  UPDATE #TOTALBUDGETDETAILS SET FORPURCHASEQTY=@FORPURCHASEQTY,FORPURCHASEAMOUNT=@FORPURCHASEAMOUNT
  ALTER TABLE #TOTALBUDGETDETAILS ADD FORPURCHASEVALUE DECIMAL(18,4) 
  UPDATE #TOTALBUDGETDETAILS SET FORPURCHASEVALUE=0
  UPDATE #TOTALBUDGETDETAILS SET FORPURCHASEVALUE = FORPURCHASEQTY WHERE UOM='Q'
  UPDATE #TOTALBUDGETDETAILS SET FORPURCHASEVALUE = FORPURCHASEAMOUNT WHERE UOM='L' 

 
 

  SELECT R.RELEASEDATE,Y.[YEAR], Y.[MONTHNAME],ISNULL(R.RELEASEQTY ,0) RELEASEQTY
	INTO #RELEASEHISTORY
	FROM BT.RELEASESUMMARY R
	INNER JOIN BT.YearPeriodMaster Y ON R.YEARPERIODID = Y.YEARPERIODID 
	WHERE R.ProjectCode=@PROJECTID  AND R.TOOLCODE=@TOOLCODE 
 
 SELECT @TOTALRELEASED = 0
 SELECT @TOTALRELEASED =ISNULL(SUM(RELEASEQTY),0) FROM #RELEASEHISTORY

 
 

 CREATE TABLE #RELEASEPERIODS(MONTHID INT,PERIODID INT,PERIODNAME VARCHAR(35))
 INSERT INTO #RELEASEPERIODS 
 SELECT DISTINCT                    MONTHID,YEAR,MONTHNAME   FROM #BUDGETDISTRIBUTION
 

 

 ALTER TABLE #RELEASEPERIODS ADD CUMULATIVEBUDGET DECIMAL(18,4) 
 UPDATE #RELEASEPERIODS SET CUMULATIVEBUDGET=0
 UPDATE #RELEASEPERIODS 
 SET CUMULATIVEBUDGET =BD.CUMULATIVEBUDGET 
 FROM #BUDGETDISTRIBUTION BD
 INNER JOIN #RELEASEPERIODS ON  #RELEASEPERIODS.MONTHID = BD.MonthID 

  --select * from #RELEASEPERIODS

 DECLARE @I INT 
 DECLARE @J INT 
 DECLARE @SUMAMOUNT DECIMAL(18,4) 
 SELECT @I = MIN(MONTHID),@J=MAX(MONTHID)  FROM #RELEASEPERIODS
 SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #RELEASEPERIODS WHERE MONTHID=@I 

 --select @i,@j,@SUMAMOUNT 

 SET @I=@I+1
 WHILE @I<=@J 
 BEGIN
   UPDATE #RELEASEPERIODS SET CUMULATIVEBUDGET = @SUMAMOUNT+ CUMULATIVEBUDGET WHERE MONTHID=@I 
   SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #RELEASEPERIODS  WHERE MONTHID=@I 
   SET @I = @I+1
 END
  --select * from #RELEASEPERIODS

 --- REMOVE ENTRIES TILL THE BUDGET RELEASED
 SELECT @I = MIN(MONTHID),@J=MAX(MONTHID)  FROM #RELEASEPERIODS
 WHILE @I<=@J
 BEGIN
   SELECT @CUMBUG = CUMULATIVEBUDGET FROM #RELEASEPERIODS WHERE MONTHID=@I 
   IF (@CUMBUG <= @TOTALRELEASED) 
       DELETE FROM #RELEASEPERIODS  WHERE MONTHID=@I  
   ELSE
       BEGIN
	      UPDATE #RELEASEPERIODS SET CUMULATIVEBUDGET = CUMULATIVEBUDGET-@TOTALRELEASED WHERE MONTHID=@I 
		  UPDATE #RELEASEPERIODS SET CUMULATIVEBUDGET =BD.CUMULATIVEBUDGET  FROM #BUDGETDISTRIBUTION BD
                 INNER JOIN #RELEASEPERIODS ON  #RELEASEPERIODS.MONTHID = BD.MonthID WHERE #RELEASEPERIODS.MONTHID>@I
		  BREAK;
	   END
   SET @I = @I+1
 END 

 -- RECOMPUTE THE CUMULATIVE ONCE AGAIN

 SELECT @I = MIN(MONTHID),@J=MAX(MONTHID)  FROM #RELEASEPERIODS
 SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #RELEASEPERIODS WHERE MONTHID=@I 

 SET @I=@I+1
 WHILE @I<=@J 
 BEGIN
   UPDATE #RELEASEPERIODS SET CUMULATIVEBUDGET = @SUMAMOUNT+ CUMULATIVEBUDGET WHERE MONTHID=@I 
   SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #RELEASEPERIODS  WHERE MONTHID=@I 
   SET @I = @I+1
 END





  
 SELECT @I = MIN(MONTHID),@J=MAX(MONTHID)  FROM #BUDGETDISTRIBUTION
 SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #BUDGETDISTRIBUTION WHERE MONTHID=@I 
 SET @I=@I+1
 WHILE @I<=@J 
 BEGIN
   UPDATE #BUDGETDISTRIBUTION SET CUMULATIVEBUDGET = @SUMAMOUNT+ CUMULATIVEBUDGET WHERE MONTHID=@I 
   SELECT @SUMAMOUNT = CUMULATIVEBUDGET FROM #BUDGETDISTRIBUTION  WHERE MONTHID=@I 
   SET @I = @I+1
 END
 
 CREATE TABLE #RELEASEORDERS(MONTHID INT, PERIODNAME VARCHAR(50), CUMULATIVEBUDGET DECIMAL(18,4)) 
 INSERT INTO #RELEASEORDERS
 SELECT MONTHID,LTRIM(RTRIM(STR(PERIODID)))+'-'+LEFT(PERIODNAME,3)  AS PERIODNAME   ,CUMULATIVEBUDGET   FROM #RELEASEPERIODS   
 INSERT INTO #RELEASEORDERS(MONTHID,PERIODNAME,CUMULATIVEBUDGET) 
 VALUES(0,'PLEASE SELECT',0)


 -- RETURNS 
 SELECT TOOLCODE,CATEGORY AS UOM,BUDGETCATEGORY,BUDGETVALUE,@TOTALRELEASED TOTALRELEASED ,FORPURCHASEVALUE FROM #TOTALBUDGETDETAILS
 SELECT YEAR,MONTHNAME,BUDGETQTY,BUDGETRATE,BUDGETAMOUNT,CUMULATIVEBUDGET  FROM #BUDGETDISTRIBUTION  ORDER BY MONTHID
 SELECT * FROM #RELEASEHISTORY
 SELECT * FROM #RELEASEORDERS ORDER BY MONTHID 