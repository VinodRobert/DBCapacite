/****** Object:  Procedure [BT].[LOGMATERAILMOVEMENT]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BT].[LOGMATERAILMOVEMENT]
--(@PROJECTID INT,@TOOLCODE VARCHAR(15),@QTY DECIMAL(18,2),@RATE DECIMAL(18,2),@AMOUNT DECIMAL(18,2))
AS

DELETE FROM BT.MATERIALMOVEMENT
DBCC CHECKIDENT("BT.MATERIALMOVEMENT",RESEED,0)

DELETE FROM BT.MATERIALMOVEMENTDETAIL
DBCC CHECKIDENT("BT.MATERIALMOVEMENTDETAIL",RESEED,0)


DECLARE @PROJECTCODE INT
DECLARE @TOOLCODE VARCHAR(15)
DECLARE @BUDGETQTY DECIMAL(18,4)
DECLARE @BUDGETRATE DECIMAL(18,2)
DECLARE @BUDGETAMOUNT DECIMAL(18,2)
DECLARE @FOUND INT
DECLARE @INDEXCODE INT
DECLARE @MATERIALBUDGETCODE INT
DECLARE @RELEASEQTY DECIMAL(18,4)
DECLARE @RELEASEAMOUNT DECIMAL(18,2)
DECLARE @RELEASERATE DECIMAL(18,2)
DECLARE @TENDERID INT 
DECLARE @LASTINDEXCODE INT 
DECLARE @BORGID INT 
DECLARE @TOTALDELIVERYQTY DECIMAL(18,4)
DECLARE @ORDID INT 
DECLARE @LINENUMBER INT
DECLARE @TOTALREQUEST DECIMAL(18,4) 

-- REQ STATUS  32 Awaiting Approval, 36 Cancelled  163 Open  173 PO Created  202 Rejected  500 Change Order Process  501 Change Order Created.

-- PART A OF THE REPORT = PULLING THE TOTAL BUDGET, RELEASED BUDGET , BUDGET CATEGORY ETC

DECLARE MASTERS CURSOR FOR SELECT PROJECTCODE,PROJECTMATERIALBUDGETCODE,TOOLCODE,BUDGETQTY,BUDGETRATE,BUDGETAMOUNT 
FROM BT.PROJECTMATERIALBUDGETMASTER 
-- GET TOTAL PROJECT MATERIAL BUDGET 
OPEN MASTERS
FETCH NEXT FROM MASTERS INTO @PROJECTCODE,@MATERIALBUDGETCODE,@TOOLCODE,@BUDGETQTY,@BUDGETRATE,@BUDGETAMOUNT 
WHILE @@FETCH_STATUS=0
BEGIN
  SET @FOUND=0
  SET @INDEXCODE=0 
  SET @TENDERID  = 0 
 
  SELECT @RELEASEQTY=CUMULATIVEQTY,@RELEASERATE=BUDGETRATE,@RELEASEAMOUNT= CUMULATIVEQTY*BUDGETRATE
  FROM BT.MonthlyMaterialBudget WHERE PROJECTCODE=@PROJECTCODE  AND TOOLCODE = @TOOLCODE
  
  SELECT @BORGID=BORGID FROM BT.PROJECTS WHERE PROJECTID=@PROJECTCODE 

  SELECT @FOUND = COUNT(*) FROM BT.MATERIALMOVEMENT WHERE PROJECTCODE=@PROJECTCODE AND TOOLCODE=@TOOLCODE 
  IF @FOUND=0 
   BEGIN
     SELECT @TENDERID=ISNULL(ITEMID,0) FROM TENDERITEMS WHERE CATEGORY='Material' AND BORG=@BORGID AND RESCODE=@TOOLCODE 
     INSERT INTO BT.MATERIALMOVEMENT(PROJECTCODE,TOOLCODE,BUDGETQTY,BUDGETRATE,BUDGETAMOUNT,RELEASEDQTY,RELEASERATE,RELEASEAMOUNT,TENDERID,BORGID) 
	 SELECT @PROJECTCODE,@TOOLCODE,@BUDGETQTY,@BUDGETRATE,@BUDGETAMOUNT,@RELEASEQTY,@RELEASERATE,@RELEASEAMOUNT,@TENDERID,@BORGID
	 SELECT @LASTINDEXCODE = MAX(INDEXCODE) FROM BT.MATERIALMOVEMENT
   END
  ELSE
     BEGIN 
	    SELECT @INDEXCODE=INDEXCODE FROM BT.MATERIALMOVEMENT WHERE PROJECTCODE=@PROJECTCODE AND TOOLCODE=@TOOLCODE
		UPDATE BT.MATERIALMOVEMENT 
		   SET BUDGETQTY = BUDGETQTY + @BUDGETQTY , BUDGETRATE=@BUDGETRATE,BUDGETAMOUNT=BUDGETAMOUNT+@BUDGETAMOUNT 
		   WHERE INDEXCODE=@INDEXCODE 
	 END 
  FETCH NEXT FROM MASTERS INTO @PROJECTCODE,@MATERIALBUDGETCODE,@TOOLCODE,@BUDGETQTY,@BUDGETRATE,@BUDGETAMOUNT 
END
CLOSE MASTERS
DEALLOCATE MASTERS 

UPDATE BT.MATERIALMOVEMENT
 SET MAJORHEAD = UPPER(BTM.MATERIALMAJORHEAD),
     TEMPLATENAME=UPPER(BTM.TEMPLATENAME),
	 CATEGORY = UPPER(BTM.UOM),
	 UOM=UPPER(BTM.CATEGORY) 
 FROM BT.MasterMaterialBudget BTM INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE=BTM.TEMPLATECODE 
 




 --- PART B OF THE REPORT - PULLING THE REQUISITIONS MADE AND SEPARATING UNDER VARIOUS CATEGORIES 
DECLARE REQLIST CURSOR FOR SELECT  INDEXCODE,PROJECTCODE,TENDERID,TOOLCODE  FROM BT.MATERIALMOVEMENT 
OPEN REQLIST 
FETCH NEXT FROM REQLIST INTO @INDEXCODE,@PROJECTCODE,@TENDERID,@TOOLCODE 

WHILE @@FETCH_STATUS = 0 
BEGIN
  SELECT @BORGID=BORGID FROM BT.PROJECTS WHERE PROJECTID=@PROJECTCODE 
  INSERT INTO BT.MATERIALMOVEMENTDETAIL(INDEXID,TENDERID,BORGID,REQID,LINENUMBER,MATERIALCODE,UOM,REQQTY,REQRATE,TOOLCODE,BUDGETCROSSREFID)
  SELECT @INDEXCODE,@TENDERID,@BORGID,RI.REQID,RI.LINENUMBER,RI.BUYERPARTNUMBER,RI.UOM,RI.QTY,RI.PRICE,RI.RESOURCECODE,JOBCARDLEDGERID
  FROM REQITEMS RI
  INNER JOIN REQ ON REQ.REQID=RI.REQID 
  WHERE CATALOGITEMID=@TENDERID AND RESOURCECODE=@TOOLCODE AND REQ.BORGID=@BORGID 
  FETCH NEXT FROM REQLIST INTO @INDEXCODE,@PROJECTCODE,@TENDERID,@TOOLCODE 
END
CLOSE REQLIST 
DEALLOCATE REQLIST 
 
UPDATE BT.MATERIALMOVEMENTDETAIL 
SET REQNUMBER=REQ.REQNUMBER,
    REQDATE = REQ.CREATEDATE ,
	REQSTATUS = REQ.REQSTATUSID 
FROM REQ INNER JOIN BT.MATERIALMOVEMENTDETAIL ON BT.MATERIALMOVEMENTDETAIL.REQID=REQ.REQID 



--UPDATE BT.MATERIALMOVEMENTDETAIL
--SET TOOLCODE=MA.TEMPLATECODE FROM BT.MasterMaterialDetail MA 
--INNER JOIN BT.MATERIALMOVEMENTDETAIL   ON MA.MATERIALCODE=BT.MATERIALMOVEMENTDETAIL.MATERIALCODE





-- PART B SECTION 2 - PULLING THE ORDER DETAILS - FOR REQUISITON WHERE ORDER CREATED 
UPDATE BT.MATERIALMOVEMENTDETAIL SET ORDQTY=0,ORDRATE=0,ORDAMOUNT=0.0
UPDATE BT.MATERIALMOVEMENTDETAIL  
 SET ORDID=O.ORDID ,ORDSTATUS=O.ORDSTATUSID 
 FROM ORD O INNER JOIN BT.MATERIALMOVEMENTDETAIL ON BT.MATERIALMOVEMENTDETAIL.REQID = O.REQID 

UPDATE BT.MATERIALMOVEMENTDETAIL   
 SET ORDNUMBER =O.ORDNUMBER,
     ORDDATE = O.CREATEDATE,
	 ORDSTATUS = O.ORDSTATUSID 
 FROM ORD O INNER JOIN BT.MATERIALMOVEMENTDETAIL  ON BT.MATERIALMOVEMENTDETAIL.ORDID=O.ORDID 

UPDATE BT.MATERIALMOVEMENTDETAIL  
  SET ORDQTY = OI.QTY ,ORDRATE=OI.PRICE 
  FROM ORDITEMS OI 
  INNER JOIN BT.MATERIALMOVEMENTDETAIL   ON BT.MATERIALMOVEMENTDETAIL.ORDID=OI.ORDID AND BT.MATERIALMOVEMENTDETAIL.LINENUMBER=OI.LINENUMBER 

UPDATE BT.MATERIALMOVEMENTDETAIL SET ORDQTY=0,ORDRATE=0 WHERE ORDQTY IS NULL

UPDATE 
 BT.MATERIALMOVEMENTDETAIL SET MATERIALNAME = INV.STKDESC 
 FROM INVENTORY INV 
 INNER JOIN BT.MATERIALMOVEMENTDETAIL ON BT.MATERIALMOVEMENTDETAIL.MATERIALCODE = INV.STKCODE 
WHERE STKSTORE='VMAINSTORE'  
 

-- OPEN PRS AWAITING APPROVAL   (32 OPEN PR, 163 OPEN PR )
UPDATE BT.MATERIALMOVEMENT SET OPENPRQTY=0,OPENPRAMOUNT=0  
SELECT BORGID,TOOLCODE,SUM(REQQTY) REQQTY,SUM(REQQTY*REQRATE) REQAMOUNT
INTO #TEMPREQOPEN
FROM BT.MATERIALMOVEMENTDETAIL
WHERE   REQSTATUS IN ( 32 ,163 )
GROUP BY BORGID,TOOLCODE  

UPDATE BT.MATERIALMOVEMENT 
SET OPENPRQTY  = T.REQQTY ,
    OPENPRAMOUNT = T.REQAMOUNT  
FROM #TEMPREQOPEN T 
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE   = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID   = T.BORGID



-- CANCELLED PRS  (36   CANCELLED)
UPDATE BT.MATERIALMOVEMENT SET CANCELLEDQTY=0,CANCELLEDVALUE=0  
SELECT BORGID,TOOLCODE,SUM(REQQTY) REQQTY,SUM(REQQTY*REQRATE) REQAMOUNT
INTO #TEMPREQCANCELLED
FROM BT.MATERIALMOVEMENTDETAIL
WHERE   REQSTATUS =36
GROUP BY BORGID,TOOLCODE 
 


DELETE FROM #TEMPREQCANCELLED WHERE TOOLCODE IS NULL
UPDATE BT.MATERIALMOVEMENT 
SET CANCELLEDQTY  = T.REQQTY ,
    CANCELLEDVALUE = T.REQAMOUNT  
FROM #TEMPREQCANCELLED T 
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE  = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID= T.BORGID
 

-- CHANGE ORDER POS  (501  ,500 CHANGE ORDER )
UPDATE BT.MATERIALMOVEMENT SET CHANGEDORDERQTY=0,CHANGEODERVALUE=0  
SELECT BORGID,TOOLCODE, SUM(REQQTY) REQQTY,SUM(REQQTY*REQRATE) REQAMOUNT
INTO #TEMPREQCHANGEORDER
FROM BT.MATERIALMOVEMENTDETAIL
WHERE   REQSTATUS IN (500,501)
GROUP BY BORGID,TOOLCODE

UPDATE BT.MATERIALMOVEMENT 
SET CHANGEDORDERQTY  = T.REQQTY ,
    CHANGEODERVALUE = T.REQAMOUNT  
FROM #TEMPREQCHANGEORDER T 
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE  = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID   = T.BORGID



-- REJECTED  (202 REJECTED )
UPDATE BT.MATERIALMOVEMENT SET REJECTEDQTY=0,REJECTEDVALUE=0  
SELECT BORGID,TOOLCODE, SUM(REQQTY) REQQTY,SUM(REQQTY*REQRATE) REQAMOUNT
INTO #TEMPREQREJECTED
FROM BT.MATERIALMOVEMENTDETAIL
WHERE   REQSTATUS =202
GROUP BY BORGID,TOOLCODE

UPDATE BT.MATERIALMOVEMENT 
SET REJECTEDQTY  = T.REQQTY ,
    REJECTEDVALUE = T.REQAMOUNT  
FROM #TEMPREQREJECTED T 
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE  = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID   = T.BORGID


-- PO CREATED  (173 PO CREATED )
UPDATE BT.MATERIALMOVEMENT SET ORDERQTY=0,ORDERAMOUNT=0  
SELECT BORGID,TOOLCODE, SUM(REQQTY) REQQTY,SUM(REQQTY*REQRATE) REQAMOUNT
INTO #TEMPORDERED
FROM BT.MATERIALMOVEMENTDETAIL
WHERE   REQSTATUS =173
GROUP BY BORGID,TOOLCODE

UPDATE BT.MATERIALMOVEMENT 
SET ORDERQTY  = T.REQQTY ,
    ORDERAMOUNT = T.REQAMOUNT  
FROM #TEMPORDERED T 
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.TOOLCODE  = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID   = T.BORGID

----------------------------------------------------


----  PART III - DELIVERY QTY 

UPDATE BT.MATERIALMOVEMENTDETAIL SET DELIVEREDQTY=0  

DECLARE DELIVERYLIST CURSOR FOR SELECT INDEXCODE,ORDID,LINENUMBER FROM BT.MATERIALMOVEMENTDETAIL WHERE ORDID <> 0
OPEN DELIVERYLIST
FETCH NEXT FROM DELIVERYLIST INTO @INDEXCODE,@ORDID,@LINENUMBER 
WHILE @@FETCH_STATUS  = 0 
BEGIN
   SET @TOTALDELIVERYQTY = 0
   SELECT @TOTALDELIVERYQTY =ISNULL(SUM(D.DLVRQTY) ,0)
   FROM  DELIVERIES D 
   INNER JOIN BT.MATERIALMOVEMENTDETAIL ON BT.MATERIALMOVEMENTDETAIL.LINENUMBER=D.ORDITEMLINENO AND BT.MATERIALMOVEMENTDETAIL.ORDID=D.ORDID 
   WHERE D.ORDID=@ORDID AND D.ORDITEMLINENO=@LINENUMBER
   UPDATE BT.MATERIALMOVEMENTDETAIL SET DELIVEREDQTY=  @TOTALDELIVERYQTY WHERE INDEXCODE=@INDEXCODE 
   FETCH NEXT FROM DELIVERYLIST INTO @INDEXCODE,@ORDID,@LINENUMBER
END
CLOSE DELIVERYLIST
DEALLOCATE DELIVERYLIST

SELECT BORGID,TOOLCODE,SUM(DELIVEREDQTY) TOTALDELIVERY 
INTO #TEMPDELIVERY
FROM BT.MATERIALMOVEMENTDETAIL
GROUP BY BORGID,TOOLCODE

UPDATE BT.MATERIALMOVEMENT 
SET DELIVEREDQTY=0,DELIVEREDVALUE=0,QTYTODELIVER=0
UPDATE BT.MATERIALMOVEMENT 
SET DELIVEREDQTY = T.TOTALDELIVERY
FROM #TEMPDELIVERY  T
INNER JOIN BT.MATERIALMOVEMENT  ON BT.MATERIALMOVEMENT.TOOLCODE = T.TOOLCODE AND BT.MATERIALMOVEMENT.BORGID   = T.BORGID

UPDATE BT.MATERIALMOVEMENT
SET DELIVEREDVALUE = DELIVEREDQTY*ORDERRATE WHERE DELIVEREDQTY>0 


-- PART IV - GET THE REMAINING QTY TO DELVIER - ORDERED QTY - DELIVERED QTY
SELECT INDEXID,(ORDQTY-DELIVEREDQTY) BALANCEQTY 
INTO #TEMPBALANCEQTYTODELIVER
FROM BT.MATERIALMOVEMENTDETAIL
WHERE ORDSTATUS=274 

UPDATE BT.MATERIALMOVEMENT  SET QTYTODELIVER=0,QTYTODELIVERAMOUNT=0 
UPDATE BT.MATERIALMOVEMENT 
SET QTYTODELIVER = T.BALANCEQTY 
FROM #TEMPBALANCEQTYTODELIVER T
INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.INDEXCODE=T.INDEXID 
UPDATE BT.MATERIALMOVEMENT  
SET QTYTODELIVERAMOUNT = QTYTODELIVER*ORDERRATE WHERE QTYTODELIVER>0




 

UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Awaiting Approval' WHERE REQSTATUS=32
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Cancelled' WHERE REQSTATUS=36
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Open' WHERE REQSTATUS=163
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='PO Created' WHERE REQSTATUS=173
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Rejected' WHERE REQSTATUS=202
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Change Order ' WHERE REQSTATUS=500
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_REQ='Change Order Done' WHERE REQSTATUS=501


UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_ORD='PO Ready'   WHERE ORDSTATUS=274
UPDATE BT.MATERIALMOVEMENTDETAIL SET STATUS_ORD='Completed'  WHERE ORDSTATUS=41

UPDATE BT.MATERIALMOVEMENTDETAIL SET REQAMOUNT = REQQTY*REQRATE 
UPDATE BT.MATERIALMOVEMENTDETAIL SET ORDAMOUNT = ORDQTY*ORDRATE 
UPDATE BT.MATERIALMOVEMENT SET PROJECTNAME=BT.PROJECTNAME FROM BT.PROJECTS BT INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.PROJECTCODE=BT.ProjectID

 

 -- LAST SECTION 
 

UPDATE BT.MATERIALMOVEMENT SET BALANCEQTYTOPURCHASE=0,BALANCEAMOUNTTOPURCHASE=0
UPDATE BT.MATERIALMOVEMENT SET BALANCEBUDGET = BUDGETQTY-RELEASEDQTY ,BALANCEBUDGETAMOUNT=BUDGETAMOUNT-RELEASEAMOUNT 
UPDATE BT.MATERIALMOVEMENT SET BALANCEQTYTOPURCHASE = RELEASEDQTY-ORDERQTY ,BALANCEAMOUNTTOPURCHASE=RELEASEAMOUNT-ORDERAMOUNT 
UPDATE BT.MATERIALMOVEMENT SET PROJECTNAME=P.PROJECTNAME FROM BT.PROJECTS P INNER JOIN BT.MATERIALMOVEMENT ON BT.MATERIALMOVEMENT.PROJECTCODE=P.PROJECTID
---

SELECT * FROM BT.MATERIALMOVEMENT WHERE PROJECTCODE>2 ORDER BY PROJECTCODE ,TOOLCODE 