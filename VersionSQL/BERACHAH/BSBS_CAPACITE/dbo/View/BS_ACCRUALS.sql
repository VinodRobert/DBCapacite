/****** Object:  View [dbo].[BS_ACCRUALS]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE VIEW BS_ACCRUALS  AS /*Deliveries*/ SELECT Dlvrdate AS Pdate, 'DELACC' AS Batchref, LEFT(Dlvrno,10) AS Transref, Ledgercodes.Ledgercode, Contracts.Contrnumber AS Contract, LEFT(rtrim(ltrim(replace(replace(replace(cast(ORDITEMS.Itemdescription as nvarchar(MAX)),'',''),char(10),''),char(13),' '))) + ' ORDNO:' + Ord.Ordnumber, 255) AS Description, Ord.Currency, case when (Deliveries.Dlvrqty - Deliveries.ReconQty) > 0 then round((((Deliveries.Dlvrqty - Deliveries.ReconQty) * ISNULL(DELIVERIES.PRICE, Orditems.Price)) * (1 - (Orditems.Discount / 100))) + abs(MT.REIMBTAX), isnull(CURRENCIES.DECIMALS, 2)) else 0 end AS debit, case when (Deliveries.Dlvrqty - Deliveries.ReconQty) < 0 then round(((abs(Deliveries.Dlvrqty - Deliveries.ReconQty) * ISNULL(DELIVERIES.PRICE, Orditems.Price)) * (1 - (Orditems.Discount / 100))) + abs(MT.REIMBTAX), isnull(CURRENCIES.DECIMALS, 2)) else 0 end AS credit, Suppliers.Suppcode AS Credno, Suppliers.Suppname AS Credrec, ' ' AS Debtrec, ' ' AS Subbrec, Orditems.Penumber AS Plantno, isnull(i.stkcode, ' ') AS Stockno, isnull(i.stkstore, ' ') as store, (DELIVERIES.DLVRQTY - DELIVERIES.RECONQTY) * case when isnull(i.stkid, -2) = isnull(ORDITEMS.STOCKID, -1) then case when ORDITEMS.STKCONVERTFLAG = 0 THEN 1 / case when isnull(ORDITEMS.STKBUYCONV, i.STKBUYCONV) = 0 then 1 else isnull(ORDITEMS.STKBUYCONV, i.STKBUYCONV) end ELSE case when isnull(ORDITEMS.STKBUYCONV, i.STKBUYCONV) = 0 then 1 else isnull(ORDITEMS.STKBUYCONV, i.STKBUYCONV) end END else 1 end as Quantity, Orditems.Uom AS Unit, LEFT(Deliveries.Grnno,12) AS Grnno, round(cast((ABS(DELIVERIES.DLVRQTY-DELIVERIES.RECONQTY) * ((ISNULL(DELIVERIES.PRICE, ORDITEMS.PRICE) * (1 - (ORDITEMS.DISCOUNT / 100))) + RA.RAVAL) + abs(MT.REIMBTAX))  * CASE when (ORD.CURRENCY <> BORGS.CURRENCY and ORD.HOMECURRENCY =  BORGS.CURRENCY) then ord.exchrate when ORD.CURRENCY = EXR.CURRCODE then EXR.RATE else 0 end as decimal(38, 4)), isnull(CURRENCIES.DECIMALS, 2)) AS Homecurramount, round(cast((ABS(DELIVERIES.DLVRQTY-DELIVERIES.RECONQTY) * ((ISNULL(DELIVERIES.PRICE, ORDITEMS.PRICE) * (1 - (ORDITEMS.DISCOUNT / 100))) + RA.RAVAL) + abs(MT.REIMBTAX))  * CASE when (ORD.CURRENCY <> BORGS.CURRENCY and ORD.HOMECURRENCY =  BORGS.CURRENCY) then ord.exchrate when ORD.CURRENCY = EXR.CURRCODE then EXR.RATE else 1 end as decimal(38, 4)), isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, Contracts.Contrname, Ledgercodes.Ledgername, Projname AS Projname, Projnumber AS Projnumber, Deliveries.Lyear AS Year, Deliveries.Period AS Period, ORD.ORDNUMBER as ORDERNO, ORDITEMS.ALLOCATION, 'Deliveries' as accrual, ISNULL(ISNULL(ORDITEMS.TBORGID, PROJECTS.BORGID), ORD.BORGID) as BORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME, ' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, ORDITEMS.STOCKID, ISNULL(DELIVERIES.PRICE, Orditems.Price) * (1 - (Orditems.Discount / 100)) as RATE, isnull(ORDITEMS.DIVISIONID, -1) as DIVID, isnull(DIVISIONS.DIVCODE, '') as DIVCODE, DELIVERIES.DLVRID, DELIVERIES.DLVRNO, ORDITEMS.VATID FROM DELIVERIES INNER JOIN ORDITEMS ON DELIVERIES.ORDID = ORDITEMS.ORDID AND DELIVERIES.ORDITEMLINENO = ORDITEMS.LINENUMBER INNER JOIN ORD ON DELIVERIES.ORDID = ORD.ORDID INNER JOIN LEDGERCODES ON ORDITEMS.GLCODEID = LEDGERCODES.LedgerID LEFT OUTER JOIN CONTRACTS ON CONTRACTS.CONTRID = ORDITEMS.CONTRACTID LEFT OUTER JOIN PROJECTS ON PROJECTS.PROJID = CONTRACTS.PROJID LEFT OUTER JOIN SUPPLIERS ON ORD.SUPPID = SUPPLIERS.SUPPID LEFT OUTER JOIN ACTIVITIES ON ORDITEMS.ACTID = ACTIVITIES.ACTID LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = ORD.CURRENCY LEFT OUTER JOIN INVENTORY i ON i.stkid = ORDITEMS.STOCKID LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = ORDITEMS.DIVISIONID  CROSS APPLY (   select isnull(SUM(round(RIA.VALUE / OI.QTY, 4)), 0) RAVAL   from ORD O   INNER JOIN ORDITEMS OI on O.ORDID = OI.ORDID   INNER JOIN REQITEMSADD RIA ON RIA.LINENUMBER = OI.LINENUMBER AND RIA.REQID = O.REQID   inner join REQADD on RIA.RAID = REQADD.RAID   WHERE REQADD.ISCOST = 1   AND OI.ORDID = DELIVERIES.ORDID   AND OI.LINENUMBER = DELIVERIES.ORDITEMLINENO   AND OI.QTY <> 0  ) RA  OUTER APPLY(SELECT ISNULL(SUM(ISNULL(TAX, 0)), 0) REIMBTAX FROM GETVIEWTAXTRANS('', ((Deliveries.Dlvrqty - Deliveries.ReconQty) * ISNULL(DELIVERIES.PRICE, Orditems.Price)) * (1 - (Orditems.Discount / 100)), ORDITEMS.VATID, ISNULL(ISNULL(ORDITEMS.TBORGID, PROJECTS.BORGID), ORD.BORGID), Ord.Currency) WHERE ISNULL(ISREIMB, -1) = 0) MT  OUTER APPLY (  SELECT  RTrim(CURR.CURRCODE) CURRCODE,  isnull(CCEE.RATE, -1) as RATE,  isnull(CURR.DECIMALS, 2) DECIMALS  from CURRENCIES CURR  INNER JOIN (   select CCE.FROMCURR, CCE.RATE   FROM BORGS B   INNER JOIN CURREXCH CCE ON CCE.GROUPID = B.CURREXGRP AND B.CURRENCY = CCE.TOCURR   INNER JOIN CURREXCHGRP CCG ON CCE.GROUPID = CCG.GROUPID   INNER JOIN (    SELECT GROUPID, FROMCURR, TOCURR, MAX(STARTDATE) AS STARTDATE    FROM CURREXCH C    GROUP BY GROUPID, FROMCURR, TOCURR) ce   ON CCE.GROUPID = ce.groupid   AND CCE.FROMCURR = ce.fromcurr   AND CCE.TOCURR = ce.tocurr   AND CCE.STARTDATE = ce.startdate   WHERE B.BORGID = ISNULL(ISNULL(ORDITEMS.TBORGID, PROJECTS.BORGID), ORD.BORGID)   and CCG.DISABLED = 0   ) CCEE  ON CCEE.FROMCURR = CURR.CURRCODE  WHERE CURR.CURRCODE = ORD.CURRENCY  ) EXR INNER JOIN BORGS on BORGS.BORGID = ISNULL(ISNULL(ORDITEMS.TBORGID, PROJECTS.BORGID), ORD.BORGID) INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Deliveries' WHERE ACCRUALS.INUSE = 1 AND ORD.ORDSTATUSID IN (274, 41, 500) AND ALLOCATED = 0 UNION ALL /*Clockcards*/ SELECT NULL as PDate, 'WGSACC' as Batchref, 'WGSACC' as Transref, CLOCKCARDS.LEDGERCODE, CLOCKCARDS.CONTRNUMBER, 'Wages & Salaries Accruals' as Description, BORGS.CURRENCY as Currency, round(SUM(CLOCKCARDS.COST), isnull(CURRENCIES.DECIMALS, 2)) AS [debit], 0 as Credit, ' ' AS credno, ' ' AS credrec, ' ' AS debtrec, ' ' AS subrec, CLOCKCARDS.PENUMBER as Plantno, ' ' AS stockno, ' ' as store, 0 as quantity, 'Sum' as unit, ' ' AS Grnno, 0 as homecurramount, round(SUM(CLOCKCARDS.COST), isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, Contrname as Contrname, ledgername as ledgername, Projname AS Projname, Projnumber AS Projnumber, YEARNO as [YEAR], PERIODNO as period, ' ' AS ORDERNO, CLOCKCARDS.ALLOCATION collate SQL_Latin1_General_CP1_CI_AS, 'Wages & Salaries Clock Cards Accruals' as accrual, CASE CLOCKCARDS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END BORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(CLOCKCARDS.DIVID, -1) as DIV, isnull(DIVISIONS.DIVCODE, '') as DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM CLOCKCARDS INNER JOIN PAYROLLS ON CLOCKCARDS.PAYROLLID = PAYROLLS.PAYROLLID AND CLOCKCARDS.YEARNO = PAYROLLS.CURRYEARNO AND CLOCKCARDS.RUNNO = PAYROLLS.RUNNO AND CLOCKCARDS.PERIODNO = PAYROLLS.CURRPERIOD INNER JOIN LEDGERCODES ON CLOCKCARDS.LEDGERID = LEDGERCODES.LEDGERID LEFT OUTER JOIN CONTRACTS ON CONTRACTS.CONTRID = CLOCKCARDS.CONTRID LEFT OUTER JOIN PROJECTS ON CONTRACTS.PROJID = PROJECTS.PROJID LEFT OUTER JOIN ACTIVITIES ON CLOCKCARDS.ACTID = ACTIVITIES.ACTID LEFT OUTER JOIN PLANTANDEQ ON PLANTANDEQ.PENUMBER = CLOCKCARDS.PENUMBER LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = CLOCKCARDS.DIVID INNER JOIN BORGS on BORGS.BORGID = CASE CLOCKCARDS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Clockcards' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY WHERE ACCRUALS.INUSE = 1 GROUP BY YEARNO, Periodno, CLOCKCARDS.ALLOCATION, CLOCKCARDS.CONTRNUMBER, CLOCKCARDS.LEDGERCODE, CLOCKCARDS.PENUMBER, CLOCKCARDS.DIVID, DIVISIONS.DIVCODE, PAYROLLS.RUNNO, CASE CLOCKCARDS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END, CONTRACTS.CONSTATUS, Contrname, ledgername, Projname, Projnumber, ACTIVITIES.ACTNAME, ACTIVITIES.ACTNUMBER, ACTIVITIES.ACTUNIT, CURRENCIES.DECIMALS, BORGS.CURRENCY HAVING (SUM(CLOCKCARDS.COST) <> 0) UNION ALL /*Advised Amounts*/ SELECT NULL AS Pdate, 'WGSACC' as Batchref, 'WGSACC' as Transref, ADVAMOUNTS.LEDGERCODE, ADVAMOUNTS.CONTRNUMBER, 'Advised Amount Accruals' as [Description], BORGS.CURRENCY as currency, round(SUM(ADVAMOUNTS.COST), isnull(CURRENCIES.DECIMALS, 2)) AS [Debit], 0 as [Credit], ' ' AS credno, ' ' AS credrec, ' ' AS debtrec, ' ' AS subrec, ' ' AS Plantno, ' ' AS stockno, ' ' as store, 0 as quantity, 'Sum' as unit, ' ' AS Grnno, 0 as homecurramount, round(SUM(ADVAMOUNTS.COST), isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, Contrname as Contrname, ledgername as ledgername, Projname AS Projname, Projnumber AS Projnumber, YEARNO as [YEAR], PERIODNO as period, ' ' AS ORDERNO, allocation, 'Wages & Salaries Advised Amounts Accruals' as accrual, CASE ADVAMOUNTS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END BORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(ADVAMOUNTS.DIVID, -1) as DIV, isnull(DIVISIONS.DIVCODE, '') as DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM ADVAMOUNTS INNER JOIN PAYROLLS ON ADVAMOUNTS.PAYROLLID = PAYROLLS.PAYROLLID AND ADVAMOUNTS.YEARNO = PAYROLLS.CURRYEARNO AND ADVAMOUNTS.RUNNO = PAYROLLS.RUNNO AND ADVAMOUNTS.PERIODNO = PAYROLLS.CURRPERIOD INNER JOIN LEDGERCODES ON ADVAMOUNTS.LEDGERID = LEDGERCODES.LEDGERID LEFT OUTER JOIN CONTRACTS ON CONTRACTS.CONTRID = ADVAMOUNTS.CONTRID LEFT OUTER JOIN PROJECTS ON CONTRACTS.PROJID = PROJECTS.PROJID LEFT OUTER JOIN ACTIVITIES ON ADVAMOUNTS.ACTID = ACTIVITIES.ACTID LEFT OUTER JOIN PLANTANDEQ ON PLANTANDEQ.PENUMBER = ADVAMOUNTS.PENUMBER LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = ADVAMOUNTS.DIVID INNER JOIN BORGS on BORGS.BORGID = CASE ADVAMOUNTS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Advised Amounts' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY WHERE ACCRUALS.INUSE = 1 GROUP BY YEARNO, PERIODNO,ADVAMOUNTS.ALLOCATION, ADVAMOUNTS.CONTRNUMBER, ADVAMOUNTS.LEDGERCODE, ADVAMOUNTS.PENUMBER, CASE ADVAMOUNTS.ALLOCATION WHEN 'CONTRACTS' THEN PROJECTS.BORGID WHEN 'OVERHEADS' THEN DIVISIONS.BORGID WHEN 'PLANT' THEN PLANTANDEQ.BORGID WHEN 'BALANCE SHEET' THEN PAYROLLS.BORGID END, CONTRACTS.CONSTATUS, Contrname, ledgername, Projname, Projnumber, ACTIVITIES.ACTNAME, ACTIVITIES.ACTNUMBER, ACTIVITIES.ACTUNIT, ADVAMOUNTS.DIVID, DIVISIONS.DIVCODE, CURRENCIES.DECIMALS, BORGS.CURRENCY HAVING (SUM(ADVAMOUNTS.COST) <> 0) AND (ADVAMOUNTS.ALLOCATION <> '') UNION ALL /*Plant Based Hire*/ SELECT PlantHirePBReturnsHead.PBRHDate AS Pdate, 'PLTACC' AS BatchRef, 'PLTACC' AS Transref, PlantHirePBHeader.PlantDCostGl AS LedgerCode, isnull(PlantHirePBReturnsHead.ContrNumber, ' ') AS Contract, 'Plant Based Hire Accrual' AS Description, BORGS.CURRENCY AS currency, CASE WHEN sum(PlantHirePBReturnsValues.PBRDTotalAmount) > 0 THEN round(ABS(sum(PlantHirePBReturnsValues.PBRDTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) ELSE 0 END as Debit, CASE WHEN sum(PlantHirePBReturnsValues.PBRDTotalAmount) > 0 THEN 0 ELSE round(ABS(sum(PlantHirePBReturnsValues.PBRDTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) END as Credit, ' ' AS Credno, ' ' AS CredRec, ' ' AS DebtRec, ' ' AS Subbrec, PlantHirePBHeader.PeNumber AS PlantNo, ' ' AS Stockno, ' ' as store, 0 AS Quantity, ' ' AS Unit, ' ' AS Grnno, 0 AS HomeCurrAmount, round(ABS(sum(PlantHirePBReturnsValues.PBRDTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) as HOMEAMOUNT, isnull(CONTRACTS.CONTRNAME, ' ') CONTRNAME, LEDGERCODES.LedgerName, isnull(PROJECTS.ProjName, ' ') ProjName, isnull(PROJECTS.ProjNumber, ' ') ProjNumber, PlantHirePBHeader.BHRHFinYear, PlantHirePBHeader.BHRHFinPeriod, ' ' AS ORDERNO, case when PLANTHIREPBRETURNSHEAD.CONTRNUMBER is not null then 'Contracts' else case when PLANTHIREPBRETURNSHEAD.DIVTOID is not null then 'Overheads' else 'Balance Sheet' end end as allocation, 'Plant Based Hire Accrual' as accrual, case when PLANTHIREPBRETURNSHEAD.CONTRNUMBER is not null then PROJECTS.BORGID else case when PLANTHIREPBRETURNSHEAD.DIVTOID is not null then DIVISIONS.BORGID else PLANTHIREPBHEADER.BORGID end end BORGID, isnull(CONTRACTS.CONSTATUS, 0) CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(PLANTHIREPBRETURNSHEAD.DIVTOID, -1) AS DIV, isnull(DIVISIONS.DIVCODE, '') as DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM PlantHirePBHeader INNER JOIN PlantHirePBReturnsHead ON PlantHirePBHeader.PBHid = PlantHirePBReturnsHead.PBHid INNER JOIN PlantHirePBReturnsValues ON PlantHirePBReturnsHead.PBRHid = PlantHirePBReturnsValues.PBRHid INNER JOIN LEDGERCODES ON PlantHirePBHeader.PlantDCostGl = LEDGERCODES.LedgerCode LEFT OUTER JOIN CONTRACTS ON PLANTHIREPBRETURNSHEAD.ContrNumber = CONTRACTS.CONTRNUMBER LEFT OUTER JOIN PROJECTS ON CONTRACTS.PROJID = PROJECTS.PROJID LEFT OUTER JOIN ACTIVITIES ON PlantHirePBReturnsHead.ACTNUMBER = ACTIVITIES.ACTNUMBER LEFT OUTER JOIN DIVISIONS ON PlantHirePBReturnsHead.DivToID = DIVISIONS.DIVID INNER JOIN BORGS on BORGS.BORGID = case when PLANTHIREPBRETURNSHEAD.CONTRNUMBER is not null then PROJECTS.BORGID else case when PLANTHIREPBRETURNSHEAD.DIVTOID is not null then DIVISIONS.BORGID else PLANTHIREPBHEADER.BORGID end end INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Plant Based Hire' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY WHERE ACCRUALS.INUSE = 1 AND PlantHirePBHeader.PBHClosed <> 1 AND PLANTHIREPBRETURNSHEAD.PBRHPostFlag < 3 GROUP BY PlantHirePBReturnsHead.PBRHDate, PlantHirePBHeader.PlantDCostGl, PlantHirePBReturnsHead.ContrNumber, PlantHirePBHeader.PeNumber, CONTRACTS.CONTRNAME, LEDGERCODES.LedgerName, PROJECTS.ProjName, PROJECTS.ProjNumber, PlantHirePBHeader.BHRHFinYear, PlantHirePBHeader.BHRHFinPeriod, PlantHirePBHeader.BORGID, CONTRACTS.CONSTATUS, ACTIVITIES.ACTNAME, ACTIVITIES.ACTNUMBER, ACTIVITIES.ACTUNIT, CURRENCIES.DECIMALS, PROJECTS.BORGID, PLANTHIREPBRETURNSHEAD.DIVTOID, DIVISIONS.DIVCODE, DIVISIONS.BORGID, PLANTHIREPBHEADER.BORGID, BORGS.CURRENCY UNION ALL /*Plant Req Based Hire*/ SELECT ReqPlantHireReturnsHead.HireRToDate, 'PLTACC' AS BatchRef, 'PLTACC' AS Transref, PlantHireDetail.PlantDCostGl AS LedgeCode, isnull(PlantHireHeader.ContrNumber, ' ') AS Contract, 'Req Based Hire Accrual' AS Description, BORGS.CURRENCY AS currency, CASE WHEN SUM(ReqPlantHireReturns.HireRTotalAmount) > 0 THEN round(ABS(SUM(ReqPlantHireReturns.HireRTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) ELSE 0 END AS Debit, CASE WHEN SUM(ReqPlantHireReturns.HireRTotalAmount) > 0 THEN 0 ELSE round(ABS(SUM(ReqPlantHireReturns.HireRTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) END AS Credit, ' ' AS Credno, ' ' AS CredRec, ' ' AS DebtRec, ' ' AS Subbrec, ReqPlantHireReturnsHead.PeNumber AS PlantNo, ' ' AS Stockno, ' ' as store, 0 AS Quantity, ' ' AS Unit, ' ' AS Grnno, 0 AS HomeCurrAmount, round(ABS(SUM(ReqPlantHireReturns.HireRTotalAmount)), isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, isnull(CONTRACTS.CONTRNAME, ' ') CONTRNAME, LEDGERCODES.LedgerName, isnull(PROJECTS.ProjName, ' ') ProjName, isnull(PROJECTS.ProjNumber, ' ') ProjNumber, BORGS.CURRENTYEAR AS FinYear, ReqPlantHireReturnsHead.HireRPeriod, ' ' AS ORDERNO, LEDGERCODES.LEDGERALLOC as allocation, 'Req Based Hire Accrual' as accrual, case when LEDGERCODES.LEDGERALLOC = 'Contracts' then PROJECTS.BORGID else case when LEDGERCODES.LEDGERALLOC = 'Overheads' then DIVISIONS.BORGID else PlantHireHeader.BORGID end end BORGID, isnull(CONTRACTS.CONSTATUS, 0) CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(DIVISIONS.DIVID, -1) AS DIV, isnull(DIVISIONS.DIVCODE, -1) AS DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM PlantHireDetail INNER JOIN PlantHireHeader ON PlantHireDetail.HireHNumber = PlantHireHeader.HireHNumber INNER JOIN ReqPlantHireReturns INNER JOIN ReqPlantHireReturnsHead ON ReqPlantHireReturns.IDR = ReqPlantHireReturnsHead.ID ON PlantHireDetail.HireHNumber = ReqPlantHireReturnsHead.HireHNumber AND PlantHireDetail.PeNumber = ReqPlantHireReturnsHead.PeNumber LEFT OUTER JOIN CONTRACTS ON PlantHireHeader.ContrNumber = CONTRACTS.CONTRNUMBER LEFT OUTER JOIN PROJECTS ON CONTRACTS.PROJID = PROJECTS.PROJID INNER JOIN LEDGERCODES ON PlantHireDetail.PlantDCostGl = LEDGERCODES.LedgerCode LEFT OUTER JOIN ACTIVITIES ON ReqPlantHireReturnsHead.ACTNUMBER = ACTIVITIES.ACTNUMBER LEFT OUTER JOIN DIVISIONS ON PlantHireHeader.DIVID = DIVISIONS.DIVID INNER JOIN BORGS on BORGS.BORGID = case when LEDGERCODES.LEDGERALLOC = 'Contracts' then PROJECTS.BORGID else case when LEDGERCODES.LEDGERALLOC = 'Overheads' then DIVISIONS.BORGID else PlantHireHeader.BORGID end end INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Plant Req Based Hire' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY WHERE ACCRUALS.INUSE = 1 AND PlantHireHeader.HireHRemove <> 1 AND PlantHireDetail.HireRRemove <> 1 AND ReqPlantHireReturnsHead.HireRPostFlag < 3 GROUP BY ReqPlantHireReturnsHead.HireRToDate, PlantHireDetail.PlantDCostGl, PlantHireHeader.ContrNumber, ReqPlantHireReturnsHead.PeNumber, CONTRACTS.CONTRNAME, LEDGERCODES.LedgerName, PROJECTS.ProjName, PROJECTS.ProjNumber, ReqPlantHireReturnsHead.HireRPeriod, PlantHireHeader.BORGID, CONTRACTS.CONSTATUS, ACTIVITIES.ACTNAME, ACTIVITIES.ACTNUMBER, ACTIVITIES.ACTUNIT, CURRENCIES.DECIMALS, LEDGERCODES.LEDGERALLOC, PROJECTS.BORGID, DIVISIONS.BORGID, DIVISIONS.DIVID, DIVISIONS.DIVCODE, BORGS.CURRENCY, BORGS.CURRENTYEAR UNION ALL /*Subc Recons*/ SELECT S.PostDate AS Pdate, 'SUBACC' as Batchref, 'SUBACC' as Transref, case when isnull(S.LEDGER, '') = '' then SUBCONTRACTORS.SUBGLCODE else S.LEDGER end as Ledgercode, Contracts.ContrNumber as Contract, 'Sub Contractors Certificates' as Description, S.currency as Currency, CASE WHEN SAMOUNT.AMOUNT > 0 THEN round(SAMOUNT.AMOUNT, isnull(CURRENCIES.DECIMALS, 2)) ELSE 0 END as Debit, CASE WHEN SAMOUNT.AMOUNT > 0 THEN 0 ELSE round(ABS(SAMOUNT.AMOUNT), isnull(CURRENCIES.DECIMALS, 2)) END as Credit, SUBCONTRACTORS.SubNumber as Credno, ' ' AS Credrec, ' ' AS Debtrec, Subcontractors.Subname AS Subbrec, ' ' AS Plantno, ' ' AS Stockno, ' ' as store, 0 as Quantity, ' ' AS Unit, ' ' AS Grnno, cast(abs(SAMOUNT.AMOUNT) * CASE when S.CURRENCY <> BORGS.CURRENCY and SB.CURRENCY = BORGS.CURRENCY then S.EXCHRATE when S.CURRENCY = EXR.CURRCODE then EXR.RATE else 0 end as decimal(38, 4)) as HOMECURRAMOUNT, cast(abs(SAMOUNT.AMOUNT) * CASE when S.CURRENCY <> BORGS.CURRENCY and SB.CURRENCY = BORGS.CURRENCY then S.EXCHRATE when S.CURRENCY = EXR.CURRCODE then EXR.RATE else 1 end as decimal(38, 4)) as HOMEAMOUNT, Contracts.Contrname, LEDGERCODES.LedgerName, Projname as Projname, Projnumber as Projnumber, BORGS.CURRENTYEAR as Year, BORGS.PERIOD as Period, ' ' AS ORDERNO, ALLOCATION, 'Sub Contractors Accruals' as accrual, case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end ORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(S.DIVID, -1) as DIV, isnull(DIVISIONS.DIVCODE, -1) AS DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM SUBCRECONS S INNER JOIN SUBCONTRACTORS ON S.SubConNumber = SUBCONTRACTORS.SubID LEFT OUTER JOIN CONTRACTS ON S.Contract = CONTRACTS.CONTRID LEFT OUTER JOIN PROJECTS on CONTRACTS.projid = PROJECTS.projid LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = S.currency LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = S.DIVID LEFT OUTER JOIN LEDGERCODES ON LEDGERCODES.LedgerCode = case when isnull(S.LEDGER, '') = '' then SUBCONTRACTORS.SUBGLCODE else S.LEDGER end LEFT OUTER JOIN BORGS SB ON S.ORGID = SB.BORGID  OUTER APPLY (  SELECT  RTrim(CURR.CURRCODE) CURRCODE,  isnull(CCEE.RATE, -1) as RATE,  isnull(CURR.DECIMALS, 2) DECIMALS  from CURRENCIES CURR  INNER JOIN (   select CCE.FROMCURR, CCE.RATE   FROM BORGS B   INNER JOIN CURREXCH CCE ON CCE.GROUPID = B.CURREXGRP AND B.CURRENCY = CCE.TOCURR   INNER JOIN CURREXCHGRP CCG ON CCE.GROUPID = CCG.GROUPID   INNER JOIN (    SELECT GROUPID, FROMCURR, TOCURR, MAX(STARTDATE) AS STARTDATE    FROM CURREXCH C    GROUP BY GROUPID, FROMCURR, TOCURR) ce   ON CCE.GROUPID = ce.groupid   AND CCE.FROMCURR = ce.fromcurr   AND CCE.TOCURR = ce.tocurr   AND CCE.STARTDATE = ce.startdate   WHERE B.BORGID = case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end   and CCG.DISABLED = 0   ) CCEE  ON CCEE.FROMCURR = CURR.CURRCODE  WHERE CURR.CURRCODE = S.CURRENCY  ) EXR OUTER APPLY ( 	select ACTID, Sum(amount) as AMOUNT     from ( 	    Select 	    ACTIVITIES.ACTID as ACTID, 	    sum((ACCBOQDETAIL.[PROG QTY] - case when rtrim(isnull(SS.code,'')) = '' or rtrim(isnull(SS.code,'')) = 'PO' then 0 else ACCBOQDetail.[prev QTY] end) * ACCBOQDETAIL.RATE) as amount 	    FROM ACCBOQHEADER 	    INNER JOIN SUBCRECONS SS on SS.RECONID = S.RECONID 	    INNER JOIN ACCBOQDETAIL ON ACCBOQHEADER.HEADERID = ACCBOQDETAIL.HEADERID 	    LEFT OUTER JOIN ACTIVITIES ON ACCBOQDETAIL.ACTID = ACTIVITIES.ACTID 	    WHERE ACCBOQHEADER.RECONID = S.RECONID 	    and ACCBOQDetail.[use] = 1 and ACCBOQDetail.ReconHistID = -1 and ACCBOQDetail.IsSysEntry = 0 		AND ( 			(isnull(ACCBOQDETAIL.FILETYPE, '') = '' and S.PROVID = 1) 		OR 			(isnull(ACCBOQDETAIL.FILETYPE, '') <> '' AND ACCBOQDETAIL.Status = 'A' and S.PROVID2 = 1) 		) 		GROUP BY ACTIVITIES.ACTID         UNION ALL 		Select 		ACTIVITIES.ACTID as ACTID, 		sum(-1 * ACCBOQPREV.AMOUNT) as amount 		FROM ACCBOQPREV 		LEFT OUTER JOIN ACTIVITIES ON ACCBOQPREV.ACTID = ACTIVITIES.ACTID 		WHERE ACCBOQPREV.RECONID = S.RECONID 		AND ( 			(ACCBOQPREV.[FILETYPE] = 'WD' and S.PROVID = 1) 		OR 			(ACCBOQPREV.[FILETYPE] = 'VAR' and S.PROVID2 = 1) 		) 		GROUP BY ACTIVITIES.ACTID 		union all 		SELECT S.ACTIVITY as ACTID, 0 as AMOUNT 		) D 	where (amount <> 0 or S.ACTIVITY = D.ACTID) 	group by ACTID ) BOQ outer apply ( 	select round( 		case WHEN S.PROVID = 0 THEN case when BOQ.ACTID = S.ACTIVITY then isnull(S.WORKDONETHISMONTH, 0) else 0 end ELSE isnull(BOQ.AMOUNT, 0) END 		+ case WHEN S.PROVID2 = 0 THEN case when BOQ.ACTID = S.ACTIVITY then isnull(S.ADDITIONALTHISMONTH, 0) else 0 end ELSE case when S.PROVID = 0 then isnull(BOQ.AMOUNT, 0) else 0 end END 		+ case when BOQ.ACTID = S.ACTIVITY then isnull(S.ESCALATIONTHISMONTH, 0) + isnull(S.MOSTHISMONTH, 0) + isnull(S.BFWDTHISMONTH, 0) - isnull(S.DISCOUNTTHISMONTH, 0) else 0 end 		, isnull(CURRENCIES.DECIMALS, 2)) AMOUNT ) SAMOUNT left outer JOIN ACTIVITIES ON isnull(BOQ.ACTID, S.ACTIVITY) = ACTIVITIES.ActID INNER JOIN BORGS on BORGS.BORGID = case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Subc Recons' WHERE ACCRUALS.INUSE = 1 AND S.Posted = 0 AND SAMOUNT.AMOUNT <> 0 UNION ALL /*Subc Recons*/ SELECT S.PostDate AS Pdate, 'SUBACC' as Batchref, 'SUBACC' as Transref, case when isnull(S.LEDGER, '') = '' then SUBCONTRACTORS.SUBGLCODE else S.LEDGER end as Ledgercode, Contracts.ContrNumber as Contract, 'Sub Contractors Certificates Contras' as Description, S.currency as Currency, CASE WHEN SAMOUNT.AMOUNT > 0 THEN round(ABS(SAMOUNT.AMOUNT), isnull(CURRENCIES.DECIMALS, 2)) ELSE 0 END as Debit, CASE WHEN SAMOUNT.AMOUNT > 0 THEN 0 ELSE round(ABS(SAMOUNT.AMOUNT), isnull(CURRENCIES.DECIMALS, 2)) END as Credit, SUBCONTRACTORS.SubNumber as Credno, ' ' AS Credrec, ' ' AS Debtrec, Subcontractors.Subname AS Subbrec, ' ' AS Plantno, ' ' AS Stockno, ' ' as store, 0 as Quantity, ' ' AS Unit, ' ' AS Grnno, cast(abs(SAMOUNT.AMOUNT) * CASE when S.CURRENCY <> BORGS.CURRENCY and SB.CURRENCY = BORGS.CURRENCY then S.EXCHRATE when S.CURRENCY = EXR.CURRCODE then EXR.RATE else 0 end as decimal(38, 4)) as HOMECURRAMOUNT, cast(abs(SAMOUNT.AMOUNT) * CASE when S.CURRENCY <> BORGS.CURRENCY and SB.CURRENCY = BORGS.CURRENCY then S.EXCHRATE when S.CURRENCY = EXR.CURRCODE then EXR.RATE else 1 end as decimal(38, 4)) as HOMEAMOUNT, Contracts.Contrname, LEDGERCODES.LedgerName, Projname as Projname, Projnumber as Projnumber, BORGS.CURRENTYEAR as Year, BORGS.PERIOD as Period, ' ' AS ORDERNO, ALLOCATION, 'Sub Contractors Accruals' as accrual, case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end ORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, isnull(S.DIVID, -1) as DIV, isnull(DIVISIONS.DIVCODE, -1) AS DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM SUBCRECONS S inner join SUBCONTRACTORS ON S.SubConNumber = SUBCONTRACTORS.SubID LEFT OUTER JOIN CONTRACTS ON S.Contract = CONTRACTS.CONTRID left outer join PROJECTS on CONTRACTS.projid = PROJECTS.projid LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = S.currency LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = S.DIVID LEFT OUTER JOIN LEDGERCODES ON case when isnull(S.LEDGER, '') = '' then SUBCONTRACTORS.SUBGLCODE else S.LEDGER end = LEDGERCODES.LEDGERCODE LEFT OUTER JOIN BORGS SB ON S.ORGID = SB.BORGID     OUTER APPLY (     SELECT     RTrim(CURR.CURRCODE) CURRCODE,     isnull(CCEE.RATE, -1) as RATE,     isnull(CURR.DECIMALS, 2) DECIMALS     from CURRENCIES CURR     INNER JOIN (     select CCE.FROMCURR, CCE.RATE     FROM BORGS B     INNER JOIN CURREXCH CCE ON CCE.GROUPID = B.CURREXGRP AND B.CURRENCY = CCE.TOCURR     INNER JOIN CURREXCHGRP CCG ON CCE.GROUPID = CCG.GROUPID     INNER JOIN (     SELECT GROUPID, FROMCURR, TOCURR, MAX(STARTDATE) AS STARTDATE     FROM CURREXCH C     GROUP BY GROUPID, FROMCURR, TOCURR) ce     ON CCE.GROUPID = ce.groupid     AND CCE.FROMCURR = ce.fromcurr     AND CCE.TOCURR = ce.tocurr     AND CCE.STARTDATE = ce.startdate     WHERE B.BORGID = case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end     and CCG.DISABLED = 0     ) CCEE     ON CCEE.FROMCURR = CURR.CURRCODE     WHERE CURR.CURRCODE = S.CURRENCY     ) EXR OUTER APPLY (     select ACTID, LEDGERCODE, Sum(amount) as AMOUNT     from (         Select         ACTIVITIES.ACTID as ACTID,         CONTRAS.CONTRAALLOC LEDGERCODE,         sum(CONTRAQTY * CONTRARATE) as amount         FROM CONTRAS         LEFT OUTER JOIN ACTIVITIES ON CONTRAS.CONTRAACT = ACTIVITIES.ACTNUMBER         WHERE CONTRAS.CONTRARECONID = S.RECONID         and CONTRAS.ReconHistID = -1 and CONTRAS.IsSysEntry = 0         GROUP BY ACTIVITIES.ACTID, CONTRAS.CONTRAALLOC         ) D     where (amount <> 0 or S.ACTIVITY = D.ACTID)     group by ACTID, LEDGERCODE ) CONTRA outer apply (     select round(         case when CONTRA.AMOUNT is null then isnull(S.CONTRATHISMONTH, 0) ELSE isnull(CONTRA.AMOUNT, 0) END         , isnull(CURRENCIES.DECIMALS, 2)) AMOUNT ) SAMOUNT left outer JOIN ACTIVITIES ON isnull(CONTRA.ACTID, S.ACTIVITY) = ACTIVITIES.ActID INNER JOIN BORGS on BORGS.BORGID = case when ALLOCATION = 'Contracts' then PROJECTS.BORGID else S.ORGID end INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Subc Recons' WHERE ACCRUALS.INUSE = 1 AND S.Posted = 0 AND SAMOUNT.AMOUNT <> 0 UNION ALL /*Stock*/ SELECT GETDATE() AS Pdate, INVSTORES.StoreCode AS Batchref, LEFT(INVENTORY.STKCODE, 10) AS TransRef, LEDGERCODES.LedgerCode, CONTRACTS.CONTRNUMBER AS Contract, rtrim(ltrim(replace(replace(replace(replace(cast(INVENTORY.StkDesc as nvarchar(MAX)),'',''),char(9),''),char(10),''),char(13),' '))) AS Description, BORGS.CURRENCY AS Currency, round(CAST(INVENTORY.StkQuantity * INVENTORY.StkSellRate AS money), isnull(CURRENCIES.DECIMALS, 2)) AS Debit, 0 AS Credit, ' ' AS Credno, ' ' AS Credrec, ' ' AS Debtrec, ' ' AS Subbrec, '-1' AS Plntno, INVENTORY.STKCODE AS Stockno, INVSTORES.StoreCode as store, INVENTORY.StkQuantity AS Quantitiy, INVENTORY.StkUnit AS Unit, ' ' AS Grnno, 0 AS HomeCurrAmount, round(CAST(INVENTORY.StkQuantity * INVENTORY.StkSellRate AS money), isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, CONTRACTS.CONTRNAME AS Contrname, LEDGERCODES.LedgerName, PROJECTS.ProjName AS Projname, PROJECTS.ProjNumber AS Projnumber, BORGS.CURRENTYEAR AS Year, BORGS.PERIOD AS period, ' ' AS ORDERNO, 'Contracts' AS ALLOCATION, 'Stock' AS ACCRUAL, INVENTORY.BorgID AS BORGID, 0 AS CONSTATUS, ' ' AS ACTNAME, ' ' AS ACTNUMBER, ' ' AS ACTUNIT, INVENTORY.StkID AS STKID, INVENTORY.StkSellRate AS Rate, -1 AS Div, '' AS DIVCODE, ' ' AS Tid, ' ' AS Delno, ' ' AS VATID FROM CONTRACTS INNER JOIN INVSTORES ON CONTRACTS.CONTRNUMBER = INVSTORES.StoreContNumber INNER JOIN INVENTORY ON INVSTORES.StoreCode = INVENTORY.StkStore INNER JOIN PROJECTS ON INVENTORY.BorgID = PROJECTS.BORGID AND CONTRACTS.PROJID = PROJECTS.PROJID INNER JOIN LEDGERCODES ON INVSTORES.StoreDefContGL = LEDGERCODES.LedgerCode INNER JOIN BORGS on BORGS.BORGID = INVENTORY.BorgID INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Stock' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY WHERE ACCRUALS.INUSE = 1 AND INVENTORY.StkQuantity > 0 UNION ALL /*Jobcards*/ SELECT JobCardDetail.JobDDate AS Pdate, 'JCACC' AS Batchref, JobCardHeader.JobCard# AS TransRef, JobCardDetail.LedgerCodeDetail AS LedgerCode, CONTRACTS.CONTRNUMBER AS Contract, rtrim(ltrim(replace(replace(replace(replace(cast(JobCardDetail.JobDDescription as nvarchar(MAX)),'',''),char(9),''),char(10),''),char(13),' '))) AS Description, BORGS.CURRENCY AS Currency, case when JobCardDetail.JobDAmount > 0 then round(JobCardDetail.JobDAmount, isnull(CURRENCIES.DECIMALS, 2)) else 0 end AS Debit, case when JobCardDetail.JobDAmount < 0 then round(abs(JobCardDetail.JobDAmount), isnull(CURRENCIES.DECIMALS, 2)) else 0 end AS Credit, ' ' AS Credno, ' ' AS Credrec, ' ' AS Debtrec, ' ' AS Subbrec, ' ' AS Plantno, ' ' AS Stockno, ' ' as store, JobCardDetail.JobDQuantity AS Quantity, JobCardDetail.JobDUnit AS Unit, ' ' AS Grnno, 0 AS HomeCurrAmount, round(JobCardDetail.JobDAmount, isnull(CURRENCIES.DECIMALS, 2)) AS HOMEAMOUNT, CONTRACTS.CONTRNAME AS Contrname, LEDGERCODES.LedgerName AS Ledgername, PROJECTS.ProjName AS Projname, PROJECTS.ProjNumber AS Projnumber, BORGS.CURRENTYEAR AS Year, BORGS.PERIOD AS period, ' ' AS ORDERNO, JobCardHeader.JobAllocation AS ALLOCATION, 'Job Card' AS ACCRUAL, JobCardHeader.BORGID AS BORGID, 0 AS CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, ' ' AS STKID, JobCardDetail.JobDRate AS Rate, JobCardHeader.DivID AS Div, isnull(DIVISIONS.DIVCODE, '') as DIVCODE, JobCardDetail.JobDDetialId AS Tid, ' ' AS Delno, ' ' AS VATID FROM JobCardDetail INNER JOIN JobCardHeader ON JobCardDetail.JobDCardID = JobCardHeader.JobCardID INNER JOIN CONTRACTS ON JobCardHeader.ContractID = CONTRACTS.CONTRNUMBER INNER JOIN PROJECTS ON CONTRACTS.PROJID = PROJECTS.PROJID INNER JOIN LEDGERCODES ON JobCardDetail.LedgerCodeDetail = LEDGERCODES.LedgerCode INNER JOIN ACTIVITIES ON JobCardDetail.JobDActNumber = ACTIVITIES.ActNumber INNER JOIN BORGS on BORGS.BORGID = JobCardHeader.BORGID INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Jobcards' LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = BORGS.CURRENCY LEFT OUTER JOIN DIVISIONS ON DIVISIONS.DIVID = JobCardHeader.DIVID WHERE ACCRUALS.INUSE = 1 AND JobCardDetail.JobDPosted = 0 UNION ALL /*Debtors Recons*/ SELECT DEBTRECONS.PostDate AS Pdate, 'DEBTACC' as Batchref, 'DEBTACC' as Transref, DEBTORS.DEBTGLCODE as Ledgercode, Contracts.ContrNumber as Contract, 'Debtors Certificates' as Description, DEBTRECONS.currency as Currency, CASE WHEN (isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0)) < 0 THEN round(ABS((isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0))), isnull(CURRENCIES.DECIMALS, 2)) ELSE 0 END as Debit, CASE WHEN (isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0)) < 0 THEN 0 ELSE round(ABS((isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0))), isnull(CURRENCIES.DECIMALS, 2)) END as Credit, DEBTORS.DEBTNUMBER as Credno, ' ' AS Credrec, ' ' AS Debtrec, DEBTORS.DEBTNAME AS Subbrec, ' ' AS Plantno, ' ' AS Stockno, ' ' as store, 0 as Quantity, ' ' AS Unit, ' ' AS Grnno, cast(abs(isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0)) * CASE when DEBTRECONS.CURRENCY <> BORGS.CURRENCY and DB.CURRENCY = BORGS.CURRENCY then DEBTRECONS.EXCHRATE when DEBTRECONS.CURRENCY = EXR.CURRCODE then EXR.RATE else 0 end as decimal(38, 4)) as HOMECURRAMOUNT, cast(abs(isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0)) * CASE when DEBTRECONS.CURRENCY <> BORGS.CURRENCY and DB.CURRENCY = BORGS.CURRENCY then DEBTRECONS.EXCHRATE when DEBTRECONS.CURRENCY = EXR.CURRCODE then EXR.RATE else 1 end as decimal(38, 4)) as HOMEAMOUNT, Contracts.Contrname, Ledgercodes.LEDGERNAME as Ledgername, Projname as Projname, Projnumber as Projnumber, BORGS.CURRENTYEAR as Year, BORGS.PERIOD as Period, ' ' AS ORDERNO, LEDGERCODES.LEDGERALLOC as ALLOCATION, 'Debtors Recon Accruals' as accrual, case when LEDGERCODES.LedgerAlloc = 'Contracts' then PROJECTS.BORGID else DEBTRECONS.ORGID END ORGID, CONTRACTS.CONSTATUS, isnull(ACTIVITIES.ACTNAME,' ') as ACTNAME, isnull(ACTIVITIES.ACTNUMBER, ' ') as ACTNUMBER, ACTIVITIES.ACTUNIT, -1 AS STKID, 0 AS RATE, -1 as DIV, '' DIVCODE, -1 AS TID, ' ' AS Delno, ' ' AS VATID FROM DEBTRECONS INNER JOIN DEBTORS ON DEBTRECONS.SubConNumber = DEBTORS.DEBTID LEFT OUTER JOIN ACTIVITIES ON DEBTRECONS.Activity = ACTIVITIES.ActID LEFT OUTER JOIN CONTRACTS ON DEBTRECONS.Contract = CONTRACTS.CONTRID LEFT OUTER JOIN PROJECTS on CONTRACTS.projid = PROJECTS.projid INNER JOIN LEDGERCODES ON DEBTORS.DEBTGLCODE = LEDGERCODES.LEDGERCODE LEFT OUTER JOIN CURRENCIES ON CURRENCIES.CURRCODE = DEBTRECONS.currency LEFT OUTER JOIN BORGS DB ON DEBTRECONS.ORGID = DB.BORGID  OUTER APPLY (  SELECT  RTrim(CURR.CURRCODE) CURRCODE,  isnull(CCEE.RATE, -1) as RATE,  isnull(CURR.DECIMALS, 2) DECIMALS  from CURRENCIES CURR  INNER JOIN (   select CCE.FROMCURR, CCE.RATE   FROM BORGS B   INNER JOIN CURREXCH CCE ON CCE.GROUPID = B.CURREXGRP AND B.CURRENCY = CCE.TOCURR   INNER JOIN CURREXCHGRP CCG ON CCE.GROUPID = CCG.GROUPID   INNER JOIN (    SELECT GROUPID, FROMCURR, TOCURR, MAX(STARTDATE) AS STARTDATE    FROM CURREXCH C    GROUP BY GROUPID, FROMCURR, TOCURR) ce   ON CCE.GROUPID = ce.groupid   AND CCE.FROMCURR = ce.fromcurr   AND CCE.TOCURR = ce.tocurr   AND CCE.STARTDATE = ce.startdate   WHERE B.BORGID = CASE WHEN LEDGERCODES.LEDGERALLOC = 'CONTRACTS' THEN PROJECTS.BORGID ELSE DEBTRECONS.ORGID END   and CCG.DISABLED = 0   ) CCEE  ON CCEE.FROMCURR = CURR.CURRCODE  WHERE CURR.CURRCODE = DEBTRECONS.CURRENCY  ) EXR INNER JOIN BORGS on BORGS.BORGID = case when LEDGERCODES.LedgerAlloc = 'Contracts' then PROJECTS.BORGID else DEBTRECONS.ORGID end INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Debtors Recons' WHERE ACCRUALS.INUSE = 1 AND DEBTRECONS.Posted = 0 AND (isnull(DEBTRECONS.WORKDONETHISMONTH, 0) + isnull(DEBTRECONS.MOSTHISMONTH, 0) + isnull(DEBTRECONS.ESCALATIONTHISMONTH, 0) - isnull(DEBTRECONS.DISCOUNTTHISMONTH, 0)) <> 0 UNION ALL /*Journals*/ select isnull(JOURNALS.pdate, JOURNALHEADER.JnlHeadDate) as PDATE, JOURNALHEADER.JNLHEADBATCH as BATCHREF, case when JOURNALHEADER.JnlIsAutoIC <> 0 then JOURNALHEADER.JnlHeadTransRef else JOURNALS.JNLTRANSREF end as TRANSREF, JOURNALS.JnlLedgerCode as LEDGERCODE, case when LEDGERCODES.LEDGERALLOC = 'Contracts' or rtrim(JOURNALS.JnlContract) <> '' then JOURNALS.JnlContract else '' end as CONTRACT, JOURNALS.JnlDescription as DESCRIPTION, BORGS.Currency as CURRENCY, case when JOURNALS.JnlDebit <> 0 then JOURNALS.JnlDebit - JOURNALS.JnlVatDebit + abs(MT.REIMBTAX) else 0 end as DEBIT, case when JOURNALS.JnlDebit = 0 then JOURNALS.JnlCredit - JOURNALS.JnlVatCredit + abs(MT.REIMBTAX) else 0 end as CREDIT, JOURNALS.JnlCredno as CREDNO, isnull(CREDITORS.CREDNAME, '') as CREDREC, isnull(DEBTORS.DEBTNAME, '') as DEBTREC, isnull(SUBCONTRACTORS.SUBNAME, '') as SUBBREC, case when JOURNALHEADER.ISFASSET = 1 then JOURNALS.ASSETNUMBER else JOURNALS.JnlPlant end as PLANTNO, ' ' as STOCKNO, ' ' as STORE, 0 as QUANTITY, ' ' as UNIT, ' ' as GRNNO, case when BORGS.Currency = JOURNALHEADER.JNLHEADCURRENCY then 0 else round((case when JOURNALS.JnlDebit <> 0 then JOURNALS.JnlDebit - JOURNALS.JnlVatDebit + abs(MT.REIMBTAX) else JOURNALS.JnlCredit - JOURNALS.JnlVatCredit + abs(MT.REIMBTAX) end) * (case when BORGS.Currency = BORGS.CURRENCY then JOURNALS.JnlExchRate else EXR.RATE end), 2) end as HOMECURRAMOUNT, case when BORGS.Currency = JOURNALHEADER.JNLHEADCURRENCY then abs((JOURNALS.JnlDebit - JOURNALS.JnlVatDebit + abs(MT.REIMBTAX)) - (JOURNALS.JnlCredit - JOURNALS.JnlVatCredit + abs(MT.REIMBTAX))) else round((case when JOURNALS.JnlDebit <> 0 then JOURNALS.JnlDebit - JOURNALS.JnlVatDebit + abs(MT.REIMBTAX) else JOURNALS.JnlCredit - JOURNALS.JnlVatCredit + abs(MT.REIMBTAX) end) * (case when BORGS.Currency = BORGS.CURRENCY then JOURNALS.JnlExchRate else EXR.RATE end), 2) end as HOMEAMOUNT, Contracts.Contrname as CONTRNAME, Ledgercodes.Ledgername as LEDGERNAME, PROJECTS.Projname as PROJNAME, PROJECTS.Projnumber as PROJNUMBER, CASE WHEN isnull(JOURNALHEADER.JNLYEAR, '') = '' then BORGS.CURRENTYEAR else JOURNALHEADER.JNLYEAR end AS Year, case when isnull(JOURNALHEADER.JnlPeriod, -1) = -1 then BORGS.PERIOD else JOURNALHEADER.JnlPeriod end as PERIOD, ' ' as ORDERNO, LEDGERCODES.LEDGERALLOC as ALLOCATION, 'Journals' as ACCRUAL, case when JOURNALS.JNLTOORG = -1 then JOURNALS.JnlOrg ELSE JOURNALS.JNLTOORG END as BORGID, CONTRACTS.CONSTATUS as CONSTATUS, isnull(ACTIVITIES.ACTNAME, ' ') as ACTNAME, case when LEDGERCODES.LEDGERALLOC = 'Contracts' then JOURNALS.JnlActivity else '' end as ACTNUMBER, ACTIVITIES.ACTUNIT as ACTUNIT, -1 as STKID, 0 as RATE, case when isnull(JOURNALS.JnlDivision, '') = '' then -1 else JOURNALS.JnlDivision end as DIVID, case when isnull(JOURNALS.JnlDivision, '') = '' then '' else DIVISIONS.DIVCODE end as DIVCODE, 0 as DLVRID, ' ' as DLVRNO, case when JOURNALS.JNLTOORG = JOURNALS.JnlOrg or JOURNALS.JNLTOORG = -1 then JOURNALS.JnlVATType else 'Z' end as VATID from JOURNALHEADER INNER JOIN JOURNALS ON JOURNALHEADER.JNLHEADID = JOURNALS.JNLHEADID INNER JOIN LEDGERCODES ON JOURNALS.JNLLEDGERCODE = LEDGERCODES.LEDGERCODE INNER JOIN BORGS ON BORGS.BORGID = JOURNALHEADER.BorgID LEFT OUTER JOIN DIVISIONS on JOURNALS.JnlDivision = DIVISIONS.DIVID LEFT OUTER JOIN ACTIVITIES ON JOURNALS.JnlActivity = ACTIVITIES.ACTNUMBER LEFT OUTER JOIN CONTROLCODES ON LEDGERCODES.LEDGERCODE BETWEEN CONTROLCODES.CONTROLFROMGL AND CONTROLCODES.CONTROLTOGL and CONTROLCODES.ControlName in ('Creditors','Debtors','Sub Contractors') LEFT OUTER JOIN CREDITORS ON CREDITORS.CREDNUMBER = JOURNALS.JnlCredno and CONTROLCODES.ControlName = 'Creditors' LEFT OUTER JOIN DEBTORS ON DEBTORS.DEBTNUMBER = JOURNALS.JnlCredno and CONTROLCODES.ControlName = 'Debtors' LEFT OUTER JOIN SUBCONTRACTORS ON SUBCONTRACTORS.SUBNUMBER = JOURNALS.JnlCredno and CONTROLCODES.ControlName = 'Sub Contractors' LEFT OUTER JOIN CONTRACTS ON CONTRACTS.CONTRNUMBER = JOURNALS.JnlContract LEFT OUTER JOIN PLANTANDEQ ON PLANTANDEQ.PENUMBER = case when JOURNALHEADER.ISFASSET = 1 then JOURNALS.ASSETNUMBER else JOURNALS.JnlPlant end LEFT OUTER JOIN PROJECTS ON PROJECTS.PROJID = CONTRACTS.PROJID OUTER APPLY(SELECT ISNULL(SUM(ISNULL(TAX, 0)), 0) REIMBTAX FROM GETVIEWTAXTRANS('', (JOURNALS.JNLDEBIT - JOURNALS.JNLVATDEBIT) - (JOURNALS.JNLCREDIT - JOURNALS.JNLVATCREDIT), JOURNALS.JNLVATTYPE, ISNULL(JOURNALS.JNLTOORG, JOURNALHEADER.BORGID), JOURNALHEADER.JNLHEADCURRENCY) WHERE ISNULL(ISREIMB, -1) = 0) MT OUTER APPLY (     SELECT     RTrim(CURR.CURRCODE) CURRCODE,     isnull(CCEE.RATE, -1) as RATE,     isnull(CURR.DECIMALS, 2) DECIMALS     from CURRENCIES CURR     INNER JOIN (     select CCE.FROMCURR, CCE.RATE     FROM BORGS B     INNER JOIN CURREXCH CCE ON CCE.GROUPID = B.CURREXGRP AND B.CURRENCY = CCE.TOCURR     INNER JOIN CURREXCHGRP CCG ON CCE.GROUPID = CCG.GROUPID     INNER JOIN (     SELECT GROUPID, FROMCURR, TOCURR, MAX(STARTDATE) AS STARTDATE     FROM CURREXCH C     GROUP BY GROUPID, FROMCURR, TOCURR) ce     ON CCE.GROUPID = ce.groupid     AND CCE.FROMCURR = ce.fromcurr     AND CCE.TOCURR = ce.tocurr     AND CCE.STARTDATE = ce.startdate     WHERE B.BORGID = ISNULL(JOURNALS.JNLTOORG, JOURNALHEADER.BorgID)     and CCG.DISABLED = 0     ) CCEE     ON CCEE.FROMCURR = CURR.CURRCODE     WHERE CURR.CURRCODE = JOURNALHEADER.JnlHeadCurrency     ) EXR INNER JOIN ACCRUALS on BORGS.BORGID = ACCRUALS.BORGID and ACCRUALS.ACCRUAL = 'Journals' WHERE ACCRUALS.INUSE = 1 AND JOURNALHEADER.JnlHeadPosted = 0 AND JOURNALHEADER.ARCHIVE = 0 AND JOURNALHEADER.BATCHMODE = 0 AND JOURNALHEADER.JnlIsAutoIC = 0