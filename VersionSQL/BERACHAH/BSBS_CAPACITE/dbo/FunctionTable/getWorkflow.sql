/****** Object:  Function [dbo].[getWorkflow]    Committed by VersionSQL https://www.versionsql.com ******/

-- =============================================
-- Author: Matthew Spiller
-- Create date: 03-11-2014
-- Description:	returns workflow associated with provided cost codes
-- NOTES:
-- 2016-06-22 Matthew @costCode was nvarchar(10) with the database still having char(10) codes this does not make use of existing indexs and slows down the function
-- =============================================
CREATE FUNCTION getWorkflow (@mainOrgid INT, @borgid INT, @ledgerCode nvarchar(10), @costCode char(10), @proc nvarchar(5), @subType nvarchar(5), @lev char(1) = 'H')
    RETURNS @t TABLE (
		ID int,
		DESCR nvarchar(250))
AS
BEGIN
    declare @alloc nvarchar(15)
	declare @WHID int
		
	set @WHID = -1
	set @alloc = ''

	if exists(select CONTROLCODES.CONTROLID from CONTROLCODES where CONTROLCODES.CONTROLNAME = 'Stock' and @ledgerCode between CONTROLCODES.CONTROLFROMGL and CONTROLCODES.CONTROLTOGL) 
	BEGIN
		set @alloc = 'Store'
	END
	ELSE
	BEGIN
		SELECT @alloc = LEDGERCODES.LEDGERALLOC from LEDGERCODES where LEDGERCODES.LEDGERCODE = cast(@ledgerCode as char(10))
	END

	if(select BORGS.USEWORKFLOW from BORGS where BORGS.BORGID = @mainOrgid) = 1
	BEGIN
		SET @WHID = isnull((
			SELECT TOP 1 WH.WHID
			FROM WORKFLOWHEADER WH

			INNER JOIN WORKFLOWLINKS WL with(index(PK_WORKFLOWLINKS)) on WH.WHID = WL.WHID
			LEFT OUTER JOIN BORGS B ON WL.THEID = B.BORGID AND WL.LEV = 0 and B.BORGID = @borgid
			LEFT OUTER JOIN WORKFLOWLEDGERCODERANGERS WLC on WL.THEID = WLC.WLCID AND WL.ALLOC = WLC.ALLOC AND WL.LEV = 4 AND @borgid = WLC.BORGID and @ledgerCode between WLC.FROMLC and WLC.TOLC
			LEFT OUTER JOIN PLANTANDEQ P on P.PENUMBER = @costCode and WL.THEID = P.DIVID AND WL.ALLOC = 'Plant' AND @borgid = P.BORGID AND WL.LEV = 2
			LEFT OUTER JOIN DIVISIONS D on cast(D.DIVID as nvarchar(10)) = @costCode and WL.THEID = D.DIVID AND WL.ALLOC = 'Overheads' AND @borgid = D.BORGID AND WL.LEV = 2
			LEFT OUTER JOIN PROJECTS PROJ on PROJ.PROJID = (select top 1 PROJID from CONTRACTS where CONTRNUMBER = @costCode) and WL.THEID = PROJ.PROJID AND WL.ALLOC = 'Contracts' AND @borgid = PROJ.BORGID AND WL.LEV = 2
			LEFT OUTER JOIN WORKFLOWSTOREBORG WSB on WSB.STORECODE = @costCode and WL.THEID = WSB.WSBID AND WL.ALLOC = 'Store' AND @borgid = WSB.BORGID AND WL.LEV = 2
			LEFT OUTER JOIN CONTRACTS C ON C.CONTRNUMBER = @costCode and WL.THEID = C.CONTRID AND WL.ALLOC = 'Contracts' AND WL.LEV = 3

      LEFT OUTER JOIN (
	      SELECT DISTINCT WHID FROM WORKFLOWDETAIL 
	      CROSS APPLY(
		      SELECT COUNT(*) as NUM
		      FROM WORKFLOWSKIPCONDITION with(index(PK_WORKFLOWSKIPCONDITION))
		      LEFT OUTER JOIN BORGS B_SC ON WORKFLOWSKIPCONDITION.THEID = B_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 0 and B_SC.BORGID = @borgid
		      LEFT OUTER JOIN WORKFLOWLEDGERCODERANGERS WLC_SC on WORKFLOWSKIPCONDITION.THEID = WLC_SC.WLCID AND @alloc = WLC_SC.ALLOC AND WORKFLOWSKIPCONDITION.LEV = 4 AND @borgid = WLC_SC.BORGID and @ledgerCode between WLC_SC.FROMLC and WLC_SC.TOLC
		      LEFT OUTER JOIN PLANTANDEQ P_SC on P_SC.PENUMBER = @costCode and WORKFLOWSKIPCONDITION.THEID = P_SC.DIVID AND WORKFLOWSKIPCONDITION.ALLOC = 'Plant' AND @borgid = P_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
		      LEFT OUTER JOIN DIVISIONS D_SC on cast(D_SC.DIVID as nvarchar(10)) = @costCode and WORKFLOWSKIPCONDITION.THEID = D_SC.DIVID AND WORKFLOWSKIPCONDITION.ALLOC = 'Overheads' AND @borgid = D_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
		      LEFT OUTER JOIN PROJECTS PROJ_SC on PROJ_SC.PROJID = (select top 1 PROJID from CONTRACTS where CONTRNUMBER = @costCode) and WORKFLOWSKIPCONDITION.THEID = PROJ_SC.PROJID AND WORKFLOWSKIPCONDITION.ALLOC = 'Contracts' AND @borgid = PROJ_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
		      LEFT OUTER JOIN WORKFLOWSTOREBORG WSB_SC on WSB_SC.STORECODE = @costCode and WORKFLOWSKIPCONDITION.THEID = WSB_SC.WSBID AND WORKFLOWSKIPCONDITION.ALLOC = 'Store' AND @borgid = WSB_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
		      LEFT OUTER JOIN CONTRACTS C_SC ON C_SC.CONTRNUMBER = @costCode and WORKFLOWSKIPCONDITION.THEID = C_SC.CONTRID AND WORKFLOWSKIPCONDITION.ALLOC = 'Contracts' AND WORKFLOWSKIPCONDITION.LEV = 3
		      WHERE WORKFLOWDETAIL.WDID = WORKFLOWSKIPCONDITION.WDID
		      AND WORKFLOWSKIPCONDITION.ALLOC = @alloc
		      AND(
			      not (B_SC.BORGID is null and WLC_SC.WLCID is null and P_SC.PEID is null and D_SC.DIVID is null and PROJ_SC.PROJID is null and WSB_SC.WSBID is null and C_SC.CONTRID is null)
		      )
	      ) WDSKIP
	      WHERE SKIPCONDITION in (-1, 0, @borgid)
	      OR (SKIPCONDITION = -2 AND WDSKIP.NUM > 0)
        OR (SKIPCONDITION = -3 AND @mainOrgid <> @borgid)
      ) WD ON WH.WHID = WD.WHID

			WHERE WH.[PROC] in ('ALL', @proc)
      AND WH.[SUBTYPE] in ('', @subType)
			AND WL.ALLOC = @alloc
      AND(
				not (B.BORGID is null and WLC.WLCID is null and P.PEID is null and D.DIVID is null and PROJ.PROJID is null and WSB.WSBID is null and C.CONTRID is null)
			)
			AND WD.WHID is not null
			ORDER BY WH.[SUBTYPE] desc, WL.LEV desc, WH.WHID), @WHID
		)

    if @lev = 'D'
		BEGIN
			insert into @t
			select WORKFLOWDETAIL.WDID, WORKFLOWDETAIL.DESCR
			FROM WORKFLOWDETAIL
			CROSS APPLY(
				SELECT COUNT(*) as NUM
				FROM WORKFLOWSKIPCONDITION with(index(PK_WORKFLOWSKIPCONDITION))
				LEFT OUTER JOIN BORGS B_SC ON WORKFLOWSKIPCONDITION.THEID = B_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 0 and B_SC.BORGID = @borgid
				LEFT OUTER JOIN WORKFLOWLEDGERCODERANGERS WLC_SC on WORKFLOWSKIPCONDITION.THEID = WLC_SC.WLCID AND @alloc = WLC_SC.ALLOC AND WORKFLOWSKIPCONDITION.LEV = 4 AND @borgid = WLC_SC.BORGID and @ledgerCode between WLC_SC.FROMLC and WLC_SC.TOLC
				LEFT OUTER JOIN PLANTANDEQ P_SC on P_SC.PENUMBER = @costCode and WORKFLOWSKIPCONDITION.THEID = P_SC.DIVID AND WORKFLOWSKIPCONDITION.ALLOC = 'Plant' AND @borgid = P_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
				LEFT OUTER JOIN DIVISIONS D_SC on cast(D_SC.DIVID as nvarchar(10)) = @costCode and WORKFLOWSKIPCONDITION.THEID = D_SC.DIVID AND WORKFLOWSKIPCONDITION.ALLOC = 'Overheads' AND @borgid = D_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
				LEFT OUTER JOIN PROJECTS PROJ_SC on PROJ_SC.PROJID = (select top 1 PROJID from CONTRACTS where CONTRNUMBER = @costCode) and WORKFLOWSKIPCONDITION.THEID = PROJ_SC.PROJID AND WORKFLOWSKIPCONDITION.ALLOC = 'Contracts' AND @borgid = PROJ_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
				LEFT OUTER JOIN WORKFLOWSTOREBORG WSB_SC on WSB_SC.STORECODE = @costCode and WORKFLOWSKIPCONDITION.THEID = WSB_SC.WSBID AND WORKFLOWSKIPCONDITION.ALLOC = 'Store' AND @borgid = WSB_SC.BORGID AND WORKFLOWSKIPCONDITION.LEV = 2
				LEFT OUTER JOIN CONTRACTS C_SC ON C_SC.CONTRNUMBER = @costCode and WORKFLOWSKIPCONDITION.THEID = C_SC.CONTRID AND WORKFLOWSKIPCONDITION.ALLOC = 'Contracts' AND WORKFLOWSKIPCONDITION.LEV = 3
				WHERE WORKFLOWDETAIL.WDID = WORKFLOWSKIPCONDITION.WDID
				AND WORKFLOWSKIPCONDITION.ALLOC = @alloc
				AND(
					(isnull(B_SC.BORGID, -1) <> -1) or (isnull(WLC_SC.WLCID, -1) <> -1) or (isnull(P_SC.PEID, -1) <> -1) or (isnull(D_SC.DIVID, -1) <> -1) or (isnull(PROJ_SC.PROJID, -1) <> -1) or (isnull(WSB_SC.WSBID, -1) <> -1) or (isnull(C_SC.CONTRID, -1) <> -1)
				)
			) WDSKIP
			WHERE WORKFLOWDETAIL.WHID = @WHID
			AND ( 
				SKIPCONDITION in (-1, 0, @borgid)
				OR (SKIPCONDITION = -2 AND WDSKIP.NUM > 0)
        OR (SKIPCONDITION = -3 AND @mainOrgid <> @borgid)
			)

			ORDER BY WORKFLOWDETAIL.SEQ  
		END
	END

  if @lev = 'H' or (select count(*) from @t) = 0
	BEGIN
		insert into @t
		select @WHID, isnull((select DESCR FROM WORKFLOWHEADER WHERE WHID = @WHID), '')
	END

	RETURN
END
		
		