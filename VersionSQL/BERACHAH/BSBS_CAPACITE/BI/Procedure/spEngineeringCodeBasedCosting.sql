/****** Object:  Procedure [BI].[spEngineeringCodeBasedCosting]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE BI.spEngineeringCodeBasedCosting(@FROMYEAR INT,@FROMPERIOD INT,@TOYEAR INT,@TOPERIOD INT,@ORGID INT) 
AS
set @orgid=65
set @fromperiod = 1
set @toperiod = 12
set @fromyear=2020
set @toyear=2020
CREATE TABLE #TEMP0(ID INT PRIMARY KEY IDENTITY(1,1),ACTIVITYCODE VARCHAR(15),ACTIVITYNAME VARCHAR(100),REVENUESUBMITTED DECIMAL(18,2),REVENUECERTIFIED DECIMAL(18,2),REVENUEWIP DECIMAL(18,2),
MATERIAL DECIMAL(18,2),LABOUR DECIMAL(18,2)) 

INSERT INTO #TEMP0(ACTIVITYCODE,ACTIVITYNAME) 
SELECT ACTNUMBER, ACTNAME FROM ACTIVITIES WHERE LEFT(ACTNUMBER,4)='4000' ORDER BY ACTNAME 

UPDATE #TEMP0 SET REVENUECERTIFIED=0,REVENUESUBMITTED=0,REVENUEWIP=0,MATERIAL=0,LABOUR=0

SELECT LEDGERCODE,ACTIVITYCODE,AMOUNT,TRANGRP 
INTO #RECONHISTORY 
FROM BI.ENGINEERINGCODES 
WHERE ORGID=@ORGID AND TRANGRP<>-1

ALTER TABLE #RECONHISTORY ADD FINYEAR INT 
ALTER TABLE #RECONHISTORY ADD PERIOD INT
UPDATE #RECONHISTORY 
SET FINYEAR=T.YEAR, PERIOD = T.PERIOD 
FROM TRANSACTIONS T 
INNER JOIN #RECONHISTORY ON #RECONHISTORY.TRANGRP = T.TRANGRP 

DELETE FROM #RECONHISTORY WHERE FINYEAR=@TOYEAR   AND PERIOD >@TOPERIOD 
DELETE FROM #RECONHISTORY WHERE FINYEAR=@FROMYEAR AND PERIOD <@FROMPERIOD 

SELECT LEDGERCODE,ACTIVITYCODE,SUM(AMOUNT) AMOUNT 
INTO #REVENUE 
FROM #RECONHISTORY  
GROUP BY LEDGERCODE,ACTIVITYCODE 

DECLARE @SUBMITTED VARCHAR(15)
DECLARE @CERTIFIED VARCHAR(15)
SET @SUBMITTED='4010009'
SET @CERTIFIED='4010010'

UPDATE #TEMP0 SET REVENUESUBMITTED = R.AMOUNT FROM #REVENUE R 
INNER JOIN #TEMP0 ON #TEMP0.ACTIVITYCODE = R.ACTIVITYCODE 
WHERE R.LEDGERCODE = @SUBMITTED

UPDATE #TEMP0 SET REVENUESUBMITTED  = R.AMOUNT FROM #REVENUE R 
INNER JOIN #TEMP0 ON #TEMP0.ACTIVITYCODE = R.ACTIVITYCODE 
WHERE R.LEDGERCODE = @CERTIFIED
 
SELECT YEAR FINYEAR,PERIOD,ACTIVITY,(DEBIT-CREDIT) AMOUNT,TRANGRP 
INTO #MATERIAL
FROM TRANSACTIONS 
WHERE ORGID=@ORGID AND
TRANSTYPE IN (SELECT TYPENAME FROM STOCKTYPES) AND 
ALLOCATION='Contracts'  

DELETE FROM #MATERIAL WHERE FINYEAR=@TOYEAR   AND PERIOD >@TOPERIOD 
DELETE FROM #MATERIAL WHERE FINYEAR=@FROMYEAR AND PERIOD <@FROMPERIOD 


UPDATE #TEMP0 
SET MATERIAL = M.AMOUNT 
FROM #MATERIAL M 
INNER JOIN #TEMP0 ON #TEMP0.ACTIVITYCODE = M.Activity 



SELECT YEAR FINYEAR,PERIOD,ACTIVITY,(DEBIT-CREDIT) AMOUNT,TRANGRP 
INTO #LABOUR
FROM TRANSACTIONS 
WHERE ORGID=@ORGID AND
LEFT(BATCHREF,3) = 'SCI' AND 
ALLOCATION='Contracts'  

DELETE FROM #LABOUR WHERE FINYEAR=@TOYEAR   AND PERIOD >@TOPERIOD 
DELETE FROM #LABOUR WHERE FINYEAR=@FROMYEAR AND PERIOD <@FROMPERIOD 

UPDATE #TEMP0 
SET LABOUR = L.AMOUNT
FROM #LABOUR L 
INNER JOIN #TEMP0 ON #TEMP0.ACTIVITYCODE = L.Activity 


SELECT YEAR FINYEAR,PERIOD,LEDGERCODE,(DEBIT-CREDIT) TRANSAMOUNT,TRANGRP 
INTO #INDIRECTTRANSACTIONS
FROM TRANSACTIONS 
WHERE ACTIVITY='200' AND
ORGID=@ORGID AND
ALLOCATION='Contracts'  

DELETE FROM #INDIRECTTRANSACTIONS WHERE FINYEAR=@TOYEAR   AND PERIOD >@TOPERIOD 
DELETE FROM #INDIRECTTRANSACTIONS WHERE FINYEAR=@FROMYEAR AND PERIOD <@FROMPERIOD 


SELECT LEDGERCODE,SUM(TRANSAMOUNT) AMOUNT 
INTO #INDIRECT 
FROM #INDIRECTTRANSACTIONS
GROUP BY LEDGERCODE 




CREATE TABLE #INDIRECTS(LEDGERCODE VARCHAR(15),LEDGERNAME VARCHAR(150),AMOUNT DECIMAL(18,2))
INSERT INTO #INDIRECTS(LEDGERCODE,AMOUNT) 
SELECT LEDGERCODE,AMOUNT FROM #INDIRECT 

UPDATE #INDIRECTS SET LEDGERNAME = L.LEDGERNAME FROM LEDGERCODES L INNER JOIN #INDIRECTS ON #INDIRECTS.LEDGERCODE=L.LEDGERCODE 
UPDATE #INDIRECTS SET LEDGERNAME = UPPER(LEDGERNAME) 

UPDATE #TEMP0 SET ACTIVITYNAME = UPPER(ACTIVITYNAME) 

SELECT ACTIVITYNAME,REVENUESUBMITTED,REVENUECERTIFIED,REVENUEWIP,MATERIAL,LABOUR FROM #TEMP0 
SELECT * FROM #INDIRECTS ORDER BY LEDGERNAME 