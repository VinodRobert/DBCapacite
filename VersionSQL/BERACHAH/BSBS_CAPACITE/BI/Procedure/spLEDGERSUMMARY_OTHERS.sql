/****** Object:  Procedure [BI].[spLEDGERSUMMARY_OTHERS]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE  PROCEDURE [BI].[spLEDGERSUMMARY_OTHERS](@LISTORGIDS  LISTORGIDS READONLY, @LEDGERCODE VARCHAR(10),@FROMYEAR INT ,@FROMPERIOD INT ,@TOYEAR INT,@TOPERIOD INT )  
AS
-- @LISTORGIDS  LISTORGIDS READONLY,
 
DECLARE @PARTYNAME VARCHAR(200)
DECLARE @REPORTPERIOD VARCHAR(200)
DECLARE @OBREQUIRED INT

DECLARE @LEDGERTYPE VARCHAR(15)
SELECT @LEDGERTYPE = LEDGERALLOC , @PARTYNAME = LEDGERNAME FROM LEDGERCODES WHERE LEDGERCODE=@LEDGERCODE 
 
IF @LEDGERTYPE = 'Balance Sheet' 
   SET @OBREQUIRED = 1
ELSE
   SET @OBREQUIRED = 0 

DECLARE @FROMMONTH VARCHAR(15)
DECLARE @TOMONTH VARCHAR(15)

DECLARE @DISPLAYFROMYEAR INT
DECLARE @DISPLAYTOYEAR INT

IF @FROMPERIOD BETWEEN 10 AND 12 
   SET @DISPLAYFROMYEAR = @FROMYEAR 
ELSE
   SET @DISPLAYFROMYEAR = @FROMYEAR-1

IF @TOYEAR BETWEEN 10 AND 12 
   SET @DISPLAYTOYEAR = @TOYEAR 
ELSE
   SET @DISPLAYTOYEAR = @TOYEAR-1

SELECT @FROMMONTH = PERIODDESC FROM PERIODMASTER WHERE PERIODID=@FROMPERIOD
SELECT @TOMONTH = PERIODDESC FROM PERIODMASTER WHERE PERIODID = @TOPERIOD 


SET @REPORTPERIOD = 'From ' +LTRIM(RTRIM(@FROMMONTH)) + ' - ' + LTRIM(RTRIM(STR(@FROMYEAR))) + ' To '  + LTRIM(RTRIM(@TOMONTH)) + ' - ' + LTRIM(RTRIM(STR(@TOYEAR))) 


DECLARE @MASTERDESCRIPTION VARCHAR(250)
DECLARE @BANKSTART VARCHAR(10)
DECLARE @BANKEND VARCHAR(10)
DECLARE @CASHSTART VARCHAR(10)
DECLARE @CASHEND VARCHAR(10)
SELECT @BANKSTART=CONTROLFROMGL ,@BANKEND = CONTROLTOGL FROM CONTROLCODES WHERE CONTROLNAME='Bank'
SELECT @CASHSTART=CONTROLFROMGL ,@CASHEND = CONTROLTOGL FROM CONTROLCODES WHERE CONTROLNAME='Petty Cash'

CREATE TABLE #TRANSACTIONS(TRANSINDEX  INT PRIMARY KEY IDENTITY(1,1),TRANGRP INT,TRANSTYPE VARCHAR(10), 
                           ORGID INT,TRANSACTIONDATE DATETIME,INVOICEDATE DATETIME,INVOICENUMBER VARCHAR(25),
						   CHEQUENUMBER VARCHAR(25), NARRATION VARCHAR(800), DEBIT DECIMAL(18,2),CREDIT DECIMAL(18,2),
						   CREDNO VARCHAR(15),CURRENCY VARCHAR(10),HOMECURRAMOUNT DECIMAL(18,2) )
CREATE TABLE #TRANSFINAL(TRANSINDEX  INT PRIMARY KEY  ,TRANGRP INT,TRANSTYPE VARCHAR(10), 
                         ORGID INT,TRANSACTIONDATE DATETIME,INVOICEDATE DATETIME,INVOICENUMBER VARCHAR(25),
						 CHEQUENUMBER VARCHAR(25), NARRATION VARCHAR(800), DEBIT DECIMAL(18,2),CREDIT DECIMAL(18,2)   )


CREATE TABLE #BANKS(LEDGERCODE VARCHAR(10))
INSERT INTO #BANKS 
SELECT LEDGERCODE FROM LEDGERCODES WHERE LEDGERCODE BETWEEN @BANKSTART AND @BANKEND AND LEDGERSUMMARY=0
INSERT INTO #BANKS 
SELECT LEDGERCODE FROM LEDGERCODES WHERE LEDGERCODE BETWEEN @CASHSTART AND @CASHEND AND LEDGERSUMMARY=0
DELETE FROM #BANKS WHERE LEDGERCODE IS NULL

CREATE TABLE #ORGS(ORGID INT)
INSERT INTO #ORGS   
SELECT ORGID  FROM @LISTORGIDS
DELETE FROM #ORGS WHERE ORGID IS NULL

 


--SELECT * FROM #ORGS 


DECLARE @TRANGRP INT
DECLARE @TRANSTYPE VARCHAR(15) 
DECLARE @STOCKLEDGERCODE VARCHAR(10)
DECLARE @ITEMTYPE VARCHAR(100)
DECLARE @TRANSID INT
DECLARE @NARRATION VARCHAR(250) 
DECLARE @TRANSINDEX INT 
DECLARE @TRANSDATE DATETIME
DECLARE @INVOICEDATE DATETIME
DECLARE @INVOICENUMBER VARCHAR(25)
DECLARE @DEBIT DECIMAL(18,2)
DECLARE @CREDIT DECIMAL(18,2) 
DECLARE @BANKLEDGRCODE VARCHAR(10)
DECLARE @BANKTRANSID INT
DECLARE @BANKNAME VARCHAR(150)
DECLARE @RECEIVEDDATE DATETIME 
DECLARE @ORGID INT 
DECLARE @EXPENSELEDGERCODE VARCHAR(10)
DECLARE @BYEAR INT
DECLARE @BPERIOD INT
DECLARE @BPDATE DATETIME 
DECLARE @BBATCHREF VARCHAR(10)
DECLARE @BTRANSREF VARCHAR(10)
DECLARE @ORDERNO VARCHAR(20) 
DECLARE @CREDNO VARCHAR(15) 
DECLARE @MISSINGTRANSTYPE INT 
DECLARE @HOMECURRAMOUNT DECIMAL(18,2) 


DECLARE @OPENINGBALANCE DECIMAL(18,2)
DECLARE @START_YEAR_BALANCE DECIMAL(18,2)
DECLARE @PREVIOUS_YEARS_BALANCE DECIMAL(18,2)
DECLARE @START_YEAR_OB DECIMAL(18,2)

DECLARE @CURRENCY VARCHAR(15) 

-- OPENING BALANCE GATHERED
CREATE TABLE #OB(ORGID INT,YEAR INT,PERIOD INT, OB DECIMAL(18,2) )


-- PREVIOUS YEARS OB CONSIDERED IRRESPECTIVE OF PERIODS - IN YEARS 


SELECT ORGID,YEAR,PERIOD,DEBIT,CREDIT,CURRENCY,HOMECURRAMOUNT 
INTO #OBSCRATCH 
FROM TRANSACTIONS  WHERE LEDGERCODE=@LEDGERCODE   AND YEAR =  @FROMYEAR   AND PERIOD =0 AND 
ORGID IN (SELECT ORGID FROM #ORGS) 

UPDATE #OBSCRATCH 
  SET CREDIT=HOMECURRAMOUNT WHERE CREDIT>0 AND CURRENCY <>'INR' 

UPDATE #OBSCRATCH 
  SET DEBIT=HOMECURRAMOUNT WHERE DEBIT>0 AND CURRENCY<>'INR' 


INSERT INTO #OB 
SELECT ORGID,YEAR,PERIOD,ISNULL(SUM(DEBIT-CREDIT),0) PREVYEARS
FROM #OBSCRATCH  GROUP BY ORGID ,YEAR ,PERIOD 










 -- TRANSACTIONS 
 SELECT ORGID,YEAR,PERIOD,TRANGRP 
 INTO #TRANSSUMMARY
 FROM TRANSACTIONS 
 WHERE LEDGERCODE=@LEDGERCODE  AND YEAR BETWEEN @FROMYEAR AND @TOYEAR AND PERIOD <>0
 DELETE FROM #TRANSSUMMARY WHERE ORGID NOT IN (SELECT ORGID FROM #ORGS) 
 DELETE FROM #TRANSSUMMARY WHERE YEAR=@FROMYEAR AND PERIOD<@FROMPERIOD 
 DELETE FROM #TRANSSUMMARY WHERE YEAR=@TOYEAR AND PERIOD>@TOPERIOD 
 
 CREATE TABLE #CONSIDEREDTRANSTYPE(TRANSTYPE VARCHAR(15))
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('DEL')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('SCI')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('JNL')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('CRI')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('BFD')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('CBC')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('CBD')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('PCP')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('PCR')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('CRA')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('REV')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('DTI')
 INSERT INTO #CONSIDEREDTRANSTYPE VALUES ('CCN')

  


 DECLARE TRANGRPS CURSOR FOR SELECT DISTINCT TRANGRP FROM #TRANSSUMMARY 
 OPEN TRANGRPS 
 FETCH NEXT FROM TRANGRPS INTO @TRANGRP 

 WHILE @@FETCH_STATUS =0
 BEGIN
   SELECT @TRANSTYPE = LEFT(TRANSTYPE,3),@MASTERDESCRIPTION =LTRIM(RTRIM(LEFT(DESCRIPTION,250)))  FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
   IF @TRANSTYPE='DEL' 
    BEGIN 
 	   SELECT @NARRATION = DESCRIPTION,@ORGID = ORGID,@TRANSDATE = PDATE, @INVOICEDATE =PDATE, 
	          @INVOICENUMBER=TRANSREF,@CREDNO=CREDNO ,@CURRENCY=CURRENCY ,@HOMECURRAMOUNT = HomeCurrAmount
	          FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE
	   SELECT @TRANSID = MIN(TRANSID) FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP 
	   SELECT @STOCKLEDGERCODE =BI.fnGetLedgerCode(@TRANSID) 
	   SELECT @ITEMTYPE = LEDGERNAME FROM LEDGERCODES WHERE LEDGERCODE=@STOCKLEDGERCODE 
	   SELECT @DEBIT=SUM(DEBIT),@CREDIT=SUM(CREDIT) FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
	   SET @NARRATION = LTRIM(RTRIM(@NARRATION))+ ' (' +LTRIM(RTRIM(@ITEMTYPE))+')'
	   INSERT INTO #TRANSACTIONS VALUES ( @TRANGRP, 'DEL', @ORGID, @TRANSDATE, @INVOICEDATE, @INVOICENUMBER,SPACE(10),@NARRATION,@DEBIT,@CREDIT,@CREDNO,@CURRENCY,@HOMECURRAMOUNT)
	END 

    IF @TRANSTYPE='SCI' 
    BEGIN 
 	   SELECT @NARRATION = DESCRIPTION,@ORGID = ORGID,@TRANSDATE = PDATE, @INVOICEDATE =PDATE, @INVOICENUMBER=TRANSREF,
	          @ORDERNO=ORDERNO, @CURRENCY=CURRENCY ,@HOMECURRAMOUNT = @HOMECURRAMOUNT,
	          @CREDNO = CREDNO FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE
	   SELECT @EXPENSELEDGERCODE  = LEDGERCODE FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND ALLOCATION='Contracts' AND DESCRIPTION  LIKE '%Total Gross Billing%'                                                                                                                                                                                                                                             
	   SELECT @ITEMTYPE = LEDGERNAME FROM LEDGERCODES WHERE LEDGERCODE=@EXPENSELEDGERCODE
	   --SET @NARRATION=  @NARRATION + 'WO No: '+  LTRIM(RTRIM(@ORDERNO))+ ' (' +LTRIM(RTRIM(@ITEMTYPE))+')'
	   SELECT @DEBIT=SUM(DEBIT),@CREDIT=SUM(CREDIT) FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
	   INSERT INTO #TRANSACTIONS VALUES ( @TRANGRP, 'SCI', @ORGID, @TRANSDATE, @INVOICEDATE, @INVOICENUMBER,SPACE(10),@NARRATION,@DEBIT,@CREDIT ,@CREDNO, @CURRENCY,@HOMECURRAMOUNT)
	   
	END 
   IF @TRANSTYPE IN ('JNL' ,'CRI' ,'BFD' , 'DTI','CCN' )
    BEGIN
	  
	  INSERT INTO #TRANSACTIONS
	  SELECT  TRANGRP,TRANSTYPE,ORGID,PDATE,RECEIVEDDATE,TRANSREF,SPACE(10),DESCRIPTION,DEBIT,CREDIT ,CREDNO ,CURRENCY  ,HomeCurrAmount
	  FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
	END
	
	IF @TRANSTYPE IN ('CBC','CBD','PCP','PCR','CRA'  )
	BEGIN
	   SELECT @BANKLEDGRCODE = LEDGERCODE ,@BANKTRANSID = TRANSID FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE IN (SELECT LEDGERCODE FROM #BANKS) 
	   SELECT @BANKNAME =  LTRIM(RTRIM(LEDGERNAME)) FROM LEDGERCODES WHERE LEDGERCODE=@BANKLEDGRCODE
	   SELECT @RECEIVEDDATE = RECEIVEDDATE FROM TRANSACTIONS WHERE TRANSID=@BANKTRANSID
	   SET @MASTERDESCRIPTION = @MASTERDESCRIPTION+' - ' +@BANKNAME 
	   INSERT INTO #TRANSACTIONS 
	   SELECT TRANGRP,LEFT(TRANSTYPE,3),ORGID,PDATE,@RECEIVEDDATE,SPACE(10),TRANSREF,LTRIM(RTRIM(@MASTERDESCRIPTION)),DEBIT,CREDIT ,CREDNO ,CURRENCY ,HomeCurrAmount
	   FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE
	   SET @BANKLEDGRCODE =''
	   SET @BANKNAME =''
	   SET @RECEIVEDDATE =''
	END

	IF @TRANSTYPE IN ('REV'  )
	BEGIN
	   SELECT @BYEAR=YEAR, @BPERIOD=PERIOD,@BPDATE=PDATE,@BBATCHREF=BATCHREF,@BTRANSREF=TRANSREF 
	   FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE

	   SELECT @BANKLEDGRCODE = LEDGERCODE ,@BANKTRANSID = TRANSID 
	   FROM TRANSACTIONS WHERE   LEDGERCODE IN (SELECT LEDGERCODE FROM #BANKS) AND YEAR=@BYEAR AND PERIOD=@BPERIOD AND 
	   PDATE=@BPDATE AND BATCHREF=@BBATCHREF AND  TRANSREF=@BTRANSREF 
	   SELECT @BANKNAME = LEDGERNAME FROM LEDGERCODES WHERE LEDGERCODE=@BANKLEDGRCODE
	   SELECT @RECEIVEDDATE = RECEIVEDDATE FROM TRANSACTIONS WHERE TRANSID=@BANKTRANSID
	   SET @MASTERDESCRIPTION = @MASTERDESCRIPTION+' - ' +@BANKNAME 

	   INSERT INTO #TRANSACTIONS 
	   SELECT TRANGRP,LEFT(TRANSTYPE,3),ORGID,PDATE,@RECEIVEDDATE,SPACE(10),TRANSREF,LTRIM(RTRIM(DESCRIPTION))+'('+LTRIM(RTRIM(@MASTERDESCRIPTION))+')',
	   DEBIT,CREDIT ,CREDNO ,CURRENCY ,HomeCurrAmount
	   FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
	   SET @BANKLEDGRCODE =''
	   SET @BANKNAME =''
	   SET @RECEIVEDDATE =''
	END


	SET @MISSINGTRANSTYPE = 0 
	SELECT @MISSINGTRANSTYPE =ISNULL( COUNT(*),0)  FROM #CONSIDEREDTRANSTYPE WHERE TRANSTYPE = @TRANSTYPE 
	IF @MISSINGTRANSTYPE = 0 
	 BEGIN
	    INSERT INTO #TRANSACTIONS
	    SELECT  TRANGRP,TRANSTYPE,ORGID,PDATE,RECEIVEDDATE,TRANSREF,SPACE(10),DESCRIPTION,DEBIT,CREDIT ,CREDNO  ,CURRENCY ,HomeCurrAmount
	    FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@LEDGERCODE 
     END 

   FETCH NEXT FROM TRANGRPS INTO @TRANGRP 

 END
 CLOSE TRANGRPS
 DEALLOCATE TRANGRPS


 UPDATE #TRANSACTIONS 
  SET CREDIT=HOMECURRAMOUNT WHERE CREDIT>0 AND CURRENCY <>'INR' 

UPDATE #TRANSACTIONS 
  SET DEBIT=HOMECURRAMOUNT WHERE DEBIT>0 AND CURRENCY<>'INR' 



 ALTER TABLE #TRANSACTIONS ADD CREDNAME VARCHAR(100)

 UPDATE  #TRANSACTIONS SET CREDNAME ='' 

 UPDATE #TRANSACTIONS SET CREDNAME = C.CREDNAME FROM CREDITORS C INNER JOIN #TRANSACTIONS ON  #TRANSACTIONS.CREDNO=C.CREDNUMBER 
 UPDATE #TRANSACTIONS SET CREDNAME = S.SUBNAME  FROM SUBCONTRACTORS S INNER JOIN #TRANSACTIONS ON    #TRANSACTIONS.CREDNO=S.SUBNUMBER
 UPDATE #TRANSACTIONS SET CREDNAME = D.DEBTNAME FROM DEBTORS D INNER JOIN #TRANSACTIONS ON  #TRANSACTIONS.CREDNO = D.DEBTNUMBER 

 UPDATE #TRANSACTIONS SET NARRATION  = LTRIM(RTRIM(NARRATION))+'  ' + LTRIM(RTRIM(CREDNAME)) WHERE CREDNAME <>''

 -- COPYING OPENING BALANCE
 -- GETTING THE COMBINED OPENING BALANCE 

 DECLARE @COMBINEDOB DECIMAL(18,2)
 DECLARE @OBDEBIT DECIMAL(18,2)
 DECLARE @OBCREDIT DECIMAL(18,2) 

 DECLARE @LINETOTAL DECIMAL(18,2)
 DECLARE @LINEINDEX  INT
 DECLARE @LINEDEBIT DECIMAL(18,2)
 DECLARE @LINECREDIT DECIMAL(18,2)  
 DECLARE @LINENUMBER INT

 SELECT @COMBINEDOB =ISNULL( SUM(OB) ,0 )  FROM #OB 

 IF @COMBINEDOB >= 0 
  BEGIN
    SET @OBDEBIT=@COMBINEDOB 
	SET @OBCREDIT = 0
  END
 ELSE
  BEGIN
   SET @OBDEBIT = 0
   SET @OBCREDIT = ABS(@COMBINEDOB) 
  END 


 IF @OBREQUIRED = 1
  BEGIN
   INSERT INTO #TRANSACTIONS(ORGID,TRANSTYPE,TRANSACTIONDATE,NARRATION,DEBIT,CREDIT,CREDNO,CREDNAME)
                   SELECT      0,'OB','01-JAN-2000' ,'OPENING BALANCE',@OBDEBIT,@OBCREDIT ,'',''

  END 
 
  
 --SELECT SUM(DEBIT),SUM(CREDIT),SUM(DEBIT-CREDIT) FROM #TRANSACTIONS

 INSERT INTO #TRANSFINAL 
 SELECT 
  TRANSINDEX  ,TRANGRP  ,TRANSTYPE  , ORGID  ,TRANSACTIONDATE ,INVOICEDATE  ,INVOICENUMBER  ,CHEQUENUMBER  , NARRATION  , DEBIT  ,CREDIT  
  FROM #TRANSACTIONS ORDER BY TRANSACTIONDATE 

 ALTER TABLE #TRANSFINAL ADD LINENUMBER INT 
 ALTER TABLE #TRANSFINAL ADD CLOSINGBALANCE DECIMAL(18,2)
 ALTER TABLE #TRANSFINAL ADD BALANCESYMBOL CHAR(2) 
 
 DECLARE TRANSFINAL CURSOR FOR
 SELECT TRANSINDEX,DEBIT,CREDIT FROM #TRANSFINAL ORDER BY TRANSACTIONDATE 

 OPEN TRANSFINAL
 FETCH NEXT FROM TRANSFINAL INTO @LINEINDEX ,@LINEDEBIT,@LINECREDIT 

 SET @LINETOTAL = 0
 SET @LINENUMBER = 0 

 WHILE @@FETCH_STATUS = 0
 BEGIN
    SET @LINETOTAL  = @LINETOTAL + @LINEDEBIT - @LINECREDIT 
	SET @LINENUMBER = @LINENUMBER + 1
	IF @LINETOTAL >= 0 
	     UPDATE #TRANSFINAL SET CLOSINGBALANCE = @LINETOTAL , BALANCESYMBOL = 'Dr' , LINENUMBER = @LINENUMBER WHERE TRANSINDEX = @LINEINDEX 
	ELSE
	     UPDATE #TRANSFINAL SET CLOSINGBALANCE = ABS(@LINETOTAL) , BALANCESYMBOL = 'Cr' ,LINENUMBER = @LINENUMBER   WHERE TRANSINDEX = @LINEINDEX 
    
    FETCH NEXT FROM TRANSFINAL INTO @LINEINDEX ,@LINEDEBIT,@LINECREDIT

 END
 CLOSE TRANSFINAL
 DEALLOCATE TRANSFINAL 

 UPDATE #TRANSFINAL SET ORGID='', TRANSACTIONDATE='' WHERE LINENUMBER = 1 AND @OBREQUIRED = 1



 ALTER TABLE #TRANSFINAL ADD BORGNAME VARCHAR(200)
 UPDATE #TRANSFINAL SET BORGNAME =SUBSTRING(B.BORGNAME,8,58) FROM BORGS B INNER JOIN #TRANSFINAL ON #TRANSFINAL.ORGID = B.BORGID 

 ALTER TABLE #TRANSFINAL ADD PARTYNAME VARCHAR(200)
 UPDATE #TRANSFINAL SET PARTYNAME = @PARTYNAME 

 ALTER TABLE #TRANSFINAL ADD REPORTPERIOD VARCHAR(50)
 UPDATE #TRANSFINAL SET REPORTPERIOD=@REPORTPERIOD 

 
 
 UPDATE #TRANSFINAL SET INVOICENUMBER = CHEQUENUMBER WHERE CHEQUENUMBER<>''
 Update #TRANSFINAL SET NARRATION = REPLACE(NARRATION, 'Order Number','PO: ' ) 
 UPDATE #TRANSFINAL SET BORGNAME = LTRIM(RTRIM(UPPER(BORGNAME))), NARRATION=UPPER(NARRATION) 

 SELECT LINENUMBER,BORGNAME,TRANSACTIONDATE,NARRATION,TRANSTYPE,INVOICENUMBER,DEBIT,CREDIT,CLOSINGBALANCE,BALANCESYMBOL,PARTYNAME,REPORTPERIOD  FROM #TRANSFINAL ORDER BY  LINENUMBER 

 