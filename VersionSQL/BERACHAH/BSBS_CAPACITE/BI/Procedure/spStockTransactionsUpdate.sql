/****** Object:  Procedure [BI].[spStockTransactionsUpdate]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BI].[spStockTransactionsUpdate]
AS
-- TRANSTYPE - D    MEANS DELIVERY ;  TRANSTYPE - I  MEANS ISSUE
DECLARE @LASTDLVRID INT
SELECT @LASTDLVRID =ISNULL( MAX(REFERNCEID),0) FROM BI.STOCKTRANSACTIONS WHERE TRANSTYPE = 'D'

DECLARE @LASTISSUEID INT
SELECT @LASTISSUEID = ISNULL(MAX(REFERNCEID),0) FROM BI.STOCKTRANSACTIONS WHERE TRANSTYPE ='I' 

DECLARE @LASTXFR INT
SELECT @LASTXFR = ISNULL(MAX(REFERNCEID),0) FROM BI.STOCKTRANSACTIONS WHERE TRANSTYPE='X'

 

DECLARE @DLVRID INT
DECLARE @BORGID INT
DECLARE @DLVRDATE DATETIME
DECLARE @ORDID INT
DECLARE @ORDITEMLINENO INT
DECLARE @DLVRQTY DECIMAL(18,2)
DECLARE @DLVRRATE DECIMAL(18,2)
DECLARE @DLVRNO VARCHAR(25)

DECLARE @STKID INT
DECLARE @STORECODE VARCHAR(15)
DECLARE @STOCKCODE VARCHAR(15)

DECLARE @ISSUEDATE DATETIME
DECLARE @STARTSTORE VARCHAR(10)
DECLARE @ENDSTORE   VARCHAR(10)



SELECT @STARTSTORE=CONTROLFROMGL,@ENDSTORE = CONTROLTOGL FROM CONTROLCODES WHERE CONTROLNAME='Stock'

DECLARE REMAINGDELIVERY CURSOR FOR SELECT DLVRID FROM DELIVERIES WHERE DLVRID>@LASTDLVRID  
OPEN REMAINGDELIVERY

FETCH NEXT FROM REMAINGDELIVERY INTO @DLVRID 

WHILE @@FETCH_STATUS=0
BEGIN

 SELECT 
  @BORGID=TBORGID,
  @DLVRDATE = DLVRDATE,
  @ORDID =ORDID,
  @ORDITEMLINENO = ORDITEMLINENO,
  @DLVRQTY = DLVRQTY,
  @DLVRNO = DLVRNO,
  @DLVRRATE = PRICE 
 FROM 
  DELIVERIES 
 WHERE 
  DLVRID = @DLVRID

 SELECT @STKID = ISNULL(STOCKID,0) FROM ORDITEMS WHERE ORDID=@ORDID AND LINENUMBER=@ORDITEMLINENO 

 IF @STKID <>0 
 BEGIN

	SELECT 
	  @STORECODE = STKSTORE ,
	  @STOCKCODE = STKCODE
	FROM 
	  INVENTORY 
	WHERE 
	  STKID = @STKID 
    
	-- TRANSTYPE =1  MEANS DELIVERY
    INSERT INTO BI.STOCKTRANSACTIONS(TRANSTYPE,REFERNCEID,BORGID,STORECODE,STOCKCODE ,DLVRDATE,DLVRNO,DLVRQTY,DLVRRATE)
	                         VALUES ('D',@DLVRID,@BORGID,@STORECODE,@STOCKCODE,@DLVRDATE,@DLVRNO,@DLVRQTY,@DLVRRATE)
 
    SET @BORGID=0
	SET @STORECODE = ''
	SET @STOCKCODE = ''
	SET @DLVRQTY = 0.0
	SET @DLVRRATE = 0.0
	SET @DLVRNO =''

 END

 FETCH NEXT FROM REMAINGDELIVERY INTO @DLVRID 



END
CLOSE REMAINGDELIVERY
DEALLOCATE REMAINGDELIVERY

 

-- ISSUES
 INSERT INTO BI.STOCKTRANSACTIONS(TRANSTYPE ,REFERNCEID ,BORGID ,STORECODE,STOCKCODE,ISSUEDATE,ISSUEREF,ISSUETYPE,ISSUEQTY,ISSUERATE )
 SELECT 
   'I',TRANSID,ORGID,STORE,STOCKNO,PDATE,TRANSREF,TRANSTYPE,QUANTITY,RATE
 FROM 
   TRANSACTIONS 
 WHERE 
   TRANSID > @LASTISSUEID AND
   LEDGERCODE BETWEEN @STARTSTORE AND @ENDSTORE AND 
   TRANSTYPE IN (SELECT TYPENAME FROM STOCKTYPES) 




-- STOCK TRANSFER
 
INSERT INTO BI.STOCKTRANSACTIONS(TRANSTYPE,REFERNCEID,BORGID,STORECODE,STOCKCODE,TRANSFERDATE,TRANSFERREF,TRANSFEROUT,TRANSFERRATE,TRANSFERVALUE)
SELECT 'X',TRANSID,ORGID,STORE,STOCKNO,PDATE,TRANSREF,QUANTITY,RATE,(QUANTITY*RATE) 
FROM TRANSACTIONS 
WHERE TRANSID >@LASTXFR AND TRANSTYPE = 'XFR' AND 
LEDGERCODE BETWEEN @STARTSTORE AND @ENDSTORE AND
QUANTITY <0 

 
INSERT INTO BI.STOCKTRANSACTIONS(TRANSTYPE,REFERNCEID,BORGID,STORECODE,STOCKCODE,TRANSFERDATE,TRANSFERREF,TRANSFERIN,TRANSFERRATE,TRANSFERVALUE)
SELECT 'X',TRANSID,ORGID,STORE,STOCKNO,PDATE,TRANSREF,QUANTITY,RATE,(QUANTITY*RATE) 
FROM TRANSACTIONS 
WHERE TRANSID >@LASTXFR AND TRANSTYPE = 'XFR' AND 
LEDGERCODE BETWEEN @STARTSTORE AND @ENDSTORE AND
QUANTITY >0 






UPDATE BI.STOCKTRANSACTIONS
 SET ISSUEDATE=NULL,
     ISSUEREF=SPACE(10),
	 ISSUETYPE=SPACE(10),
	 ISSUEQTY=0,
	 ISSUERATE=0,
	 TRANSFEROUT=0,
	 TRANSFERIN = 0,
	 TRANSFERVALUE=0
WHERE 
     TRANSTYPE='D' AND
	 TRANSID > @LASTDLVRID

UPDATE BI.STOCKTRANSACTIONS
 SET DLVRDATE = NULL  ,
     DLVRNO =0,
	 DLVRQTY=0,
	 DLVRRATE=0,
	 TRANSFEROUT=0,
	 TRANSFERIN = 0,
	 TRANSFERVALUE=0
WHERE
     TRANSTYPE='I' AND
	 TRANSID > @LASTISSUEID


UPDATE BI.STOCKTRANSACTIONS
 SET DLVRDATE = NULL  ,
     DLVRNO =0,
	 DLVRQTY=0,
	 DLVRRATE=0,
	 ISSUEDATE=NULL,
	 ISSUEQTY=0,
	 ISSUERATE=0
WHERE
     TRANSTYPE='X' AND
	 TRANSID > @LASTXFR
 
UPDATE BI.STOCKTRANSACTIONS 
SET TRANSFERIN=0  WHERE TRANSFERIN IS NULL

UPDATE BI.STOCKTRANSACTIONS 
SET TRANSFEROUT=0  WHERE TRANSFEROUT IS NULL   