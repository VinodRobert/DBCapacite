/****** Object:  Procedure [BI].[RECEIPTS_AND_ISSUES_GLOBAL]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BI].[RECEIPTS_AND_ISSUES_GLOBAL](@STARTPERIOD INT, @ENDPERIOD INT ,@FINYEAR INT ,@LISTORGIDS  LISTORGIDS READONLY) 
AS

DECLARE @STORELEDGERCODE VARCHAR(10)
DECLARE @STOREBORG INT
DECLARE @STORECODE VARCHAR(15)
DECLARE @BORGID INT 


CREATE TABLE #BORGS(ORGID INT)
INSERT INTO #BORGS 
SELECT ORGID  FROM @LISTORGIDS
DELETE FROM #BORGS WHERE ORGID IS NULL


ALTER TABLE #BORGS ADD STORECODE VARCHAR(15)
ALTER TABLE #BORGS ADD STKCTL    VARCHAR(10)

SELECT DISTINCT BORGID,STKSTORE INTO #STOREMASTER FROM INVENTORY WHERE LEFT(STKSTORE,4)='MS-9'
UPDATE #BORGS SET STORECODE=SM.STKSTORE FROM #STOREMASTER SM INNER JOIN #BORGS ON #BORGS.ORGID = SM.BORGID 

UPDATE #BORGS SET STKCTL = INV.STKCTL FROM INVSTORES INV INNER JOIN #BORGS ON #BORGS.STORECODE  = INV.STORECODE 

DELETE FROM #BORGS WHERE STORECODE IS NULL
 



CREATE TABLE #MOVEMENT(ID INT PRIMARY KEY IDENTITY(1,1) ,BORGID INT, STKCTL VARCHAR(10),STORECODE VARCHAR(15), TRANSID INT,  MATERIALCODE VARCHAR(15), MATERIALNAME VARCHAR(250),RECEIPT DECIMAL(18,4),RECEIPTVALUE MONEY, ISSUES DECIMAL(18,4),ISSUEVALUE MONEY,TRANSTYPE VARCHAR(10)) 



DECLARE STKBORG CURSOR FOR SELECT * FROM #BORGS 
OPEN STKBORG
FETCH NEXT FROM STKBORG INTO @BORGID,@STORECODE,@STORELEDGERCODE 

WHILE @@FETCH_STATUS =0 
BEGIN
        


		SET @STOREBORG=  @BORGID  


		INSERT INTO #MOVEMENT(BORGID,STKCTL,STORECODE,TRANSID,MATERIALCODE,RECEIPT,RECEIPTVALUE,TRANSTYPE) 
		SELECT @STOREBORG,@STORELEDGERCODE,@STORECODE,TRANSID,STOCKNO,QUANTITY,(DEBIT-CREDIT),TRANSTYPE FROM TRANSACTIONS 
		WHERE STORE=@STORECODE AND YEAR=@FINYEAR AND PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD  AND 
		TRANSTYPE IN ('DEL' ,'STW') AND LEDGERCODE = @STORELEDGERCODE

		INSERT INTO #MOVEMENT(BORGID,STKCTL,STORECODE,TRANSID,MATERIALCODE,RECEIPT,RECEIPTVALUE,TRANSTYPE) 
		SELECT @STOREBORG,@STORELEDGERCODE,@STORECODE,TRANSID,STOCKNO,QUANTITY,(DEBIT-CREDIT),TRANSTYPE FROM TRANSACTIONS 
		WHERE STORE=@STORECODE AND YEAR=@FINYEAR AND PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD  AND 
		TRANSTYPE = 'XFR' AND QUANTITY>0 AND LEDGERCODE = @STORELEDGERCODE


		INSERT INTO #MOVEMENT(BORGID,STKCTL,STORECODE,TRANSID,MATERIALCODE,ISSUES,ISSUEVALUE,TRANSTYPE) 
		SELECT @STOREBORG,@STORELEDGERCODE,@STORECODE,TRANSID,STOCKNO,QUANTITY,(DEBIT-CREDIT),TRANSTYPE FROM TRANSACTIONS 
		WHERE STORE=@STORECODE AND YEAR=@FINYEAR AND PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD AND 
		TRANSTYPE IN ('SIC' ,'SIB','SIS','SRB', 'SSR','STB') AND LEDGERCODE = @STORELEDGERCODE
		UPDATE #MOVEMENT SET ISSUES = -1*ISSUES WHERE TRANSTYPE= 'STB'

		INSERT INTO #MOVEMENT(BORGID,STKCTL,STORECODE,TRANSID,MATERIALCODE,ISSUES,ISSUEVALUE,TRANSTYPE) 
		SELECT @STOREBORG,@STORELEDGERCODE,@STORECODE,TRANSID,STOCKNO,QUANTITY,(DEBIT-CREDIT),TRANSTYPE FROM TRANSACTIONS 
		WHERE STORE=@STORECODE AND YEAR=@FINYEAR AND PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD AND 
		TRANSTYPE = 'XFR'  AND Quantity < 0 AND LEDGERCODE = @STORELEDGERCODE

		SELECT (D.DLVRQTY-D.RECONQTY) BALANCEQTY,D.ORDID,D.ORDITEMLINENO,D.TBORGID,OI.BUYERPARTNUMBER,D.PRICE
		INTO #TEMP0 
		FROM DELIVERIES D INNER JOIN ORDITEMS OI ON D.ORDID=OI.ORDID AND D.ORDITEMLINENO= OI.LINENUMBER 
		INNER JOIN ORD O ON O.ORDID = D.ORDID 
		WHERE  ABS(D.DLVRQTY - D.RECONQTY) > 0 AND D.ALLOCATED = 0 AND O.RECTYPE='STD' AND D.TBORGID = @STOREBORG AND
		LYEAR=@FINYEAR AND PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD
 
        DELETE FROM #TEMP0 WHERE BUYERPARTNUMBER  = '' 

	    INSERT INTO #MOVEMENT(BORGID,STKCTL,STORECODE,TRANSID,MATERIALCODE,RECEIPT,RECEIPTVALUE) 
        SELECT  @STOREBORG,@STORELEDGERCODE,@STORECODE,99999999,BUYERPARTNUMBER,BALANCEQTY,BALANCEQTY*PRICE FROM #TEMP0 

		DROP TABLE #TEMP0 

	
        FETCH NEXT FROM STKBORG INTO @BORGID,@STORECODE,@STORELEDGERCODE  

END
CLOSE STKBORG
DEALLOCATE STKBORG 



 

UPDATE #MOVEMENT SET MATERIALNAME = INV.STKDESC FROM INVENTORY INV INNER JOIN #MOVEMENT ON #MOVEMENT.MATERIALCODE = INV.STKCODE WHERE INV.STKSTORE='VMAINSTORE'

UPDATE #MOVEMENT SET RECEIPT=0 ,RECEIPTVALUE = 0 WHERE RECEIPT IS NULL
UPDATE #MOVEMENT SET ISSUES =0, ISSUEVALUE  = 0 WHERE ISSUES IS NULL


 

SELECT BORGID,STORECODE,MATERIALCODE,MATERIALNAME,SUM(RECEIPT) RECEIPT, SUM(RECEIPTVALUE) RECEIPTVALUE, SUM(ISSUES) ISSUES, SUM(ISSUEVALUE) ISSUEVALUE 
INTO #FINAL
FROM #MOVEMENT 
GROUP BY BORGID,STORECODE,MATERIALCODE,MATERIALNAME

ALTER TABLE #FINAL ADD UOM VARCHAR(10)
UPDATE #FINAL SET UOM=STKUNIT  FROM INVENTORY INNER JOIN #FINAL ON #FINAL.MATERIALCODE = INVENTORY.STKCODE WHERE INVENTORY.STKSTORE = @STORECODE 

ALTER TABLE #FINAL ADD STORENAME VARCHAR(100)

UPDATE #FINAL SET STORENAME = INV.STORENAME  FROM INVSTORES INV INNER JOIN #FINAL ON #FINAL.STORECODE = INV.STORECODE 


ALTER TABLE #FINAL ADD BORGNAME VARCHAR(250)
UPDATE #FINAL SET BORGNAME = B.BORGNAME FROM BORGS B INNER JOIN #FINAL ON #FINAL.BORGID = B.BORGID 

ALTER TABLE #FINAL ADD STARTDATE VARCHAR(15)
ALTER TABLE #FINAL ADD ENDDATE VARCHAR(15)
ALTER TABLE #FINAL ADD FINYEAR VARCHAR(10)

UPDATE #FINAL SET STARTDATE = (SELECT PERIODDESC FROM PERIODMASTER WHERE PERIODID = @STARTPERIOD ) 
UPDATE #FINAL SET ENDDATE  = (SELECT PERIODDESC FROM PERIODMASTER WHERE PERIODID = @ENDPERIOD ) 

UPDATE #FINAL SET FINYEAR =STR(@FINYEAR ,4) 
UPDATE #FINAL SET MATERIALNAME=UPPER(MATERIALNAME),ISSUES = ABS(ISSUES) , ISSUEVALUE = ABS(ISSUEVALUE)


SELECT BORGID,BORGNAME,STORECODE,STORENAME,MATERIALCODE,MATERIALNAME,UOM,RECEIPT,RECEIPTVALUE,ISSUES,ISSUEVALUE,FINYEAR,STARTDATE,ENDDATE FROM #FINAL ORDER BY BORGID,MATERIALCODE
 