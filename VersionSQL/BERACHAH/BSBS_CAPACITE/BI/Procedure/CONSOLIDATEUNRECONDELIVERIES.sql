/****** Object:  Procedure [BI].[CONSOLIDATEUNRECONDELIVERIES]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE   PROCEDURE [BI].[CONSOLIDATEUNRECONDELIVERIES](@LISTORGIDS  LISTORGIDS READONLY )
AS

CREATE TABLE #TEMP0(ID INT PRIMARY KEY IDENTITY(1,1),ORGID INT,ORGNAME VARCHAR(255),ORDID INT,ORDNUMBER VARCHAR(125),SUPPID INT,SUPPCODE VARCHAR(25),
                    SUPPNAME VARCHAR(255),ORDDATE DATETIME,LINENUMBER INT, BUYERPARTNUMBER VARCHAR(55), ITEMDESCRIPTION VARCHAR(255), UOM VARCHAR(25), 
					GRNNO VARCHAR(55), GRNDATE DATETIME, DLVRNO VARCHAR(55),DLVRQTY DECIMAL(18,4), RECONQTY DECIMAL(18,4), PRICE DECIMAL(18,2),STATUSID  INT )

CREATE TABLE #BORGS(ORGID INT)
INSERT INTO #BORGS  
SELECT ORGID  FROM @LISTORGIDS
DELETE FROM #BORGS WHERE ORGID IS NULL
    
INSERT INTO #TEMP0 	 
SELECT 
   D.TBORGID ,
   B.BORGNAME,
   D.ORDID,
   O.ORDNUMBER,
   O.SUPPID,
   S.SUPPCODE,
   S.SUPPNAME,
   O.CREATEDATE ORDDATE,
   OI.LINENUMBER,
   OI.BUYERPARTNUMBER,
   OI.ITEMDESCRIPTION,
   OI.UOM,
   D.GRNNO,
   D.DLVRDATE GRNDATE,
   D.DLVRNO,
   D.DLVRQTY,
   D.RECONQTY,
   D.PRICE,
   0
FROM 
   DELIVERIES D INNER JOIN    ORD   O  ON D.ORDID = O.ORDID 
                INNER JOIN    BORGS B  ON D.TBORGID = B.BORGID 
				INNER JOIN ORDITEMS OI ON O.ORDID = OI.ORDID AND D.ORDITEMLINENO=OI.LINENUMBER
				INNER JOIN SUPPLIERS S ON O.SUPPID = S.SUPPID 
WHERE
   D.DLVRQTY <> D.RECONQTY AND LEFT(B.BORGNAME,1)='9'

-- CONSIDERING FOREIGN EXCHANGE RATES 
SELECT
   ORDID,
   CURRENCY,
   EXCHRATE,
   HOMECURRENCY
INTO #TEMPFOREIGNEXCHANGE
FROM 
   ORD 
WHERE 
   CURRENCY<>'INR'

-- FE RATE MODIFICATIONS 
UPDATE #TEMP0 
  SET PRICE = PRICE * FE.EXCHRATE 
  FROM #TEMPFOREIGNEXCHANGE FE
  INNER JOIN #TEMP0 ON #TEMP0.ORDID = FE.ORDID 


SELECT ORDID,LINENUMBER,SUM(DLVRQTY) NEGATIVEQTY 
INTO #NEGATIVES
FROM #TEMP0
WHERE DLVRQTY < 0 
GROUP BY ORDID,LINENUMBER


SELECT ORDID,LINENUMBER,SUM(DLVRQTY) POSITIVEQTY 
INTO #POSITIVES
FROM #TEMP0 
WHERE DLVRQTY > 0
GROUP BY ORDID,LINENUMBER 


SELECT N.ORDID,N.LINENUMBER,N.NEGATIVEQTY,P.POSITIVEQTY 
INTO #DROPPING 
FROM #NEGATIVES N 	 INNER JOIN #POSITIVES P   ON N.ORDID = P.ORDID AND N.LINENUMBER = P.LINENUMBER  



ALTER TABLE #DROPPING ADD STATUSID INT 
UPDATE #DROPPING SET STATUSID=0 

UPDATE #DROPPING SET STATUSID=1 WHERE ABS(NEGATIVEQTY) = ABS(POSITIVEQTY) 

UPDATE #DROPPING SET STATUSID=2 WHERE ABS  ( ABS(NEGATIVEQTY) - ABS(POSITIVEQTY) ) BETWEEN 0 AND 1  AND STATUSID <> 1 

UPDATE #TEMP0 SET STATUSID = D.STATUSID FROM #DROPPING D INNER JOIN #TEMP0  ON #TEMP0.ORDID = D.ORDID AND #TEMP0.LINENUMBER = D.LINENUMBER 

SELECT  ORGNAME,LEFT(ORDNUMBER,25) ORDERNUMBER,ORDDATE,LEFT(SUPPNAME,50) SUPPLIER,BUYERPARTNUMBER STOCKCODE,ITEMDESCRIPTION  ITEM ,UOM,GRNNO,GRNDATE,DLVRNO,DLVRQTY,RECONQTY,(DLVRQTY-RECONQTY) UNRECONQTY, PRICE, ((DLVRQTY-RECONQTY)*PRICE) AMOUNT 
FROM #TEMP0
WHERE STATUSID<>1 AND ORGID IN (SELECT ORGID FROM #BORGS) 
ORDER BY STATUSID ,ORDID,LINENUMBER 


 
   



 

	 