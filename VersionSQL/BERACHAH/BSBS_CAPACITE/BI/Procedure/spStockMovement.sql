/****** Object:  Procedure [BI].[spStockMovement]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE  PROCEDURE [BI].[spStockMovement](@LISTINVENTORY   LISTSTOCKITEMS READONLY, @BORGID INT  )
AS
 

--

CREATE TABLE #STOCKS(STOCKNO VARCHAR(25))
INSERT INTO #STOCKS 
SELECT STOCKNO   FROM @LISTINVENTORY
DELETE FROM #STOCKS WHERE STOCKNO IS NULL
ALTER TABLE #STOCKS ADD STKID INT 
ALTER TABLE #STOCKS ADD STOCKNAME VARCHAR(255)
ALTER TABLE #STOCKS ADD UOM VARCHAR(25)
ALTER TABLE #STOCKS ADD OPENINGQTY DECIMAL(18,2) 
ALTER TABLE #STOCKS ADD CURRENTRATE DECIMAL(18,2) 
ALTER TABLE #STOCKS ADD OPENINGVALUE DECIMAL(18,2) 
 
DECLARE @STOCKCODE VARCHAR(25) 
DECLARE @STORECODE VARCHAR(25)
DECLARE @STKID INT 
DECLARE @STKCTL VARCHAR(10) 
DECLARE @STORENAME VARCHAR(150)

DECLARE @ISSUEQTY DECIMAL(18,2) 
DECLARE @ISSUEVALUE  DECIMAL(18,2) 
DECLARE @ORDEREDQTY DECIMAL(18,2)
DECLARE @ORDEREDVALUE DECIMAL(18,2)
DECLARE @TRANSFEROUTQTY DECIMAL(18,2)
DECLARE @TRANSFERINQTY DECIMAL(18,2)
DECLARE @TRANSFEROUTVALUE DECIMAL(18,2)
DECLARE @TRANSFERINVALUE DECIMAL(18,2) 
DECLARE @PENDINGREQUESTQTY DECIMAL(18,2) 
DECLARE @TOTALDELIVERIES DECIMAL(18,2) 
DECLARE @TOTALPENDINGDELIVERY DECIMAL(18,2)
DECLARE @TOTALDELIVERYVALUE DECIMAL(18,2) 


CREATE TABLE #RESULT(STKID INT, STOCKCODE VARCHAR(25),STOCKNAME VARCHAR(255),STORECODE VARCHAR(25),STORENAME VARCHAR(250), UNIT VARCHAR(25),
CURRENTSTOCK DECIMAL(18,2),CURRENTRATE DECIMAL(18,2),CURRENTSTOCKVALUE DECIMAL(18,2),DELIVERYQTY DECIMAL(18,2), 
DELIVERYVALUE DECIMAL(18,2),ISSUEQTY DECIMAL(18,2),ISSUEVALUE DECIMAL(18,2),
TRANSFEFOUTQTY DECIMAL(18,2),TRANSFEROUTVALUE DECIMAL(18,2), TRANSFERINQTY DECIMAL(18,2),TRANSFERINVALUE DECIMAL(18,2),
PENDINGDELIVERY DECIMAL(18,2),PENDINGDELIVERYVALUE DECIMAL(18,2),  OPENPRQTY DECIMAL(18,2), OPENPRVALUE DECIMAL(18,2)  )


SELECT TOP 1 @STORECODE = STKSTORE FROM INVENTORY WHERE BORGID = @BORGID AND LEFT(STKSTORE,2)='MS'

SELECT @STKCTL = STKCTL,@STORENAME =UPPER(STORENAME)  FROM INVSTORES WHERE STORECODE = @STORECODE
 



-- This will FIll the StockID , Stock Description, Unit of Measure , Opening Qty and Opening Rate and Opening Value - Fetch from Inventory 
UPDATE #STOCKS
 SET STKID = INV.STKID ,
     STOCKNAME = UPPER(INV.STKDESC),
	 UOM = INV.STKUNIT,
	 OPENINGQTY = INV.STKQUANTITY,
	 CURRENTRATE = INV.STKCOSTRATE,
	 OPENINGVALUE = (INV.STKQUANTITY*INV.STKCOSTRATE) 
FROM INVENTORY INV 
INNER JOIN #STOCKS ON INV.STKCODE = #STOCKS.STOCKNO 
WHERE INV.BORGID=@BORGID AND STKSTORE=@STORECODE 


-- GET FROM TRANSACTIONS THE STOCK ISSUES - ISSUE / FORCED BALANCE / STOCK RETURN ETC 
SELECT STOCKNO,TRANSTYPE,SUM(QUANTITY) QTY,SUM(QUANTITY*RATE) AMOUNT 
INTO   #TRANSACTIONS 
FROM   TRANSACTIONS  
WHERE  STORE = @STORECODE AND LEDGERCODE = @STKCTL AND TRANSTYPE NOT IN ('XFR','SFB') AND 
       STOCKNO IN (SELECT STOCKNO  FROM #STOCKS ) 
GROUP BY STOCKNO,TRANSTYPE




--BULK STOCK TO CONTRACT THE SIGN IS PUT NEGATIVE AS IT IS AN ISSUE
UPDATE #TRANSACTIONS SET QTY = -1.0*QTY , AMOUNT = -1.0 * QTY WHERE TRANSTYPE = 'STB'



-- ISSUE DEAILS 
SELECT STOCKNO, SUM(QTY) ISSUEQTY ,SUM(AMOUNT) ISSUEVALUE 
INTO #ISSUEDETAILS
FROM #TRANSACTIONS WHERE TRANSTYPE<>'DEL'
GROUP BY STOCKNO 
ALTER TABLE #ISSUEDETAILS ADD STKID INT 
UPDATE #ISSUEDETAILS SET STKID = S.STKID FROM #STOCKS S INNER JOIN #ISSUEDETAILS ON #ISSUEDETAILS.STOCKNO = S.STOCKNO 


-- RECONCILED DELIVERIES 
SELECT STOCKNO, SUM(QTY) RECONCILEDDELIVERY  ,SUM(AMOUNT) RECONCILEDVALUE  
INTO #RECONCILEDDELIVERY 
FROM #TRANSACTIONS WHERE TRANSTYPE='DEL'
GROUP BY STOCKNO 
ALTER TABLE #RECONCILEDDELIVERY ADD STKID INT 
UPDATE #RECONCILEDDELIVERY SET STKID = S.STKID FROM #STOCKS S INNER JOIN #RECONCILEDDELIVERY ON #RECONCILEDDELIVERY.STOCKNO = S.STOCKNO 


-- TRANSFER IN/OUT 
SELECT STOCKNO,TRANSTYPE,SUM(QUANTITY) QTY,SUM(QUANTITY*RATE) AMOUNT 
INTO   #XFRIN  
FROM   TRANSACTIONS  
WHERE  STORE = @STORECODE AND LEDGERCODE = @STKCTL AND TRANSTYPE ='XFR' AND QUANTITY > 0  AND 
       STOCKNO IN (SELECT STOCKNO  FROM #STOCKS )
GROUP BY STOCKNO,TRANSTYPE
ALTER TABLE #XFRIN ADD STKID INT 
UPDATE #XFRIN SET STKID = S.STKID FROM #STOCKS S INNER JOIN #XFRIN ON #XFRIN.STOCKNO = S.STOCKNO 

SELECT STOCKNO,TRANSTYPE,SUM(QUANTITY) QTY,SUM(QUANTITY*RATE) AMOUNT 
INTO   #XFROUT 
FROM   TRANSACTIONS  
WHERE  STORE = @STORECODE AND LEDGERCODE = @STKCTL AND TRANSTYPE ='XFR' AND QUANTITY < 0 AND 
       STOCKNO IN (SELECT STOCKNO  FROM #STOCKS )
GROUP BY STOCKNO,TRANSTYPE
ALTER TABLE #XFROUT ADD STKID INT 
UPDATE #XFROUT SET STKID = S.STKID FROM #STOCKS S INNER JOIN #XFROUT ON #XFROUT.STOCKNO = S.STOCKNO 



 -- ORDER DETAILS 
SELECT O.ORDID,O.ORDSTATUSID,OI.STOCKID STKID ,OI.LINENUMBER,OI.QTY ORDEREDQTY ,(OI.QTY *OI.PRICE -OI.DISCOUNT + OI.VATAMOUNT) ORDERVALUE 
INTO #TOTALORDERS
FROM ORD O INNER JOIN ORDITEMS OI ON O.ORDID = OI.ORDID 
WHERE OI.STOCKID IN (SELECT STKID FROM #STOCKS) 



SELECT STKID,ORDID,SUM(ORDEREDQTY) ORDEREDQTY,SUM(ORDERVALUE) ORDERVALUE 
INTO #ORDERSUMMARY 
FROM #TOTALORDERS 
GROUP  BY STKID,ORDID 

SELECT STKID,ORDID,SUM(ORDEREDQTY) ORDEREDQTY,SUM(ORDERVALUE) ORDERVALUE 
INTO #OPENORDERSUMMARY 
FROM #TOTALORDERS WHERE ORDSTATUSID=274 
GROUP  BY STKID,ORDID 
 
------ 274 ORDER STATUS MEANS OPEN ORDERS


SELECT #TOTALORDERS.STKID,#TOTALORDERS.ORDID,DELIVERIES.ORDITEMLINENO,DELIVERIES.DLVRQTY,(DELIVERIES.DLVRQTY*DELIVERIES.PRICE) DELIVERYVALUE 
INTO #TOTALDELIVERY
FROM DELIVERIES 
INNER JOIN #TOTALORDERS ON #TOTALORDERS.ORDID = DELIVERIES.ORDID AND #TOTALORDERS.LINENUMBER=DELIVERIES.ORDITEMLINENO 

SELECT STKID,ORDID,SUM(DLVRQTY) DELIVERYQTY ,SUM(DELIVERYVALUE) DELIVERYVALUE
INTO #DELIVERYSUMMARY 
FROM #TOTALDELIVERY
GROUP BY STKID,ORDID 

-- COMBINE TOTAL ORDER AND TOTAL DELIVERY 

SELECT #ORDERSUMMARY.STKID,#ORDERSUMMARY.ORDEREDQTY,#ORDERSUMMARY.ORDERVALUE,#DELIVERYSUMMARY.DELIVERYQTY,#DELIVERYSUMMARY.DELIVERYVALUE 
INTO #TOTALDELIVERIES
FROM #ORDERSUMMARY LEFT OUTER JOIN #DELIVERYSUMMARY 
ON  #DELIVERYSUMMARY.ORDID = #ORDERSUMMARY.ORDID AND #DELIVERYSUMMARY.STKID  = #ORDERSUMMARY.STKID 
UPDATE #TOTALDELIVERIES SET DELIVERYQTY = 0 ,DELIVERYVALUE =0.0  WHERE DELIVERYQTY IS NULL 



SELECT #OPENORDERSUMMARY.STKID,#OPENORDERSUMMARY.ORDEREDQTY,#OPENORDERSUMMARY.ORDERVALUE,#DELIVERYSUMMARY.DELIVERYQTY,#DELIVERYSUMMARY.DELIVERYVALUE  
INTO #YETTODELIVER 
FROM #OPENORDERSUMMARY LEFT OUTER JOIN #DELIVERYSUMMARY 
ON  #DELIVERYSUMMARY.ORDID = #OPENORDERSUMMARY.ORDID AND #DELIVERYSUMMARY.STKID  = #OPENORDERSUMMARY.STKID 
UPDATE #YETTODELIVER SET DELIVERYQTY = 0 ,DELIVERYVALUE =0.0  WHERE DELIVERYQTY IS NULL 

ALTER TABLE #YETTODELIVER ADD    BALANCEORDER  DECIMAL(18,2)   
ALTER TABLE #YETTODELIVER ADD    BALANCEORDERVALUE DECIMAL(18,2) 

UPDATE #YETTODELIVER SET BALANCEORDER = ORDEREDQTY - DELIVERYQTY, BALANCEORDERVALUE = ORDERVALUE - DELIVERYVALUE 
DELETE  FROM #YETTODELIVER WHERE BALANCEORDER = 0 

SELECT STKID,SUM(BALANCEORDER) BALANCEORDER,SUM(BALANCEORDERVALUE) BALANCEORDERVALUE
INTO  #YETTODELIVERSUMMARY 
FROM #YETTODELIVER 
GROUP BY STKID 


SELECT STKID,SUM(ORDEREDQTY) TOTALORDERED,SUM(ORDERVALUE) TOTALORDERVALUE, SUM(DELIVERYQTY) TOTALDELIVERED, SUM(DELIVERYVALUE) TOTALDELIVERYVALUE 
INTO #FINALDELIVERYDETAILS
FROM #TOTALDELIVERIES
GROUP BY STKID 






 
------ OPEN PRS 
SELECT STOCKID STKID , ISNULL(SUM(QTY),0) OPENPRQTY, ISNULL (SUM(QTY*PRICE-DISCOUNT+VATAMOUNT),0) OPENPRVALUE
INTO #OPENPRS
FROM REQITEMS 
WHERE STOCKID  IN (SELECT STKID FROM #STOCKS) 
AND REQID IN (SELECT REQID FROM REQ WHERE REQSTATUSID IN ( 163, 32 ) ) 
GROUP BY STOCKID 
---- 163  OPEN AND  32 AWAITING APPROVAL 

 



INSERT INTO #RESULT(STKID,STOCKCODE,STOCKNAME,STORECODE,STORENAME,UNIT,CURRENTSTOCK,CURRENTRATE,CURRENTSTOCKVALUE)
SELECT STKID,STOCKNO,STOCKNAME,@STORECODE,@STORENAME,UOM,OPENINGQTY,CURRENTRATE,OPENINGVALUE FROM #STOCKS 

UPDATE #RESULT SET ISSUEQTY=0,ISSUEVALUE=0,DELIVERYQTY=0,DELIVERYVALUE=0,TRANSFEFOUTQTY=0,TRANSFEROUTVALUE=0,TRANSFERINQTY=0,TRANSFERINVALUE=0,
PENDINGDELIVERY=0,PENDINGDELIVERYVALUE=0,OPENPRQTY=0,OPENPRVALUE=0

UPDATE  #RESULT  
SET DELIVERYQTY=FD.TOTALDELIVERED, DELIVERYVALUE=FD.TOTALDELIVERYVALUE 
FROM #FINALDELIVERYDETAILS FD INNER JOIN #RESULT ON #RESULT.STKID = FD.STKID 

UPDATE #RESULT
SET ISSUEQTY = ID.ISSUEQTY , ISSUEVALUE = ID.ISSUEVALUE 
FROM #ISSUEDETAILS ID INNER  JOIN #RESULT ON #RESULT.STKID = ID.STKID 

UPDATE #RESULT
SET TRANSFEFOUTQTY = ID.QTY , TRANSFEROUTVALUE = ID.AMOUNT 
FROM #XFROUT ID INNER  JOIN #RESULT ON #RESULT.STKID = ID.STKID

UPDATE #RESULT
SET TRANSFERINQTY = ID.QTY , TRANSFERINVALUE = ID.AMOUNT 
FROM #XFRIN ID INNER  JOIN #RESULT ON #RESULT.STKID = ID.STKID




UPDATE #RESULT
SET PENDINGDELIVERY = YD.BALANCEORDER , PENDINGDELIVERYVALUE = YD.BALANCEORDERVALUE  
FROM #YETTODELIVERSUMMARY YD INNER  JOIN #RESULT ON #RESULT.STKID = YD.STKID




UPDATE #RESULT
SET OPENPRQTY = YD.OPENPRQTY , OPENPRVALUE = YD.OPENPRVALUE 
FROM #OPENPRS YD INNER  JOIN #RESULT ON #RESULT.STKID = YD.STKID

DELETE FROM #RESULT WHERE STOCKNAME ='' 

UPDATE #RESULT SET CURRENTSTOCK = 0,CURRENTSTOCKVALUE=0,CURRENTRATE=0  WHERE CURRENTSTOCK IS NULL
 
DELETE FROM #RESULT 
WHERE 
 (CURRENTSTOCK=0 AND DELIVERYQTY=0 AND ISSUEQTY=0 AND TRANSFEFOUTQTY=0 AND TRANSFERINQTY=0 AND PENDINGDELIVERY=0 AND OPENPRQTY=0)

SELECT 
STORENAME,STOCKCODE,STOCKNAME,UNIT,CURRENTSTOCK,CURRENTRATE,CURRENTSTOCKVALUE,
DELIVERYQTY,DELIVERYVALUE,
ISSUEQTY ,ISSUEVALUE,
TRANSFERINQTY ,TRANSFERINVALUE ,
TRANSFEFOUTQTY ,TRANSFEROUTVALUE , 
PENDINGDELIVERY ,PENDINGDELIVERYVALUE , 
OPENPRQTY , OPENPRVALUE 
FROM #RESULT ORDER BY STOCKNAME 
 
 