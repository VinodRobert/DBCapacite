/****** Object:  Procedure [BI].[spExtractLedgerDumpsForTest]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BI].[spExtractLedgerDumpsForTest]  
						         
AS

DECLARE @YEAR INT 
SET @YEAR=2017
DECLARE @RANGEID INT
SET @RANGEID = 1
DECLARE @STARTDATESTRING VARCHAR(15)
DECLARE @ENDDATESTRING VARCHAR(15)

DECLARE @FROMPERIOD INT
SET @FROMPERIOD = 10

--DECLARE @FILENAME VARCHAR(100)
--DECLARE @EXCELFILE VARCHAR(100)
--DECLARE @FILEID   VARCHAR(10)
--DECLARE @SQL      VARCHAR(250)
--SET @FILENAME = 'BSBS_TEMP.DBO.DUMP'
--SET @EXCELFILE = 'C:\MIS\ExcelFiles\'


DECLARE @TRANSSTARTDATE    DATETIME
DECLARE @TRANSENDDATE      DATETIME
SELECT  @TRANSSTARTDATE = CONVERT(DATETIME, @STARTDATESTRING,103) -- dd/mm/yyyy 
SELECT  @TRANSENDDATE   = CONVERT(DATETIME, @ENDDATESTRING,103) -- dd/mm/yyyy 

CREATE TABLE #LEDGERIDS(LEDGERID INT)

--SELECT LEDGERID FROM @LISTLEDGERIDS
--DELETE FROM #LEDGERIDS WHERE LEDGERID IS NULL 

ALTER TABLE #LEDGERIDS ADD LEDGERCODE VARCHAR(10)
INSERT INTO #LEDGERIDS   
SELECT * from bil

--UPDATE #LEDGERIDS SET LEDGERCODE = L.LEDGERCODE FROM LEDGERCODES L INNER JOIN #LEDGERIDS LI ON LI.LEDGERID= L.LEDGERID 

CREATE TABLE #BORGS(BORGID INT)
INSERT INTO #BORGS  
SELECT * from bib
--SELECT ORGID  FROM @LISTORGIDS
--DELETE FROM #BORGS WHERE BORGID IS NULL



DECLARE @WIP VARCHAR(10)
DECLARE @RETAINED VARCHAR(10)

SELECT @WIP = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Work In Progress'
SELECT @RETAINED = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Retained Income'

CREATE TABLE #TEMP0(YEAR INT,PERIOD INT,ORGID INT,PDATE DATETIME,BATCHREF VARCHAR(20),TRANSREF VARCHAR(20),TRANSTYPE VARCHAR(25),LEDGERCODE VARCHAR(25),
                    CONTRACT VARCHAR(20),ACTIVITY VARCHAR(20),DESCRIPTION VARCHAR(400),CURRENCY VARCHAR(25),DEBIT DECIMAL(18,2),CREDIT DECIMAL(18,2),
					CREDNO VARCHAR(15),STORE VARCHAR(25),PLANTNO VARCHAR(25),STOCKNO VARCHAR(25),QUANTITY DECIMAL(18,2),UNIT VARCHAR(20),RATE DECIMAL(18,2),
					ORDERNO VARCHAR(125),HOMECURRAMOUNT DECIMAL(18,2),CONVERSIONRATE DECIMAL(18,2),TRANGRP INT,TRANSID INT, GRN VARCHAR(55) ) 
 

IF @RANGEID = 1
BEGIN
  INSERT INTO #TEMP0 
  SELECT 
         T.YEAR,
		 T.PERIOD,
		 T.ORGID,
		 T.PDATE,
		 T.BATCHREF,
		 T.TRANSREF,
		 T.TRANSTYPE,
		 T.LEDGERCODE,
		 T.CONTRACT,
	     T.ACTIVITY,
		 T.DESCRIPTION,
		 T.CURRENCY,
		 T.DEBIT,
		 T.CREDIT,
		 T.CREDNO,
		 T.STORE,
		 T.PLANTNO,
		 T.STOCKNO,
		 T.QUANTITY,
		 T.UNIT,
		 T.RATE,
		 T.ORDERNO,
		 T.HOMECURRAMOUNT,
		 T.CONVERSIONRATE,
		 T.TRANGRP,
		 T.TRANSID ,
		 T.REQNO AS GRN
	   FROM 
		 TRANSACTIONS T
		WHERE
		 T.YEAR = @YEAR  AND
		 T.PERIOD = @FROMPERIOD  
		
		DELETE FROM #TEMP0 WHERE LEDGERCODE=@WIP
		DELETE FROM #TEMP0 WHERE LEDGERCODE=@RETAINED
		DELETE FROM #TEMP0 WHERE ORGID NOT IN ( SELECT BORGID FROM #BORGS )
		  

 
 END
ELSE
 BEGIN
	 INSERT INTO #TEMP0 
	 SELECT 
         T.YEAR,
		 T.PERIOD,
		 T.ORGID,
		 T.PDATE,
		 T.BATCHREF,
		 T.TRANSREF,
		 T.TRANSTYPE,
		 T.LEDGERCODE,
		 T.CONTRACT,
	     T.ACTIVITY,
		 T.DESCRIPTION,
		 T.CURRENCY,
		 T.DEBIT,
		 T.CREDIT,
		 T.CREDNO,
		 T.STORE,
		 T.PLANTNO,
		 T.STOCKNO,
		 T.QUANTITY,
		 T.UNIT,
		 T.RATE,
		 T.ORDERNO,
		 T.HOMECURRAMOUNT,
		 T.CONVERSIONRATE,
		 T.TRANGRP,
		 T.TRANSID ,
		 T.REQNO AS GRN
	   FROM 
		 TRANSACTIONS T
		WHERE
		  T.YEAR = @YEAR  AND
		  T.PDATE BETWEEN @TRANSSTARTDATE AND @TRANSENDDATE AND
		  T.LEDGERCODE  NOT IN (@RETAINED,@WIP) AND
		  T.LEDGERCODE IN (SELECT LEDGERCODE FROM #LEDGERIDS) AND
		  T.ORGID IN (SELECT BORGID FROM #BORGS)
		 
		 
	    
 END






ALTER TABLE #TEMP0 ADD PERIODDESC VARCHAR(55)
UPDATE #TEMP0 SET PERIODDESC = PERIODMASTER.PERIODDESC FROM PERIODMASTER INNER JOIN #TEMP0 ON #TEMP0.PERIOD =PERIODMASTER.PERIODID 
ALTER TABLE #TEMP0 ADD BORGNAME VARCHAR(100)
UPDATE #TEMP0 SET BORGNAME =BORGS.BORGNAME FROM BORGS INNER JOIN #TEMP0 ON #TEMP0.ORGID=BORGS.BORGID 

ALTER TABLE #TEMP0 ADD LEDGERNAME VARCHAR(250)
UPDATE #TEMP0 SET LEDGERNAME =LEFT(LEDGERCODES.LEDGERNAME,250) FROM LEDGERCODES INNER JOIN #TEMP0 ON #TEMP0.LEDGERCODE=LEDGERCODES.LEDGERCODE 

ALTER TABLE #TEMP0 ADD CONTRACTNAME VARCHAR(100)
UPDATE #TEMP0 SET CONTRACTNAME = LEFT(CONTRACTS.CONTRNAME,100) FROM CONTRACTS INNER JOIN #TEMP0 ON #TEMP0.CONTRACT = CONTRACTS.CONTRNUMBER

ALTER TABLE #TEMP0 ADD ACTIVITIYNAME VARCHAR(100)
UPDATE #TEMP0 SET ACTIVITIYNAME = LEFT(ACTIVITIES.ACTNAME,100) FROM ACTIVITIES INNER JOIN #TEMP0 ON #TEMP0.Activity = ACTIVITIES.ACTNUMBER 

ALTER TABLE #TEMP0 ADD PARTY  VARCHAR(255)
UPDATE #TEMP0 SET PARTY=LEFT([BS].[fnGetParty](CREDNO) ,255)  

ALTER TABLE #TEMP0 ADD PLANTNAME VARCHAR(200)
UPDATE #TEMP0 SET PLANTNAME=LEFT(PLANTANDEQ.PENAME,200) FROM PLANTANDEQ INNER JOIN #TEMP0 ON #TEMP0.PLANTNO=PLANTANDEQ.PENUMBER

ALTER TABLE #TEMP0 ADD STOCKNAME VARCHAR(200)
UPDATE #TEMP0 SET STOCKNAME = LEFT(INVENTORY.STKDESC,200) FROM INVENTORY INNER JOIN #TEMP0 ON #TEMP0.STOCKNO=INVENTORY.STKCODE  WHERE INVENTORY.STKSTORE='VMAINSTORE'  

ALTER TABLE #TEMP0 ADD ALLOCATION VARCHAR(20)
UPDATE #TEMP0 SET ALLOCATION = LEFT(LEDGERALLOC,20) FROM LEDGERCODES INNER JOIN #TEMP0 ON #TEMP0.LEDGERCODE = LEDGERCODES.LEDGERCODE 


SELECT 
		 ORGID,
		 BORGNAME,
		 YEAR,
		 PERIOD,
		 PERIODDESC,
		 PDATE,
		 BATCHREF,
		 TRANSREF,
		 TRANSTYPE,
		 LEDGERCODE,
		 LEDGERNAME,
	     ALLOCATION,
		 CONTRACTNAME,
		 ACTIVITIYNAME,
		 DESCRIPTION,
		 CURRENCY,
		 DEBIT,
		 CREDIT,
		 CREDNO,
		 PARTY,
		 STORE,
		 PLANTNO,	
		 PLANTNAME,
		 STOCKNO,
		 STOCKNAME,
		 QUANTITY,
		 UNIT,
		 RATE,
		 ORDERNO,
		 HOMECURRAMOUNT,
		 CONVERSIONRATE,
		 TRANGRP ,
		 GRN
FROM #TEMP0 
ORDER BY
ORGID,LEDGERCODE

--DECLARE @Random INT;
--DECLARE @Upper INT;
--DECLARE @Lower INT
 
--SET @Lower = 1 ---- The lowest random number
--SET @Upper = 999 ---- The highest random number
--SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

--SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
--+ (DATEPART(ss, GETDATE()) * 1000 )
--+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

--SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))
--SET @EXCELFILE = @EXCELFILE+LTRIM(RTRIM(@FILENAME))+'.XLSX'
--SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #TEMP0  ORDER BY ORGID,TRANGRP  '
--EXEC(@SQL)

--EXEC BI.proc_generate_excel_with_columns "BSBS_TEMP",@FILENAME,@EXCELFILE
 