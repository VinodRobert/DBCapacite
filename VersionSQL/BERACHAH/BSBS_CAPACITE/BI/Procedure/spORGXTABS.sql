/****** Object:  Procedure [BI].[spORGXTABS]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BI].[spORGXTABS](@FINYEAR INT,@REPORTTYPE INT,@FROMPERIOD INT,@TOPERIOD INT,
                                  @LISTLEDGERIDS  LISTLEDGERIDS  READONLY  ,@LISTORGIDS  LISTORGIDS READONLY )
AS

DECLARE @NILBORGID INT
DECLARE @NILLEDGERCODE VARCHAR(10)


CREATE TABLE #LEDGERIDS(LEDGERID INT)
INSERT INTO #LEDGERIDS 
SELECT LEDGERID FROM @LISTLEDGERIDS
DELETE FROM #LEDGERIDS WHERE LEDGERID IS NULL 


CREATE TABLE #FULLLEDGERMASTER(LEDGERCODE VARCHAR(10)) 
DELETE FROM #FULLLEDGERMASTER

-- TRIAL BALANCE
IF @REPORTTYPE = 0 
 BEGIN
   DELETE FROM #LEDGERIDS WHERE LEDGERID  IN (SELECT LEDGERID FROM LEDGERCODES WHERE LEDGERALLOC<>'Balance Sheet') 
   INSERT INTO #FULLLEDGERMASTER
   SELECT LEDGERCODE   FROM LEDGERCODES WHERE LEDGERSUMMARY=0 AND LEDGERSTATUS=0 AND LEDGERALLOC='Balance Sheet'  
 END 
-- Profit and Loss 
IF @REPORTTYPE = 1 
 BEGIN 
   DELETE FROM #LEDGERIDS WHERE LEDGERID  IN (SELECT LEDGERID FROM LEDGERCODES WHERE LEDGERALLOC='Balance Sheet') 
   INSERT INTO #FULLLEDGERMASTER
   SELECT LEDGERCODE   FROM LEDGERCODES WHERE LEDGERSUMMARY=0 AND LEDGERSTATUS=0 AND LEDGERALLOC<>'Balance Sheet' 
 END 

ALTER TABLE #LEDGERIDS ADD LEDGERCODE VARCHAR(50)
UPDATE #LEDGERIDS SET LEDGERCODE = L.LEDGERCODE FROM LEDGERCODES L INNER JOIN #LEDGERIDS LI ON LI.LEDGERID= L.LEDGERID 



CREATE TABLE #BORGS(BORGID INT)
INSERT INTO #BORGS 
SELECT ORGID  FROM @LISTORGIDS
DELETE FROM #BORGS WHERE BORGID IS NULL


-- EXTRACT TOTAL TRANSACTION DUMP TO TABLE #DUMP 
SELECT 
  T.[YEAR] YEAR,
  T.PERIOD,
  T.ORGID,
  T.LEDGERCODE,
  T.CURRENCY,
  T.HOMECURRAMOUNT,
  T.DEBIT,
  T.CREDIT 
INTO 
  #DUMP 
FROM 
  TRANSACTIONS T 
WHERE 
   T.YEAR=@FINYEAR AND 
   T.PERIOD BETWEEN @FROMPERIOD AND @TOPERIOD  AND 
   T.LEDGERCODE IN (SELECT LEDGERCODE FROM #LEDGERIDS) AND
   T.ORGID IN (SELECT BORGID FROM #BORGS)


----  Incorporating Missing Organizatons  and Missing  Ledgers ------- 
-- Considering Missing Orgs having NIL Transactions - We are putting Zero as OB for this Orgs for all the ledgers 
SELECT BORGID 
INTO #NILTRANS
FROM #BORGS 
WHERE BORGID NOT IN (SELECT DISTINCT ORGID FROM #DUMP) 



DECLARE NILORGS CURSOR FOR 
SELECT BORGID FROM #NILTRANS
OPEN NILORGS 
FETCH NEXT FROM NILORGS INTO @NILBORGID 

WHILE @@FETCH_STATUS = 0 
BEGIN
  DECLARE LEDGERLIST CURSOR FOR SELECT DISTINCT LEDGERCODE FROM #DUMP 
  OPEN LEDGERLIST 
  FETCH NEXT FROM LEDGERLIST INTO @NILLEDGERCODE 
  WHILE @@FETCH_STATUS  = 0 
  BEGIN
    INSERT INTO #DUMP VALUES (@FINYEAR,0,@NILBORGID,@NILLEDGERCODE,'INR',0,0,0)

    FETCH NEXT FROM LEDGERLIST INTO @NILLEDGERCODE 
  END 
  CLOSE LEDGERLIST
  DEALLOCATE LEDGERLIST 


  FETCH NEXT FROM NILORGS INTO @NILBORGID 
END
CLOSE NILORGS
DEALLOCATE NILORGS 

-------   Now  Inserting all Ledgers Dont Have Any Transactions In This Year -------

DECLARE NILLEDGERLIST CURSOR FOR SELECT LEDGERCODE FROM #FULLLEDGERMASTER WHERE LEDGERCODE NOT IN (SELECT DISTINCT LEDGERCODE FROM #DUMP) 
OPEN NILLEDGERLIST 
FETCH NEXT FROM NILLEDGERLIST INTO @NILLEDGERCODE 
WHILE @@FETCH_STATUS=0
BEGIN
 DECLARE COMPLETEORG CURSOR FOR SELECT DISTINCT ORGID FROM #DUMP 
 OPEN COMPLETEORG 
 FETCH NEXT FROM COMPLETEORG INTO @NILBORGID 
 WHILE @@FETCH_STATUS = 0 
 BEGIN
      INSERT INTO #DUMP VALUES (@FINYEAR,0,@NILBORGID,@NILLEDGERCODE,'INR',0,0,0)
	  FETCH NEXT FROM COMPLETEORG INTO @NILBORGID 
 END
 CLOSE COMPLETEORG
 DEALLOCATE COMPLETEORG

 FETCH NEXT FROM NILLEDGERLIST INTO @NILLEDGERCODE
END
CLOSE NILLEDGERLIST
DEALLOCATE NILLEDGERLIST 

-------

-- TO UPDATE THE FOREIGN CURRENCY TRANSACTIONS 
ALTER TABLE #DUMP ADD NETAMOUNT DECIMAL(18,2) 
UPDATE #DUMP SET NETAMOUNT = (DEBIT-CREDIT) WHERE CURRENCY = 'INR'
UPDATE #DUMP SET NETAMOUNT = HomeCurrAmount WHERE CURRENCY <> 'INR' AND DEBIT>0
UPDATE #DUMP SET NETAMOUNT = -1.0*HOMECURRAMOUNT WHERE CURRENCY <>'INR' AND CREDIT>0 


-- FROM THE DUMP CREATE A TEMPORARY TABLE GROUP BY ORGID AND LEDGERCODE 
SELECT 
   D.ORGID,
   D.LEDGERCODE,
   SUM(D.NETAMOUNT) AMOUNT
 INTO 
   #TEMPFINAL 
 FROM 
   #DUMP D
 GROUP BY
   D.ORGID,D.LEDGERCODE 





-- TO COME AS LAST ROW WHICH IS THE ORG WISE TOTAL 
SELECT 
  ORGID,
  SUM(AMOUNT) ORGTOTAL
INTO
  #ORGWISETOTAL 
FROM 
  #TEMPFINAL 
GROUP BY
  ORGID 
UPDATE #ORGWISETOTAL SET ORGTOTAL = 0 WHERE ORGTOTAL IS NULL 

-- TO GENERATE THE LAST COLUMN WHICH IS NOTHING BUT LEDGERWISE TOTAL 
SELECT 
  LEDGERCODE,
  SUM(AMOUNT) LEDGERTOTAL 
INTO 
  #LEDGERWISETOTAL
FROM 
  #TEMPFINAL 
GROUP  BY
  LEDGERCODE 
UPDATE #LEDGERWISETOTAL SET LEDGERTOTAL = 0 WHERE LEDGERTOTAL IS NULL 

DECLARE @INTERSECTTOTAL DECIMAL(18,2)
SELECT @INTERSECTTOTAL = SUM(ORGTOTAL) FROM #ORGWISETOTAL

INSERT INTO #TEMPFINAL(ORGID,LEDGERCODE,AMOUNT) 
SELECT ORGID ,'ZZZZZZ', ORGTOTAL FROM #ORGWISETOTAL 
--LAST ROW 


INSERT INTO #TEMPFINAL(ORGID,LEDGERCODE,AMOUNT)
SELECT 999999,LEDGERCODE,LEDGERTOTAL FROM #LEDGERWISETOTAL 
-- LAST COLUMN 


-- LAST RIGHT CORNER (INTERSECT COLUMN) VALUE 

INSERT INTO #TEMPFINAL(ORGID,LEDGERCODE,AMOUNT)
SELECT 999999,'ZZZZZZ',@INTERSECTTOTAL



ALTER TABLE #TEMPFINAL ADD BORGNAME VARCHAR(6)
ALTER TABLE #TEMPFINAL ADD NAME VARCHAR(250)
ALTER TABLE #TEMPFINAL ADD LEDGERNAME VARCHAR(50)
ALTER TABLE #TEMPFINAL ADD LEDGERALLOC VARCHAR(50)

-- 
UPDATE #TEMPFINAL SET BORGNAME =LEFT(BORGS.BORGNAME,6) FROM BORGS INNER JOIN #TEMPFINAL ON #TEMPFINAL.ORGID=BORGS.BORGID 
UPDATE #TEMPFINAL SET BORGNAME = 'ZZZZZZ' WHERE ORGID = 999999
UPDATE #TEMPFINAL SET NAME = LTRIM(RTRIM(LEFT(LEDGERCODES.LEDGERNAME,150))) FROM LEDGERCODES INNER JOIN #TEMPFINAL ON #TEMPFINAL.LEDGERCODE=LEDGERCODES.LEDGERCODE 
UPDATE #TEMPFINAL SET LEDGERNAME =LTRIM(RTRIM(LEFT(LEDGERCODES.LEDGERCODE,15)))+'-'+LTRIM(RTRIM(LEFT(LEDGERCODES.LEDGERNAME,150))) FROM LEDGERCODES INNER JOIN #TEMPFINAL ON #TEMPFINAL.LEDGERCODE=LEDGERCODES.LEDGERCODE 

UPDATE #TEMPFINAL SET LEDGERNAME = 'ZZZZZZ-TOTAL' WHERE LEDGERCODE='ZZZZZZ'
UPDATE #TEMPFINAL SET LEDGERALLOC = LEDGERCODES.LEDGERALLOC FROM LEDGERCODES INNER JOIN #TEMPFINAL ON #TEMPFINAL.LEDGERCODE = LEDGERCODES.LEDGERCODE 

UPDATE #TEMPFINAL SET LEDGERNAME=UPPER(LEDGERNAME) 



SELECT ORGID,BORGNAME,LEDGERCODE CODE,LEFT(NAME,150) NAME, LEDGERNAME ,AMOUNT   INTO #FINAL FROM #TEMPFINAL 
 
  


Exec [BI].[CrossTab_ForPANDL] 'SELECT  CODE,NAME,LEDGERNAME,BORGNAME,AMOUNT FROM #FINAL ', 'BORGNAME','SUM(AMOUNT ELSE 0)[]','CODE,NAME,LEDGERNAME'

 

 