/****** Object:  Procedure [BS].[LEDGERSTATEMENT_ORGWISE]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BS].[LEDGERSTATEMENT_ORGWISE](@FINYEAR INT,@CREDNO VARCHAR(10),@STARTDATESTRING VARCHAR(15),@ENDDATESTRING VARCHAR(15),@ORGID INT )
AS
BEGIN
	DECLARE @FILENAME VARCHAR(100)
	DECLARE @FILEID   VARCHAR(10)
	DECLARE @SQL      VARCHAR(250)
	SET @FILENAME = 'BSBS_TEMP.DBO.LEDGERSTATEMENTORG'

	DECLARE @STARTBANK VARCHAR(10)
	DECLARE @ENDBANK   VARCHAR(10)
	DECLARE @PETTYCASH VARCHAR(10)
	SELECT @PETTYCASH = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Petty Cash'                         
	SELECT @STARTBANK=CONTROLFROMGL ,@ENDBANK=CONTROLTOGL FROM CONTROLCODES WHERE CONTROLNAME='Bank'
    SELECT LEDGERCODE,LEDGERNAME INTO #BANKS FROM LEDGERCODES WHERE LEDGERCODE BETWEEN @STARTBANK AND @ENDBANK 
	INSERT INTO #BANKS 
	SELECT @PETTYCASH,LEDGERNAME FROM LEDGERCODES WHERE LEDGERCODE=@PETTYCASH


 
	DECLARE @CREDITORS VARCHAR(10)
	SELECT @CREDITORS = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Creditors'
	
	DECLARE @OPENINGBALANCE DECIMAL(18,2)
	DECLARE @OPBAL_BILL DECIMAL(18,2)
	DECLARE @OPBAL_PAY  DECIMAL(18,2)

	DECLARE @STARTDATE     DATETIME
	DECLARE @ENDDATE       DATETIME
	SELECT @STARTDATE = CONVERT(DATETIME, @STARTDATESTRING,103) -- dd/mm/yyyy 
	SELECT @ENDDATE   = CONVERT(DATETIME, @ENDDATESTRING,103) -- dd/mm/yyyy 

	DECLARE @SEALINGDATE DATETIME
	SELECT @SEALINGDATE = PEDATE FROM PERIODSETUP WHERE YEAR=@FINYEAR  AND PERIOD=0 AND ORGID=2
	IF @STARTDATE < @SEALINGDATE 
	   SET @STARTDATE = @SEALINGDATE 

	SET @OPENINGBALANCE = 0 
	SET @OPBAL_BILL = 0
	SET @OPBAL_PAY = 0

	SELECT @OPBAL_BILL= SUM(CREDIT-DEBIT) 
	FROM 
	 TRANSACTIONS 
    WHERE
	 CREDNO=@CREDNO AND YEAR=@FINYEAR AND PDATE < @STARTDATE AND TRANSTYPE IN ('DEL','CRI') AND LEDGERCODE = @CREDITORS AND ORGID=@ORGID 
	GROUP BY 
	 CREDNO 

 


	SELECT @OPBAL_PAY= SUM(CREDIT-DEBIT) 
	FROM 
	 TRANSACTIONS 
    WHERE
	 CREDNO=@CREDNO AND YEAR=@FINYEAR AND PDATE < @STARTDATE AND TRANSTYPE NOT IN ('DEL','CRI') AND LEDGERCODE = @CREDITORS AND ORGID=@ORGID
	GROUP BY 
	 CREDNO 
  
	SET @OPENINGBALANCE = @OPBAL_BILL + @OPBAL_PAY 

	SELECT @OPBAL_BILL, @OPBAL_PAY,@OPENINGBALANCE 


	SELECT 
	  ORGID,RECEIVEDDATE BILLDATE,PDATE TRANSACTIONDATE,TRANSREF,LEFT(TRANSTYPE,3) TRANSTYPE,ORDERNO,CREDNO,DEBIT,CREDIT,TRANSID,TRANGRP 
	INTO 
	  #LEDGERSTATMENT
	FROM 
	  TRANSACTIONS 
    WHERE 
	  LEDGERCODE = @CREDITORS  AND  CREDNO = @CREDNO  AND PDATE >= @STARTDATE AND PDATE <= @ENDDATE AND YEAR >=@FINYEAR AND ORGID = @ORGID
	 
	--SELECT * FROM #LEDGERSTATMENT

	SELECT T.TRANGRP,T.LEDGERCODE,N.LEDGERNAME 
	INTO #BANKLISTS
	FROM TRANSACTIONS T INNER JOIN #LEDGERSTATMENT L ON T.TRANGRP=L.TRANGRP  AND T.LEDGERCODE IN (SELECT LEDGERCODE  FROM #BANKS)  
	INNER JOIN LEDGERCODES N ON T.LEDGERCODE=N.LEDGERCODE 

	SELECT * FROM #BANKLISTS 

	UPDATE #LEDGERSTATMENT SET ORDERNO  = BL.LEDGERNAME FROM #BANKLISTS BL  INNER JOIN #LEDGERSTATMENT ON #LEDGERSTATMENT.TRANGRP=BL.TRANGRP WHERE
	#LEDGERSTATMENT.TRANSTYPE IN ('CBC','CRA' , 'CBD', 'SCP' ) 


 
    ALTER TABLE #LEDGERSTATMENT ADD INDEXCODES INT 

	UPDATE #LEDGERSTATMENT SET INDEXCODES = 5
	UPDATE #LEDGERSTATMENT SET INDEXCODES = 1 WHERE TRANSTYPE IN ( 'DEL', 'CRI' , 'SCI') 
	UPDATE #LEDGERSTATMENT SET INDEXCODES = 2 WHERE TRANSTYPE IN ( 'CBC', 'CBD', 'PCP', 'PCR', 'CCN', 'SCP', 'CRA' )
	UPDATE #LEDGERSTATMENT SET INDEXCODES = 3 WHERE TRANSTYPE IN ( 'JNL' )
	UPDATE #LEDGERSTATMENT SET INDEXCODES = 4 WHERE TRANSTYPE IN ( 'BFD') 
 
    CREATE TABLE #CLS ( COUNTERS INT IDENTITY,
	  ORGID INT, ORGNAME VARCHAR(100), CREDNO VARCHAR(10), CREDNAME VARCHAR(100) , BILLDATE DATETIME, BILLNUMBER VARCHAR(10) ,
	  TRANSTYPE VARCHAR(10), ORDERNUMBER VARCHAR(50) , DEBIT DECIMAL(18,2) , CREDIT DECIMAL(18,2),INDEXCODES INT,TRANSID INT ) 

	INSERT INTO #CLS 
	SELECT ORGID,SPACE(100),CREDNO, SPACE(100), BILLDATE , TRANSREF, TRANSTYPE , ORDERNO , DEBIT, CREDIT , INDEXCODES,TRANSID   FROM #LEDGERSTATMENT 
	WHERE INDEXCODES=1 ORDER BY ORGID,BILLDATE 

	INSERT INTO #CLS
	SELECT ORGID, SPACE(100),CREDNO, SPACE(100), TRANSACTIONDATE, TRANSREF, TRANSTYPE, ORDERNO, DEBIT, CREDIT , INDEXCODES ,TRANSID  FROM #LEDGERSTATMENT
	WHERE INDEXCODES<>1 ORDER BY INDEXCODES,ORGID, TRANSACTIONDATE 

	IF @OPENINGBALANCE <=0 
	   INSERT INTO #CLS
	   SELECT SPACE(10),SPACE(100),@CREDNO,SPACE(100),NULL,SPACE(10),SPACE(10),'OPENING BALANCE', 0, ABS(@OPENINGBALANCE) , 0,0 
	 ELSE
	   INSERT INTO #CLS
	   SELECT SPACE(10),SPACE(100),@CREDNO,SPACE(100),NULL,SPACE(10),SPACE(10),'OPENING BALANCE', 0, ABS(@OPENINGBALANCE) , 0 ,0 

	UPDATE #CLS SET ORGNAME = B.BORGNAME FROM BORGS B INNER JOIN #CLS ON #CLS.ORGID = B.BORGID 
	UPDATE #CLS SET CREDNAME = C.CREDNAME FROM CREDITORS C INNER JOIN #CLS ON #CLS.CREDNO= C.CREDNUMBER 

	ALTER TABLE #CLS ADD STARTDATE DATETIME
	ALTER TABLE #CLS ADD ENDDATE DATETIME
	UPDATE #CLS SET STARTDATE = @STARTDATE
	UPDATE #CLS SET ENDDATE = @ENDDATE 
 

	SELECT SUM(DEBIT-CREDIT) FROM #CLS WHERE INDEXCODES=0 

	DECLARE @Random INT;
	DECLARE @Upper INT;
	DECLARE @Lower INT
 
	SET @Lower = 1 ---- The lowest random number
	SET @Upper = 999 ---- The highest random number
	SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

	SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
		+ (DATEPART(ss, GETDATE()) * 1000 )
		+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

SELECT * FROM #CLS 

	SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))
    SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #CLS  ORDER BY ORGID,INDEXCODES,BILLDATE  '
	EXEC(@SQL)

    RETURN @FILEID
END