/****** Object:  Procedure [BS].[spSubConCommittment]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE  [BS].[spSubConCommittment](@BORGID INT,@FINYEAR INT, @STARTPERIOD INT, @ENDPERIOD INT) 
AS

SELECT 
 T.ORGID,
 T.CREDNO,
 S.SUBNAME,
 S.CUSTOMS SUBTYPE,
 T.SUBCONTRAN,
 SUM(T.CREDIT-T.DEBIT) OUTSTANDING 
INTO #THISORGSOUTSTANDING
FROM 
 TRANSACTIONS T 
 INNER JOIN SUBCONTRACTORS S ON T.CREDNO=S.SUBNUMBER 
WHERE 
 T.LEDGERCODE='1320000'  AND
  T.ORGID=@BORGID AND
  T.YEAR =@FINYEAR AND 
  T.PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD 
GROUP BY 
 T.ORGID,
 T.CREDNO,
 S.SUBNAME,
 S.CUSTOMS,
 T.SUBCONTRAN 
 
 


 CREATE TABLE #FINAL
 (
  SLNO INT PRIMARY KEY IDENTITY(1,1)  ,
  CREDNO VARCHAR(10),
  SUBNAME VARCHAR(150),
  SUBTYPE VARCHAR(20),
  ADVANCE DECIMAL(18,2),
  CERTIFIED DECIMAL(18,2),
  RETENTION DECIMAL(18,2),
  WITHHOLDTAX DECIMAL(18,2),
  TOTALHELD DECIMAL(18,2),
  PAID DECIMAL(18,2),
  OUTSTANDING DECIMAL(18,2),
  PAYABLE DECIMAL(18,2),
  RECEIVABLE DECIMAL(18,2),
  ZONALOUTSTANDING DECIMAL(18,2),
  UNPAIDGST DECIMAL(18,2),
  PAYAFTERGST DECIMAL(18,2),
  NETPAYABLE DECIMAL(18,2)
)
 

SELECT 
 T.CREDNO,
 SUM(T.DEBIT-T.CREDIT) ZONALOUTSTANDING
INTO 
 #ZONALOUTSTANDING
FROM 
 TRANSACTIONS T
WHERE 
 T.LEDGERCODE='1320000'   AND
 T.YEAR =@FINYEAR AND
 T.PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD AND
 T.ORGID IN (SELECT BORGID FROM BORGS WHERE PARENTBORG IN (  23,24,25,26,172   ) )
GROUP BY 
 T.CREDNO 



--- MODIFIED ON 14 AUGUST 2019 TO INCLUDE SUB CONTRACTOR ADVANCES ALSO ---- 
--  LEDGERCODE FOR SUB CONTRACTOR ADVANCE IS 1320003   ---

SELECT T.ORGID,T.CREDNO,SUM(T.CREDIT-T.DEBIT)  ADVANCES
INTO #ADVANCES
FROM TRANSACTIONS T
WHERE LEDGERCODE='1320000' AND 
T.ORGID=@BORGID AND
T.YEAR =@FINYEAR AND 
T.SUBCONTRAN='Advance' AND 
T.PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD 
GROUP BY 
T.ORGID,
T.CREDNO

DELETE FROM #ADVANCES WHERE CREDNO=''
DELETE FROM #ADVANCES WHERE ADVANCES=0

SELECT * FROM #ADVANCES WHERE CREDNO NOT IN (SELECT CREDNO FROM #THISORGSOUTSTANDING)

INSERT INTO #THISORGSOUTSTANDING(ORGID,CREDNO,SUBNAME,SUBTYPE,SUBCONTRAN,OUTSTANDING) 
SELECT @BORGID,A.CREDNO,'','','Advance',ADVANCES FROM #ADVANCES A WHERE CREDNO NOT IN (SELECT CREDNO FROM #THISORGSOUTSTANDING WHERE SUBCONTRAN='Advance')
UPDATE #THISORGSOUTSTANDING SET SUBNAME =S.SUBNAME,SUBTYPE = S.CUSTOMS FROM SUBCONTRACTORS S INNER JOIN #THISORGSOUTSTANDING ON #THISORGSOUTSTANDING.CREDNO=S.SUBNUMBER

UPDATE #THISORGSOUTSTANDING 
SET OUTSTANDING = A.ADVANCES 
FROM #ADVANCES A 
INNER JOIN #THISORGSOUTSTANDING  ON #THISORGSOUTSTANDING .CREDNO=A.CREDNO AND SUBCONTRAN='Advance'

SELECT * FROM #ADVANCES
SELECT * FROM #THISORGSOUTSTANDING ORDER BY SUBCONTRAN

INSERT INTO #FINAL(CREDNO,SUBNAME,SUBTYPE) 
SELECT DISTINCT CREDNO,SUBNAME,SUBTYPE FROM #THISORGSOUTSTANDING ORDER BY SUBNAME

UPDATE #FINAL SET ADVANCE=0
UPDATE #FINAL SET ADVANCE = HO.OUTSTANDING FROM #THISORGSOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO AND HO.SUBCONTRAN='Advance'

UPDATE #FINAL SET CERTIFIED=0
UPDATE #FINAL SET CERTIFIED = HO.OUTSTANDING FROM #THISORGSOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO AND HO.SUBCONTRAN='Certified Amount'
 
UPDATE #FINAL SET RETENTION=0
UPDATE #FINAL SET RETENTION = HO.OUTSTANDING FROM #THISORGSOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO  AND HO.SUBCONTRAN='Retention'

UPDATE #FINAL SET WITHHOLDTAX=0
UPDATE #FINAL SET WITHHOLDTAX = HO.OUTSTANDING FROM #THISORGSOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO AND HO.SUBCONTRAN='WithHolding Tax'

UPDATE #FINAL SET TOTALHELD=0
UPDATE #FINAL SET TOTALHELD = ADVANCE+ CERTIFIED+RETENTION+WITHHOLDTAX 


UPDATE #FINAL SET PAID=0
UPDATE #FINAL SET PAID = HO.OUTSTANDING FROM #THISORGSOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO AND HO.SUBCONTRAN='Payment'

UPDATE #FINAL SET OUTSTANDING=0
UPDATE #FINAL SET OUTSTANDING = TOTALHELD+PAID 


UPDATE #FINAL SET PAYABLE =0
UPDATE #FINAL SET PAYABLE = OUTSTANDING WHERE OUTSTANDING>0 

UPDATE #FINAL SET RECEIVABLE=0
UPDATE #FINAL SET RECEIVABLE = OUTSTANDING WHERE OUTSTANDING<0

UPDATE #FINAL SET ZONALOUTSTANDING =0
UPDATE #FINAL SET ZONALOUTSTANDING =-1.0* HO.ZONALOUTSTANDING FROM #ZONALOUTSTANDING HO INNER JOIN #FINAL ON #FINAL.CREDNO = HO.CREDNO 

UPDATE #FINAL SET UNPAIDGST=0,PAYAFTERGST=0,NETPAYABLE=0

DECLARE @BORGNAME VARCHAR(250)
SELECT @BORGNAME= BORGNAME FROM BORGS WHERE BORGID=@BORGID 
DECLARE @PERIODSTART VARCHAR(50)
SELECT @PERIODSTART = PERIODDESC FROM PERIODMASTER WHERE PERIODID=@STARTPERIOD  
DECLARE @PERIODEND VARCHAR(50)
SELECT @PERIODEND = PERIODDESC FROM PERIODMASTER WHERE PERIODID=@ENDPERIOD  

IF @STARTPERIOD = 0 
   SET @PERIODSTART = 'Opening Balance'

IF @ENDPERIOD = 0
   SET @PERIODEND = 'Opening Balance' 

ALTER TABLE #FINAL ADD BORGNAME VARCHAR(250)
ALTER TABLE #FINAL ADD PERIODSTART VARCHAR(50)
ALTER TABLE #FINAL ADD PERIODEND VARCHAR(50)
ALTER TABLE #FINAL ADD FINYEAR INT


UPDATE #FINAL SET BORGNAME = @BORGNAME
UPDATE #FINAL SET PERIODSTART=@PERIODSTART,PERIODEND = @PERIODEND ,FINYEAR=@FINYEAR 

DECLARE @FILENAME VARCHAR(100)
DECLARE @FILEID   VARCHAR(10)
DECLARE @SQL      VARCHAR(250)

 

SET @FILENAME = 'BSBS_TEMP.DBO.SUBCONCOMMIT'

DECLARE @Random INT;
DECLARE @Upper INT;
DECLARE @Lower INT
 
SET @Lower = 1 ---- The lowest random number
SET @Upper = 999 ---- The highest random number
SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
	+ (DATEPART(ss, GETDATE()) * 1000 )
	+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))
select @filename
SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #FINAL ORDER BY SLNO  '
 
EXEC(@SQL)

RETURN @FILEID

 