/****** Object:  Procedure [BS].[SALEREGISTER]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE [BS].[SALEREGISTER]( @FINYEAR INT,@STARTPERIOD INT, @ENDPERIOD INT , @ORGID INT,@ZONEID INT,@REGISTER INT ) 
AS
    DECLARE @FILENAME VARCHAR(100)
	DECLARE @FILEID   VARCHAR(10)
	DECLARE @SQL      VARCHAR(250)
	DECLARE @WIP      VARCHAR(10)

	CREATE TABLE #SUMMARY (
	 SLNO INT,
	 TRANGRP INT,
	 BATCHREF VARCHAR(10),
	 BILLDATE DATETIME,
	 UNCERTIFIED MONEY,
	 CERTIFIED MONEY,
	 VAT MONEY,
	 ST MONEY,
	 SBC MONEY,
	 LS MONEY,
	 CONTRA MONEY,
	 GROSS MONEY,
	 MOBADVADJ MONEY,
	 MATADVADJ MONEY,
	 RETDED MONEY,
	 TDSDED MONEY,
	 WCTDED MONEY ,
	 GROSSRECEIVE MONEY,
	 NETRECEIVE MONEY,
	 WITHHELD MONEY,
	 BALANCERECEIVE MONEY,
	 RETENTIONRELEASE MONEY,
	 WITHHELRELEASE MONEY,
	 CREDNO VARCHAR(10),
	 DEBTNAME VARCHAR(200),
	 REMARKS VARCHAR(250)

	)
	 

	DECLARE @SLNO INT
	DECLARE @TRANGRP INT
	DECLARE @CREDNO VARCHAR(10)
	DECLARE @DEBTNAME VARCHAR(200)
	DECLARE @LEDGERCODE VARCHAR(10)
	DECLARE @CERTDATE DATETIME
	DECLARE @BATCHREF VARCHAR(20)
	DECLARE @REMARKS VARCHAR(250)
 

	DECLARE @CERTIFIED MONEY
	DECLARE @UNCERTIFIED MONEY
	DECLARE @VAT MONEY
    DECLARE @ST MONEY
	DECLARE @SBC MONEY
	DECLARE @LCESS MONEY
	DECLARE @MOBADV  MONEY
	DECLARE @MATADV  MONEY
	DECLARE @RETDED  MONEY
	DECLARE @WITHHELD MONEY
	DECLARE @WCTDED  MONEY
	DECLARE @RETREL  MONEY
	DECLARE @WITHREL MONEY
	DECLARE @TDSDED  MONEY

	SELECT @WIP = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Work In Progress'
 
    DECLARE @STARTPERIODNAME VARCHAR(20)
	DECLARE @ENDPERIODNAME   VARCHAR(20)
 
	SELECT @STARTPERIODNAME = DESCR  FROM PERIODSETUP WHERE YEAR= @FINYEAR AND PERIOD =@STARTPERIOD
	SELECT @ENDPERIODNAME   = DESCR  FROM PERIODSETUP WHERE YEAR= @FINYEAR AND PERIOD =@ENDPERIOD

	IF @REGISTER = 1
	   SET @FILENAME = 'BSBS_TEMP.DBO.SALE' 
    ELSE
	   SET @FILENAME = 'BSBS_TEMP.DBO.SALEREGISTER'

 
    CREATE TABLE #BORGS(BORGID INT) 
    IF @ZONEID <> 0 
	    INSERT INTO #BORGS 
	    SELECT BORGID FROM BORGS WHERE PARENTBORG = @ZONEID 
	ELSE
	    INSERT INTO #BORGS(BORGID) VALUES (@ORGID) 

	SELECT T.ORGID,T.YEAR,T.PERIOD,T.BATCHREF,T.TRANGRP,T.PDATE,T.TRANSID ,
	       T.TRANSREF,T.LEDGERCODE,T.ACTIVITY,T.DESCRIPTION,T.DEBIT,
		   T.CREDIT,T.CREDNO,UPPER(D.DEBTNAME) DEBTNAME,B.BORGNAME,UPPER(L.LEDGERNAME) LEDGERNAME ,
		   T.ALLOCATION,A.ACTNAME,@STARTPERIODNAME STARTPERIOD,@ENDPERIODNAME ENDPERIOD  
	INTO #TEMP1
    FROM TRANSACTIONS T INNER JOIN BORGS B ON T.ORGID = B.BORGID 
    INNER JOIN LEDGERCODES L ON L.LEDGERCODE=T.LEDGERCODE  
    INNER JOIN DEBTORS D ON D.DEBTNUMBER = T.CREDNO 
	INNER JOIN ACTIVITIES A ON T.Activity = A.ActNumber
	WHERE LEFT(BATCHREF,3)='DTI'  AND T.LEDGERCODE<>@WIP AND
	T.ORGID IN (SELECT BORGID FROM #BORGS) AND
	T.YEAR = @FINYEAR AND
	T.PERIOD BETWEEN @STARTPERIOD AND @ENDPERIOD 
	ORDER BY ORGID,TRANGRP,TRANSID 

	SELECT * INTO #FORREGISTER FROM  #TEMP1 

	ALTER TABLE #TEMP1 ADD REMARK VARCHAR(250)
	ALTER TABLE #TEMP1 ADD FROMDATE DATETIME 

	SELECT  TRANGRP, REMARK,FROMDATE
	INTO #TEMP2 
    FROM DEBTRECONS_ARCHIEVE 
	WHERE TRANGRP IN (SELECT DISTINCT TRANGRP FROM #TEMP1) 


	UPDATE #TEMP1 SET REMARK = T.REMARK, FROMDATE = T.FROMDATE FROM 
	#TEMP2 T INNER JOIN #TEMP1 ON #TEMP1.TRANGRP = T.TRANGRP 

	--IF @REGISTER = 2
	--BEGIN

	--   SELECT  LEDGERCODE INTO #FREEISSUE FROM LEDGERCODES  WHERE LEDGERCODE  IN ( '5007000', '5008100') 

	--   CREATE TABLE #SALEREGISTER(BORGID INT,BORGNAME VARCHAR(150),DEBTORCODE VARCHAR(10),DEBTORNAME VARCHAR(150),INVOICE VARCHAR(20),
	--   INVOICEDATE DATETIME, SALELEDGERCODE VARCHAR(10),SALELEDGERNAME VARCHAR(50),SALESAMOUNT DECIMAL(18,2),VATLEDGER VARCHAR(10),
	--   VATAMOUNT DECIMAL(18,2),VATPERCENT DECIMAL(18,2),STLEDGER VARCHAR(10), STAMOUNT DECIMAL(18,2),STPERCENTAGE DECIMAL(18,2),
	--   FREEISSUE DECIMAL(18,2),FREEISSUELEDGER VARCHAR(10), 
	--   TCSLEDGER VARCHAR(10), TCS DECIMAL(18,2) , TRANGRP INT )
	   
	--   SELECT 
	--      TRANGRP,
	--	  ORGID,
	--	  PDATE,
	--	  CREDNO,
	--	  TRANSREF,
	--	  LEDGERCODE,
	--	  SUM(DEBIT) DEBIT,
	--	  SUM(CREDIT) CREDIT 
	--	INTO 
	--	  #TOREGISTER 
	--	FROM 
	--	  #FORREGISTER
	--	GROUP BY 
	--	  TRANGRP,
	--	  ORGID,
	--	  PDATE,
	--	  CREDNO,
	--	  TRANSREF,
	--	  LEDGERCODE 
	 
	--    SELECT DISTINCT LEDGERCODE  FROM #TOREGISTER


	--    SELECT * FROM #FORREGISTER WHERE LEDGERCODE IN ( SELECT LEDGERCODE FROM #FREEISSUE ) 

	--	DECLARE @REVSTART VARCHAR(10)
	--	DECLARE @REVEND   VARCHAR(10)
	--	SELECT @REVSTART= CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Contract Revenue'
	--	SELECT @REVEND=  CONTROLTOGL   FROM CONTROLCODES WHERE CONTROLNAME='Contract Revenue'
 
 

	 

	--	INSERT INTO  #SALEREGISTER(TRANGRP,BORGID,INVOICEDATE,DEBTORCODE,INVOICE) 
	--	SELECT DISTINCT  TRANGRP,ORGID,PDATE,CREDNO,TRANGRP FROM #TOREGISTER 
	--	UPDATE #SALEREGISTER SET SALELEDGERCODE=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode BETWEEN @REVSTART AND @REVEND 

	--	UPDATE #SALEREGISTER SET SALELEDGERCODE=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode BETWEEN @REVSTART AND @REVEND
 

	--	UPDATE #SALEREGISTER SET VATLEDGER=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode ='1310000'

	--	UPDATE #SALEREGISTER SET STLEDGER=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode ='1310002'

		
	--	UPDATE #SALEREGISTER SET TCSLEDGER=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode ='1310006'

	--	UPDATE #SALEREGISTER SET FREEISSUELEDGER=LEDGERCODE FROM #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP
	--	WHERE #TOREGISTER.LedgerCode IN (SELECT LEDGERCODE FROM #FREEISSUE) 

	--	SELECT * FROM #TOREGISTER WHERE LEDGERCODE IN (SELECT LEDGERCODE FROM #FREEISSUE) 


	--	UPDATE #SALEREGISTER SET SALESAMOUNT =-1.0* DEBIT FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.SALELEDGERCODE =#TOREGISTER.LEDGERCODE AND DEBIT>0
	--    UPDATE #SALEREGISTER SET SALESAMOUNT =CREDIT  FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.SALELEDGERCODE =#TOREGISTER.LEDGERCODE AND CREDIT>0 

	--	UPDATE #SALEREGISTER SET VATAMOUNT =-1.0* DEBIT FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.VATLEDGER =#TOREGISTER.LEDGERCODE AND DEBIT>0
	--    UPDATE #SALEREGISTER SET VATAMOUNT =CREDIT  FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.VATLEDGER =#TOREGISTER.LEDGERCODE AND CREDIT>0 

	--	UPDATE #SALEREGISTER SET STAMOUNT =-1.0* DEBIT FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.STLEDGER =#TOREGISTER.LEDGERCODE AND DEBIT>0 
	--    UPDATE #SALEREGISTER SET STAMOUNT =CREDIT  FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.STLEDGER =#TOREGISTER.LEDGERCODE AND CREDIT>0 

	--	UPDATE #SALEREGISTER SET TCS =-1.0* DEBIT FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.TCSLEDGER =#TOREGISTER.LEDGERCODE AND DEBIT>0 
	--    UPDATE #SALEREGISTER SET TCS =CREDIT  FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.TCSLEDGER =#TOREGISTER.LEDGERCODE AND CREDIT>0
	 
	--    UPDATE #SALEREGISTER SET FREEISSUE =-1.0* DEBIT FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.FREEISSUELEDGER IN ( SELECT LEDGERCODE FROM #FREEISSUE)  AND DEBIT>0 
	--    UPDATE #SALEREGISTER SET FREEISSUE =CREDIT  FROM  #TOREGISTER INNER JOIN #SALEREGISTER ON #SALEREGISTER.TRANGRP=#TOREGISTER.TRANGRP AND
	--	#SALEREGISTER.FREEISSUELEDGER IN ( SELECT LEDGERCODE FROM #FREEISSUE) AND CREDIT>0

 


	--	UPDATE #SALEREGISTER SET DEBTORNAME = D.DEBTNAME FROM DEBTORS D INNER JOIN #SALEREGISTER ON #SALEREGISTER.DEBTORCODE=D.DEBTNUMBER 
	--	UPDATE #SALEREGISTER SET BORGNAME = B.BORGNAME FROM BORGS B INNER JOIN #SALEREGISTER ON #SALEREGISTER.BORGID = B.BORGID 
	--	UPDATE #SALEREGISTER SET SALELEDGERNAME = L.LEDGERNAME FROM LEDGERCODES L INNER JOIN #SALEREGISTER ON #SALEREGISTER.SALELEDGERCODE = L.LEDGERCODE 

	--	UPDATE #SALEREGISTER SET VATPERCENT = 100.00 * (VATAMOUNT/SALESAMOUNT)
	--	UPDATE #SALEREGISTER SET STPERCENTAGE = 100.00 * (STAMOUNT/SALESAMOUNT) 

	--	SELECT * FROM #SALEREGISTER ORDER BY SALELEDGERCODE DESC
	--END
	SELECT * FROM #TEMP1 

	DECLARE SALES CURSOR FOR 
	SELECT DISTINCT TRANGRP FROM #TEMP1

	OPEN SALES
	FETCH NEXT FROM SALES INTO @TRANGRP
	SET @SLNO = 0

	WHILE @@FETCH_STATUS = 0 
	BEGIN
	    
		SET @SLNO = @SLNO + 1

		SELECT TOP 1 @BATCHREF=BATCHREF,@CERTDATE=PDATE,@CREDNO=CREDNO,@DEBTNAME = DEBTNAME ,@REMARKS = REMARK FROM #TEMP1 WHERE TRANGRP = @TRANGRP 
		INSERT INTO #SUMMARY(SLNO,TRANGRP,BATCHREF,BILLDATE,CREDNO,DEBTNAME,REMARKS ) VALUES (@SLNO,@TRANGRP,@BATCHREF,@CERTDATE,@CREDNO,@DEBTNAME,@REMARKS ) 

		SET @CERTIFIED=0
		SELECT @CERTIFIED = ISNULL(CREDIT,0) FROM #TEMP1 WHERE LEDGERCODE='4010001' AND TRANGRP = @TRANGRP 
		UPDATE #SUMMARY SET UNCERTIFIED = @CERTIFIED WHERE TRANGRP = @TRANGRP 

		SET @UNCERTIFIED = 0 
		SELECT @UNCERTIFIED = ISNULL(CREDIT,0) FROM #TEMP1 WHERE LEDGERCODE='4010000' AND TRANGRP = @TRANGRP 
		UPDATE #SUMMARY SET CERTIFIED = @UNCERTIFIED WHERE TRANGRP = @TRANGRP 

		SET @VAT = 0 
		SELECT @VAT = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='1310000' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET VAT = @VAT WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @VAT = 0 
		SELECT @VAT = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='1310000' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET VAT = @VAT WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @ST = 0 
		SELECT @ST = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='1310000' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET ST = @ST WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @SBC = 0 
		SELECT @SBC = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='1310002' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET SBC = @SBC WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @LCESS = 0 
		SELECT @LCESS = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='1310017' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET LS = @LCESS WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @MOBADV = 0 
		SELECT @MOBADV = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2541000' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET MOBADVADJ = @MOBADV WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @MATADV = 0 
		SELECT @MATADV = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2541001' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET MATADVADJ = @MATADV WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @RETDED = 0 
		SELECT @RETDED = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2540004' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET RETDED = @RETDED WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @WITHHELD = 0 
		SELECT @WITHHELD = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2570005' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET WITHHELD = @WITHHELD WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @TDSDED = 0 
		SELECT @TDSDED = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2590102' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET TDSDED = @TDSDED WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP


		SET @WCTDED = 0 
		SELECT @WCTDED = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2590102' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET WCTDED = @WCTDED WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @RETREL = 0 
		SELECT @RETREL = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2540004' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET RETENTIONRELEASE = @RETREL WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

		SET @WITHREL = 0 
		SELECT @WITHREL = SUM(ISNULL(CREDIT,0)) FROM #TEMP1 WHERE LEDGERCODE='2540005' AND TRANGRP = @TRANGRP  GROUP BY TRANGRP 
		UPDATE #SUMMARY SET WITHHELRELEASE = @WITHREL WHERE TRANGRP = @TRANGRP
		FETCH NEXT FROM SALES INTO @TRANGRP

	END
	CLOSE SALES
	DEALLOCATE SALES
	SELECT * FROM #SUMMARY 

 
 
  
 
  
 
 
 


	DECLARE @Random INT;
	DECLARE @Upper INT;
	DECLARE @Lower INT
 
	SET @Lower = 1 ---- The lowest random number
	SET @Upper = 999 ---- The highest random number
	SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

	SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
	+ (DATEPART(ss, GETDATE()) * 1000 )
	+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

	SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))

	IF @REGISTER = 1
       SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #TEMP1  ORDER BY ORGID,DEBTNAME,TRANGRP,ALLOCATION,LEDGERCODE DESC   ' 
	ELSE
	   SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #SALEREGISTER  ORDER BY BORGID,DEBTORNAME,TRANGRP    '

	EXEC(@SQL)
	SELECT @FILENAME 
    RETURN @FILEID