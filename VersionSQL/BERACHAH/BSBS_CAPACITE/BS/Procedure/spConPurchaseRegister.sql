/****** Object:  Procedure [BS].[spConPurchaseRegister]    Committed by VersionSQL https://www.versionsql.com ******/

 
CREATE PROCEDURE [BS].[spConPurchaseRegister] (@ZONE INT,@STARTDATESTRING VARCHAR(15), @ENDDATESTRING VARCHAR(15),@FINYEAR INT )
AS 
 
DECLARE @FILENAME VARCHAR(100)
DECLARE @FILEID   VARCHAR(10)
DECLARE @SQL      VARCHAR(250)

SELECT BORGID INTO #BORGS  FROM BORGS WHERE PARENTBORG = @ZONE 
SET @FILENAME = 'BSBS_TEMP.DBO.CONPURCHASEREGISTER'

DECLARE @TRANSID       INT
DECLARE @TAXLEDGER     VARCHAR(10)
DECLARE @TRANGRP       VARCHAR(10)
DECLARE @STARTDATE     DATETIME
DECLARE @ENDDATE       DATETIME
DECLARE @TRANSTYPE     VARCHAR(10)
DECLARE @CREDITOR      VARCHAR(10)
DECLARE @TAXAMOUNT1     DECIMAL(18,2)
DECLARE @CREDNO        VARCHAR(10)
DECLARE @INVOICENUMBER VARCHAR(10)
DECLARE @INVOICEDATE   DATE
DECLARE @INVOICEAMOUNT DECIMAL(18,2)
DECLARE @NARRATION     VARCHAR(250)
DECLARE @ADDITIONAL    DECIMAL(18,2) 
DECLARE @BASEAMOUNT1   DECIMAL(18,2)
DECLARE @TAXPERCENT1   DECIMAL(5,2) 
DECLARE @TAXPERCENT2   DECIMAL(5,2)
DECLARE @TAXAMOUNT2    DECIMAL(18,2) 
DECLARE @TAXPERCENT    DECIMAL(5,2)
DECLARE @TAXAMOUNT     DECIMAL(18,2) 
DECLARE @BASEAMOUNT2   DECIMAL(18,2) 
DECLARE @SERVICETAX    VARCHAR(10)
DECLARE @STCNT INT 
DECLARE @CNT INT
DECLARE @EXTRACNT INT
DECLARE @ADDAMOUNT DECIMAL(18,2)
DECLARE @ADDTAX    DECIMAL(18,2) 
DECLARE @RETAINED  VARCHAR(10)
DECLARE @STAMOUNT  DECIMAL(18,2) 
DECLARE @STKADJ    VARCHAR(10)

SELECT @STARTDATE = CONVERT(DATETIME, @STARTDATESTRING,103) -- dd/mm/yyyy 
SELECT @ENDDATE   = CONVERT(DATETIME, @ENDDATESTRING,103) -- dd/mm/yyyy 

SELECT @TAXLEDGER = LEDGERCODE FROM VATGROUPS WHERE VATGC IN ('VI','VO')
SELECT @SERVICETAX = LEDGERCODE FROM VATGROUPS WHERE NAME = 'SERVICE TAX INPUT'
 

SELECT @CREDITOR = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Creditors' 
SELECT @RETAINED = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Retained Income'
SELECT @STKADJ   = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Stock Adjustment' 

SELECT * FROM #BORGS

CREATE TABLE #INVOICE (BORGID INT,TRANGRP  INT,BATCHREF VARCHAR(50),CREDNO VARCHAR(20),PARTY VARCHAR(200),ORDERNUMBER VARCHAR(250), INVOICEDATE DATETIME,INVOICENUMBER VARCHAR(20),INVOICEAMOUNT DECIMAL(18,2),PERIOD INT)
CREATE TABLE #GRN     (TRANGRPG INT,LEDGERCODE VARCHAR(10), GRNNUMBER VARCHAR(20),GRNDATE DATE,ITEMNAME VARCHAR(250),UNIT VARCHAR(15),QTY DECIMAL(18,4), RATE DECIMAL(18,2),AMOUNT DECIMAL(18,2) )
				
SELECT DISTINCT TRANGRP INTO #TT FROM TRANSACTIONS WHERE ORGID IN (SELECT BORGID FROM #BORGS) AND
                LEDGERCODE=@TAXLEDGER AND PDATE>=@STARTDATE  AND PDATE<=@ENDDATE AND YEAR=@FINYEAR AND 
				PERIOD<>0 AND TRANSTYPE='DEL'  ORDER BY TRANGRP 

SELECT * FROM #TT


DECLARE TRANGRPS CURSOR FOR
SELECT DISTINCT TRANGRP FROM TRANSACTIONS WHERE ORGID IN (SELECT BORGID FROM #BORGS) AND
                LEDGERCODE=@TAXLEDGER AND PDATE>=@STARTDATE  AND PDATE<=@ENDDATE AND YEAR=@FINYEAR AND 
				PERIOD<>0 AND TRANSTYPE='DEL'  ORDER BY TRANGRP 

OPEN TRANGRPS
FETCH  NEXT FROM TRANGRPS INTO @TRANGRP

WHILE @@FETCH_STATUS = 0
BEGIN
   SELECT @TRANGRP 

   INSERT INTO #INVOICE 
   SELECT ORGID,TRANGRP,BATCHREF,CREDNO,SPACE(50),ORDERNO,RECEIVEDDATE,TRANSREF,CREDIT,PERIOD FROM TRANSACTIONS 
   WHERE     TRANGRP=@TRANGRP AND LEDGERCODE=@CREDITOR

   INSERT INTO #GRN
   SELECT TRANGRP,LEDGERCODE,REQNO,    SPACE(15), DESCRIPTION,UNIT,     QUANTITY,RATE,DEBIT  FROM TRANSACTIONS WHERE  
     TRANGRP=@TRANGRP AND REQNO <>'' AND LEDGERCODE <> @STKADJ  ORDER BY REQNO 
   
   INSERT INTO #GRN 
   SELECT TRANGRP,LEDGERCODE,SPACE(10),PDATE, DESCRIPTION,SPACE(10),0,       0, (DEBIT-CREDIT) FROM TRANSACTIONS WHERE 
   TRANGRP=@TRANGRP AND LEDGERCODE=@STKADJ 

   INSERT INTO #GRN
   SELECT TRANGRP,LEDGERCODE,SPACE(10),PDATE, DESCRIPTION,SPACE(10),0,       0,   DEBIT  FROM TRANSACTIONS WHERE   
   TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 


   FETCH  NEXT FROM TRANGRPS INTO @TRANGRP
END
CLOSE TRANGRPS
DEALLOCATE TRANGRPS

SELECT * FROM #INVOICE  ORDER BY  BORGID,CREDNO 

--UPDATE #GRN SET GRNDATE = DELIVERIES.DLVRDATE FROM DELIVERIES INNER JOIN #GRN ON #GRN.GRNNUMBER	= DELIVERIES.GRNNO
 
 
--ALTER TABLE #INVOICE ADD BORGNAME VARCHAR(250)
--ALTER TABLE #INVOICE ADD STARTDATE VARCHAR(20)
--ALTER TABLE #INVOICE ADD ENDDATE   VARCHAR(20)
--ALTER TABLE #INVOICE ADD PERIODNAMES VARCHAR(50)

--UPDATE #INVOICE SET PARTY = C.CREDNAME FROM CREDITORS C INNER JOIN #INVOICE ON #INVOICE.CREDNO=C.CredNumber
--UPDATE #INVOICE SET BORGNAME = B.BORGNAME FROM BORGS B INNER JOIN #INVOICE ON #INVOICE.BORGID= B.BORGID
--UPDATE #INVOICE SET STARTDATE = @STARTDATESTRING
--UPDATE #INVOICE SET ENDDATE = @ENDDATESTRING 
--UPDATE #INVOICE SET PERIODNAMES = P.DESCR FROM PERIODSETUP P INNER JOIN #INVOICE ON #INVOICE.PERIOD=P.PERIOD AND P.YEAR=@FINYEAR AND P.ORGID=2 



--SELECT I.*,G.*  INTO #TEMP0  FROM #INVOICE I  INNER JOIN #GRN G ON I.TRANGRP  = G.TRANGRPG 



 


--DECLARE @Random INT;
--DECLARE @Upper INT;
--DECLARE @Lower INT
 
--SET @Lower = 1 ---- The lowest random number
--SET @Upper = 999 ---- The highest random number
--SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

--SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
--	+ (DATEPART(ss, GETDATE()) * 1000 )
--	+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

--SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))

--SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #TEMP0 ORDER BY CREDNO,BORGID,INVOICENUMBER    '
 
--SELECT @FILENAME

--EXEC(@SQL)

--RETURN @FILEID
 