/****** Object:  Procedure [BS].[spGenerateStockOfADay]    Committed by VersionSQL https://www.versionsql.com ******/

CREATE PROCEDURE BS.spGenerateStockOfADay(@STARTDATESTRING VARCHAR(15) ,@STORE VARCHAR(25))
AS
BEGIN
   DECLARE @STOCKDATE     DATETIME
   SELECT  @STOCKDATE = CONVERT(DATETIME, @STARTDATESTRING,103) -- dd/mm/yyyy 
   SELECT @STOCKDATE 

   DECLARE @TODAY DATETIME 
   SET @TODAY = CONVERT(DATE,GETDATE())
   DECLARE @FILENAME VARCHAR(100)
   DECLARE @FILEID   VARCHAR(10)
   DECLARE @SQL      VARCHAR(250)
   SET @FILENAME = 'BSBS_TEMP.DBO.INVENTORY'

   IF @STOCKDATE <'05-JUN-2015' OR @STOCKDATE>@TODAY 
    BEGIN
	  SELECT 'RETURNING'
      RETURN -99
	END 

   CREATE TABLE #TEMP0 (STOCKDATE DATETIME, STORE VARCHAR(25), STKCODE VARCHAR(20), STKDESC VARCHAR(255), STKUNIT VARCHAR(25), QTY DECIMAL(18,4), RATE DECIMAL(18,2))

   IF @STOCKDATE=@TODAY
    BEGIN
 
      IF @STORE = 'All' 
	      INSERT INTO #TEMP0 
	      SELECT @STOCKDATE,STKSTORE STORE,STKCODE STOCKCODE,STKDESC,STKUNIT,StkQuantity QTY,StkCostRate RATE
		  FROM   INVENTORY WHERE STKQUANTITY >0 AND LEFT(STKSTORE,4) = 'MS-9' ORDER BY STKSTORE,STKCODE  
      ELSE
	      INSERT INTO #TEMP0 
	      SELECT  @STOCKDATE,STKSTORE STORE,STKCODE STOCKCODE,STKDESC,STKUNIT,StkQuantity QTY,StkCostRate RATE
		  FROM   INVENTORY WHERE STKQUANTITY >0  AND STKSTORE=@STORE  ORDER BY STKSTORE,STKCODE 
	 END
	ELSE
	 BEGIN
	  IF @STORE = 'All' 
	      INSERT INTO #TEMP0 
	      SELECT CURRENTDATE,STORE,STOCKCODE ,SPACE(250) STKDESC,SPACE(25) STKUNIT,StkQuantity QTY,STKRATE RATE
		  FROM   BS.STOCKARCHIEVE WHERE STKQUANTITY >0 AND LEFT(STORE,4) = 'MS-9' 
		  AND CONVERT(DATE,CURRENTDATE)=@STOCKDATE ORDER BY STORE,STOCKCODE  
      ELSE
	      INSERT INTO #TEMP0 
	      SELECT CURRENTDATE,STORE,STOCKCODE ,SPACE(250) STKDESC,SPACE(25) STKUNIT,StkQuantity QTY,STKRATE RATE
		  FROM   BS.STOCKARCHIEVE WHERE STKQUANTITY >0  AND STORE=@STORE  
		  AND CONVERT(DATE,CURRENTDATE) = @STOCKDATE ORDER BY STORE,STOCKCODE  
	  UPDATE #TEMP0 
	  SET 
	    STKDESC = I.STKDESC,
		STKUNIT = I.STKUNIT
	  FROM INVENTORY I
	  INNER JOIN #TEMP0 ON #TEMP0.STORE = I.STKSTORE AND #TEMP0.STKCODE=I.StkCode  
     END 
	 
	 ALTER TABLE #TEMP0 ADD STORENAME  VARCHAR(250)
	 UPDATE #TEMP0 SET STORENAME=INS.STORENAME FROM INVSTORES INS INNER JOIN #TEMP0 ON INS.STORECODE = #TEMP0.STORE 


	 DECLARE @Random INT;
	 DECLARE @Upper INT;
	 DECLARE @Lower INT
 
	 SET @Lower = 1 ---- The lowest random number
	 SET @Upper = 999 ---- The highest random number
	 SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

	 SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
		+ (DATEPART(ss, GETDATE()) * 1000 )
		+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

	 SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))
     SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #TEMP0  ORDER BY STORE,STKCODE   '
	 EXEC(@SQL)
	 SELECT @FILENAME 
     RETURN @FILEID
 
  
 SELECT * FROM #TEMP0 
END