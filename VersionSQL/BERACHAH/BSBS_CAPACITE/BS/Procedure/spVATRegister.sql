/****** Object:  Procedure [BS].[spVATRegister]    Committed by VersionSQL https://www.versionsql.com ******/

 
CREATE PROCEDURE [BS].[spVATRegister] (@BORGID INT,@STARTDATESTRING VARCHAR(15), @ENDDATESTRING VARCHAR(15),@FINYEAR INT )
AS 
 
DECLARE @FILENAME VARCHAR(100)
DECLARE @FILEID   VARCHAR(10)
DECLARE @SQL      VARCHAR(250)


SET @FILENAME = 'BSBS_TEMP.DBO.VATREGISTER'

DECLARE @TRANSID       INT
DECLARE @TAXLEDGER     VARCHAR(10)
DECLARE @TRANGRP       VARCHAR(10)
DECLARE @STARTDATE     DATETIME
DECLARE @ENDDATE       DATETIME
DECLARE @TRANSTYPE     VARCHAR(10)
DECLARE @CREDITOR      VARCHAR(10)
DECLARE @TAXAMOUNT1     DECIMAL(18,2)
DECLARE @CREDNO        VARCHAR(10)
DECLARE @INVOICENUMBER VARCHAR(10)
DECLARE @INVOICEDATE   DATE
DECLARE @INVOICEAMOUNT DECIMAL(18,2)
DECLARE @NARRATION     VARCHAR(250)
DECLARE @ADDITIONAL    DECIMAL(18,2) 
DECLARE @BASEAMOUNT1   DECIMAL(18,2)
DECLARE @TAXPERCENT1   DECIMAL(5,2) 
DECLARE @TAXPERCENT2   DECIMAL(5,2)
DECLARE @TAXAMOUNT2    DECIMAL(18,2) 
DECLARE @TAXPERCENT    DECIMAL(5,2)
DECLARE @TAXAMOUNT     DECIMAL(18,2) 
DECLARE @BASEAMOUNT2   DECIMAL(18,2) 
DECLARE @SERVICETAX    VARCHAR(10)
DECLARE @STCNT INT 
DECLARE @CNT INT
DECLARE @EXTRACNT INT
DECLARE @ADDAMOUNT DECIMAL(18,2)
DECLARE @ADDTAX    DECIMAL(18,2) 
DECLARE @RETAINED  VARCHAR(10)
DECLARE @STAMOUNT  DECIMAL(18,2) 
DECLARE @PETTYCASH VARCHAR(10)
DECLARE @STARTINDEX INT
DECLARE @ENDINDEX   INT
DECLARE @ROWINDEX   INT
DECLARE @BANKSTART  VARCHAR(10)
DECLARE @BANKEND    VARCHAR(10)
DECLARE @CURSTATS   INT

SELECT @STARTDATE = CONVERT(DATETIME, @STARTDATESTRING,103) -- dd/mm/yyyy 
SELECT @ENDDATE   = CONVERT(DATETIME, @ENDDATESTRING,103) -- dd/mm/yyyy 

SELECT @TAXLEDGER = LEDGERCODE FROM VATGROUPS WHERE VATGC IN ('VI','VO')
SELECT @SERVICETAX = LEDGERCODE FROM VATGROUPS WHERE NAME = 'SERVICE TAX INPUT'
 

SELECT @CREDITOR = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Creditors' 
SELECT @RETAINED = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME='Retained Income'
SELECT @PETTYCASH = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME = 'Petty Cash'                         
SELECT @BANKSTART = CONTROLFROMGL FROM CONTROLCODES WHERE CONTROLNAME = 'Bank'   
SELECT @BANKEND =   CONTROLTOGL FROM CONTROLCODES WHERE CONTROLNAME = 'Bank'   


SELECT SUM(DEBIT-CREDIT) FROM TRANSACTIONS WHERE LEDGERCODE=@TAXLEDGER AND YEAR=@FINYEAR AND PDATE BETWEEN @STARTDATE AND @ENDDATE AND ORGID=@BORGID AND PERIOD<>0

SELECT COUNT(*) FROM TRANSACTIONS WHERE LEDGERCODE=@TAXLEDGER AND YEAR=@FINYEAR AND PDATE BETWEEN @STARTDATE AND @ENDDATE AND ORGID=@BORGID AND PERIOD<>0


CREATE TABLE #TEMP0 (TRANGRP INT,TRANSTYPE VARCHAR(3),CREDNO VARCHAR(10),PARTY VARCHAR(100),ORDERNUMBER VARCHAR(250), INVOICEDATE DATETIME,INVOICENUMBER VARCHAR(10), 
                     INVOICEAMOUNT DECIMAL(18,2), BASEAMOUNT1 DECIMAL(18,2),TAXPERCENT1 DECIMAL(5,2), TAXAMOUNT1 DECIMAL(18,2),
											      BASEAMOUNT2 DECIMAL(18,2),TAXPERCENT2 DECIMAL(5,2), TAXAMOUNT2 DECIMAL(18,2),ST DECIMAL(18,2),
					  ADDITIONAL DECIMAL(18,2) ) 


SELECT DISTINCT TRANGRP INTO #TEMP99 FROM TRANSACTIONS WHERE ORGID=@BORGID AND LEDGERCODE=@TAXLEDGER AND PDATE>=@STARTDATE  AND PDATE<=@ENDDATE AND YEAR=@FINYEAR AND PERIOD<>0 ORDER BY TRANGRP 

DECLARE TRANGRPS CURSOR FOR
SELECT DISTINCT TRANGRP FROM TRANSACTIONS WHERE ORGID=@BORGID AND LEDGERCODE=@TAXLEDGER AND PDATE>=@STARTDATE  AND PDATE<=@ENDDATE AND YEAR=@FINYEAR AND PERIOD<>0 ORDER BY TRANGRP 

OPEN TRANGRPS
FETCH  NEXT FROM TRANGRPS INTO @TRANGRP

WHILE @@FETCH_STATUS = 0
BEGIN

   SELECT  @TRANSTYPE = LEFT(BATCHREF,3)  FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP 
  
   IF @TRANSTYPE= 'DEL' 
    BEGIN
	  SET @STAMOUNT = 0 
	  SELECT @STCNT = COUNT(*)  FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@SERVICETAX
	  IF @STCNT >= 1
	     SELECT @STAMOUNT = SUM(DEBIT) FROM TRANSACTIONS WHERE TRANGRP = @TRANGRP AND LEDGERCODE = @SERVICETAX 

	  SELECT @CNT = COUNT(*) FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER
	  SET @EXTRACNT = 0
	  SET @ADDITIONAL = 0 
	  SELECT @EXTRACNT = COUNT(*) FROM TRANSACTIONS WHERE TRANGRP= @TRANGRP   AND (  LEDGERCODE = '5008014' OR 
																					 DESCRIPTION LIKE 'Transportation charges%'       OR
	  																		         DESCRIPTION LIKE 'Freight charges%'               )         
      SELECT 
	      @CREDNO=CREDNO,
		  @INVOICEDATE = RECEIVEDDATE,
		  @INVOICENUMBER = TRANSREF,
		  @INVOICEAMOUNT = CREDIT,
		  @NARRATION = DESCRIPTION 
	  FROM 
	      TRANSACTIONS 
	  WHERE 
	      TRANGRP = @TRANGRP AND LEDGERCODE = @CREDITOR 
	
	  SET @ADDITIONAL = 0 

      IF @EXTRACNT>=1
	  BEGIN
		SELECT @ADDITIONAL = SUM(DEBIT) FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND  ( LEDGERCODE = '5008014' OR 
		                                                                                DESCRIPTION LIKE 'Transportation charges%'     OR
																					    DESCRIPTION LIKE 'Freight charges%' OR
																						DESCRIPTION LIKE 'Freight Chages'           )
		 											                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
	    DECLARE ADDCURSOR CURSOR FOR
		SELECT TRANSID FROM TRANSACTIONS WHERE TRANGRP=@TRANGRP AND  ( DESCRIPTION LIKE 'Material Delivery Posting%' )
		OPEN ADDCURSOR
		FETCH NEXT FROM ADDCURSOR INTO @TRANSID 
		WHILE @@FETCH_STATUS  = 0 
		BEGIN
		   SELECT @ADDTAX = VATDEBIT , @ADDAMOUNT = DEBIT FROM TRANSACTIONS WHERE TRANSID = @TRANSID-1
		   IF @ADDTAX >0  SET @ADDITIONAL = @ADDITIONAL - @ADDAMOUNT
		   FETCH NEXT FROM ADDCURSOR INTO @TRANSID 
		END
		CLOSE ADDCURSOR
		DEALLOCATE ADDCURSOR 
	  END

	  IF @CNT =1 
	  BEGIN
	      SELECT @TRANSID = TRANSID FROM TRANSACTIONS WHERE  TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 
	      SELECT  @STARTINDEX= PATINDEX('%[1-9]%',LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS  WHERE TRANSID = @TRANSID   
		  SELECT  @ENDINDEX =  CHARINDEX('%', LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS      WHERE TRANSID = @TRANSID 
          SELECT @TAXPERCENT1 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT1 = DEBIT FROM TRANSACTIONS   WHERE TRANSID = @TRANSID    
		  SET @BASEAMOUNT1 = (@TAXAMOUNT1*100)/@TAXPERCENT1
	      INSERT INTO #TEMP0  VALUES (@TRANGRP,@TRANSTYPE,@CREDNO,'',@NARRATION,@INVOICEDATE,@INVOICENUMBER,@INVOICEAMOUNT,@BASEAMOUNT1,@TAXPERCENT1,@TAXAMOUNT1,0,0,0,@STAMOUNT,@ADDITIONAL) 
	  END

 
	  
	  IF @CNT>1 
	  BEGIN
	  
		 SET @TAXPERCENT1 = 0
		 SET @TAXAMOUNT1 = 0
		 SET @TAXPERCENT2 = 0
		 SET @TAXAMOUNT2 = 0
		 SET @BASEAMOUNT1= 0
		 SET @BASEAMOUNT2=0 
 
		 DECLARE MULTIVAT CURSOR FOR
		 SELECT TRANSID FROM TRANSACTIONS WHERE  TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 
		 OPEN MULTIVAT 
		 FETCH NEXT FROM MULTIVAT INTO @TRANSID 

		 WHILE @@FETCH_STATUS = 0 
		 BEGIN 
		   
			SELECT  @STARTINDEX= PATINDEX('%[1-9]%',LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS  WHERE TRANSID = @TRANSID   
			SELECT  @ENDINDEX =  CHARINDEX('%', LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS      WHERE TRANSID = @TRANSID 
 
	      
		    IF @TAXPERCENT1 = 0
		     BEGIN
			   
				 
			    SELECT @TAXPERCENT1 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT1 = DEBIT FROM TRANSACTIONS   WHERE TRANSID = @TRANSID    
				SET @BASEAMOUNT1 = (@TAXAMOUNT1*100)/@TAXPERCENT1
			 END
		    ELSE
		     BEGIN
			    SELECT @TAXPERCENT2 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT2 = DEBIT FROM TRANSACTIONS         WHERE TRANSID = @TRANSID    
				SET @BASEAMOUNT2 = (@TAXAMOUNT2*100)/@TAXPERCENT2
			 END 
			 

			 FETCH NEXT FROM MULTIVAT INTO @TRANSID 
		 END
		
		 INSERT INTO #TEMP0  VALUES (@TRANGRP,@TRANSTYPE,@CREDNO,'',@NARRATION,@INVOICEDATE,@INVOICENUMBER,
		                             @INVOICEAMOUNT,@BASEAMOUNT1,@TAXPERCENT1,@TAXAMOUNT1,@BASEAMOUNT2,@TAXPERCENT2,@TAXAMOUNT2,0,@ADDITIONAL) 
		 CLOSE MULTIVAT
		 DEALLOCATE MULTIVAT 
	   END
	   
     
     END
  

   IF @TRANSTYPE IN ( 'CRI' , 'CCN' ) 
   BEGIN
  	  SET @TAXPERCENT1 = 0
	  SET @TAXAMOUNT1 = 0
	  SET @BASEAMOUNT1 = 0
   	  SET @TAXPERCENT2 = 0
	  SET @TAXAMOUNT2 = 0
	  SET @BASEAMOUNT2= 0
	  SET @INVOICEAMOUNT = 0
	  SET @INVOICENUMBER = 0
	  SET @ADDITIONAL = 0

	  SELECT @INVOICEAMOUNT =ABS(CREDIT-DEBIT) ,@INVOICEDATE = PDATE, @INVOICENUMBER=TRANSREF,@CREDNO=CREDNO FROM 
	  TRANSACTIONS WHERE TRANGRP= @TRANGRP AND LEDGERCODE=@CREDITOR 

	  DECLARE VATS CURSOR FOR
	  SELECT TRANSID FROM TRANSACTIONS WHERE  TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 
	  OPEN VATS 
	  FETCH NEXT FROM VATS INTO @ROWINDEX
	  
  	  WHILE @@FETCH_STATUS = 0 
	  BEGIN 
	 
			SELECT  @STARTINDEX= PATINDEX('%[1-9]%',LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS  WHERE TRANSID = @ROWINDEX
			SELECT  @ENDINDEX =  CHARINDEX('%', LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS      WHERE TRANSID = @ROWINDEX
			IF (@ENDINDEX<=@STARTINDEX) 
				BEGIN
				  SELECT @TRANGRP,@ENDINDEX,@STARTINDEX 
				END
 		    IF @TAXPERCENT1 = 0
		     BEGIN
			    SELECT @TAXPERCENT1 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT1 = (DEBIT-CREDIT) FROM TRANSACTIONS   WHERE TRANSID = @ROWINDEX
				SELECT  @BASEAMOUNT1 =ABS(DEBIT-CREDIT) FROM TRANSACTIONS WHERE (VATDEBIT-VATCREDIT)=@TAXAMOUNT1 AND TRANGRP=@TRANGRP 
			 END
		    ELSE
		     BEGIN
			    SELECT @TAXPERCENT2 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT2 = (DEBIT-CREDIT) FROM TRANSACTIONS         WHERE TRANSID = @ROWINDEX
				SELECT  @BASEAMOUNT2 = ABS(DEBIT-CREDIT) FROM TRANSACTIONS WHERE (VATDEBIT-VATCREDIT)=@TAXAMOUNT2 AND TRANGRP=@TRANGRP 
			 END 
			
			 FETCH NEXT FROM VATS INTO @ROWINDEX
	  END
	  CLOSE VATS
      DEALLOCATE VATS 
 	  INSERT INTO #TEMP0  VALUES (@TRANGRP,@TRANSTYPE,@CREDNO,'',@NARRATION,@INVOICEDATE,@INVOICENUMBER,
		                             @INVOICEAMOUNT,@BASEAMOUNT1,@TAXPERCENT1,@TAXAMOUNT1,@BASEAMOUNT2,@TAXPERCENT2,@TAXAMOUNT2,0,@ADDITIONAL) 
		 
   END
 

   IF @TRANSTYPE IN ( 'PCP' , 'PCR') 
   BEGIN
  	  SET @TAXPERCENT1 = 0
	  SET @TAXAMOUNT1 = 0
	  SET @BASEAMOUNT1 = 0
   	  SET @TAXPERCENT2 = 0
	  SET @TAXAMOUNT2 = 0
	  SET @BASEAMOUNT2 = 0
	  SET @INVOICEAMOUNT = 0
	  SET @INVOICENUMBER = 0
	  SET @ADDITIONAL = 0

	  SELECT @INVOICEAMOUNT = ABS(CREDIT-DEBIT) ,@INVOICEDATE = PDATE, @INVOICENUMBER=TRANSREF,@CREDNO=CREDNO,@NARRATION=DESCRIPTION  FROM 
	  TRANSACTIONS WHERE TRANGRP= @TRANGRP AND LEDGERCODE=@PETTYCASH 

	  DECLARE VATS CURSOR FOR
	  SELECT TRANSID FROM TRANSACTIONS WHERE  TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 
	  OPEN VATS 
	  FETCH NEXT FROM VATS INTO @ROWINDEX
	  
  	  WHILE @@FETCH_STATUS = 0 
	  BEGIN 
	
			SELECT  @STARTINDEX=ISNULL( PATINDEX('%[1-9]%',LTRIM(RTRIM(DESCRIPTION))) ,0 ) FROM  TRANSACTIONS  WHERE TRANSID = @ROWINDEX
			SELECT  @ENDINDEX =ISNULL( CHARINDEX('%', LTRIM(RTRIM(DESCRIPTION))) ,0 ) FROM  TRANSACTIONS      WHERE TRANSID = @ROWINDEX
			 SELECT * FROM TRANSACTIONS WHERE TRANSID = @ROWINDEX 
			 SELECT 'HOWS'
			 SELECT @STARTINDEX ,@ENDINDEX ,@TAXPERCENT1
			IF (@ENDINDEX<=@STARTINDEX) 
				BEGIN
				  SELECT @TRANGRP,@ENDINDEX,@STARTINDEX 
				END
 		    IF @TAXPERCENT1 = 0
		     BEGIN
			    SELECT 'REACHED HERE'
			    SELECT @TAXPERCENT1 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT1 = (DEBIT-CREDIT) FROM TRANSACTIONS   WHERE TRANSID = @ROWINDEX AND @STARTINDEX <>0 
				SELECT  @BASEAMOUNT1 =ABS(DEBIT-CREDIT) FROM TRANSACTIONS WHERE (VATDEBIT-VATCREDIT)=@TAXAMOUNT1 AND TRANGRP=@TRANGRP 
				
				SELECT @TAXPERCENT1,@TAXAMOUNT1,@BASEAMOUNT1 
			 END
		    ELSE
		     BEGIN
			    SELECT @TAXPERCENT2 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT2 = (DEBIT-CREDIT) FROM TRANSACTIONS         WHERE TRANSID = @ROWINDEX
				SELECT  @BASEAMOUNT2 =ABS(DEBIT-CREDIT) FROM TRANSACTIONS WHERE (VATDEBIT-VATCREDIT)=@TAXAMOUNT2 AND TRANGRP=@TRANGRP 
			 END 
		 
			 FETCH NEXT FROM VATS INTO @ROWINDEX
	  END
	  CLOSE VATS
      DEALLOCATE VATS 
 	  INSERT INTO #TEMP0  VALUES (@TRANGRP,@TRANSTYPE,@CREDNO,'',@NARRATION,@INVOICEDATE,@INVOICENUMBER,
		                             @INVOICEAMOUNT,@BASEAMOUNT1,@TAXPERCENT1,@TAXAMOUNT1,@BASEAMOUNT2,@TAXPERCENT2,@TAXAMOUNT2,0,@ADDITIONAL) 
		 
   END
 
 
   IF @TRANSTYPE IN ( 'CBC' , 'CBD' ) 
     BEGIN
  	  SET @TAXPERCENT1 = 0
	  SET @TAXAMOUNT1 = 0
	  SET @BASEAMOUNT1 = 0
   	  SET @TAXPERCENT2 = 0
	  SET @TAXAMOUNT2 = 0
	  SET @BASEAMOUNT2 = 0
	  SET @INVOICEAMOUNT = 0
	  SET @INVOICENUMBER = 0
	  SET @ADDITIONAL = 0
	


	  SELECT @INVOICEAMOUNT =ABS(CREDIT-DEBIT) ,@INVOICEDATE = PDATE, @INVOICENUMBER=TRANSREF,@CREDNO=CREDNO, @NARRATION=DESCRIPTION  FROM 
	  TRANSACTIONS WHERE TRANGRP= @TRANGRP AND ( LEDGERCODE BETWEEN @BANKSTART AND @BANKEND  OR LEDGERCODE= @PETTYCASH ) 
	
	  DECLARE VATS CURSOR FOR
	  SELECT TRANSID FROM TRANSACTIONS WHERE  TRANGRP=@TRANGRP AND LEDGERCODE=@TAXLEDGER 
	  OPEN VATS 
	  FETCH NEXT FROM VATS INTO @ROWINDEX
	  
  	  WHILE @@FETCH_STATUS = 0 
	  BEGIN 
	 
			SELECT  @STARTINDEX= PATINDEX('%[1-9]%',LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS  WHERE TRANSID = @ROWINDEX
			SELECT  @ENDINDEX =  CHARINDEX('%', LTRIM(RTRIM(DESCRIPTION))) FROM  TRANSACTIONS      WHERE TRANSID = @ROWINDEX
		
 		    IF @TAXPERCENT1 = 0
		     BEGIN
			    SELECT @TAXPERCENT1 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT1 = (DEBIT-CREDIT) FROM TRANSACTIONS   WHERE TRANSID = @ROWINDEX
				SELECT  @BASEAMOUNT1 = ABS(DEBIT-CREDIT)  FROM TRANSACTIONS WHERE  (VATDEBIT-VATCREDIT) =@TAXAMOUNT1 AND TRANGRP=@TRANGRP 
			 END
		    ELSE
		     BEGIN
			    SELECT @TAXPERCENT2 =SUBSTRING(LTRIM(RTRIM(DESCRIPTION)),@STARTINDEX,(@ENDINDEX-@STARTINDEX)) ,
				       @TAXAMOUNT2 = (DEBIT - CREDIT) FROM TRANSACTIONS         WHERE TRANSID = @ROWINDEX
				SELECT  @BASEAMOUNT2 =ABS(DEBIT-CREDIT) FROM TRANSACTIONS WHERE (VATDEBIT-VATCREDIT) =@TAXAMOUNT2 AND TRANGRP=@TRANGRP 
			 END 
		 
			 FETCH NEXT FROM VATS INTO @ROWINDEX
	  END
	  CLOSE VATS
      DEALLOCATE VATS 
 	  INSERT INTO #TEMP0  VALUES (@TRANGRP,@TRANSTYPE,@CREDNO,'',@NARRATION,@INVOICEDATE,@INVOICENUMBER,
		                             @INVOICEAMOUNT,@BASEAMOUNT1,@TAXPERCENT1,@TAXAMOUNT1,@BASEAMOUNT2,@TAXPERCENT2,@TAXAMOUNT2,0,@ADDITIONAL) 
		 
   END
 
   IF @TRANSTYPE='JNL'
   BEGIN
      INSERT INTO #TEMP0  
	  SELECT @TRANGRP,'JNL',SPACE(10),SPACE(10),DESCRIPTION, PDATE,TRANSREF,0,0,0,(DEBIT-CREDIT),0,0,0,0,0  FROM TRANSACTIONS 
	  WHERE TRANGRP = @TRANGRP AND LEDGERCODE=@TAXLEDGER 
   END



   FETCH  NEXT FROM TRANGRPS INTO @TRANGRP
END
CLOSE TRANGRPS
DEALLOCATE TRANGRPS



ALTER TABLE #TEMP0 ADD TIN          VARCHAR(15)
ALTER TABLE #TEMP0 ADD BORGID INT
ALTER TABLE #TEMP0 ADD BORGNAME VARCHAR(200)
ALTER TABLE #TEMP0 ADD STARTDATE VARCHAR(20)
ALTER TABLE #TEMP0 ADD ENDDATE   VARCHAR(20)

UPDATE #TEMP0 SET PARTY = C.CREDNAME FROM CREDITORS C INNER JOIN #TEMP0 ON #TEMP0.CREDNO=C.CredNumber
UPDATE #TEMP0 SET BORGID = @BORGID
UPDATE #TEMP0 SET BORGNAME = B.BORGNAME FROM BORGS B INNER JOIN #TEMP0 ON #TEMP0.BORGID= B.BORGID
UPDATE #TEMP0 SET STARTDATE = @STARTDATESTRING
UPDATE #TEMP0 SET ENDDATE = @ENDDATESTRING 


ALTER TABLE #TEMP0 ADD GROUPID INT
UPDATE #TEMP0 SET GROUPID=0
UPDATE #TEMP0 SET GROUPID=1 WHERE BASEAMOUNT2>0 




DECLARE @Random INT;
DECLARE @Upper INT;
DECLARE @Lower INT
 
SET @Lower = 1 ---- The lowest random number
SET @Upper = 999 ---- The highest random number
SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)

SELECT @FILEID= CONVERT(INT,RAND( (DATEPART(mm, GETDATE()) * 100000 )
	+ (DATEPART(ss, GETDATE()) * 1000 )
	+ DATEPART(ms, GETDATE()) )*1000) + STR(@RANDOM) 

SET @FILENAME = @FILENAME+LTRIM(RTRIM(CONVERT(VARCHAR(6),@FILEID)))

SET @SQL = 'SELECT *  INTO '+@FILENAME+ ' FROM   #TEMP0  ORDER BY TRANGRP,TAXPERCENT1'
 
SELECT * FROM #TEMP0 ORDER BY TAXPERCENT1

EXEC(@SQL)

RETURN @FILEID
 